<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="838.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="821" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="821" > </text>
<g id="frames">
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;::_Rb_tree_iterator (23 samples, 0.02%)</title><rect x="805.4" y="325" width="0.2" height="15.0" fill="rgb(253,162,49)" rx="2" ry="2" />
<text  x="808.35" y="335.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MergingIterator::Next (28 samples, 0.03%)</title><rect x="42.0" y="613" width="0.4" height="15.0" fill="rgb(238,129,21)" rx="2" ry="2" />
<text  x="45.04" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (36 samples, 0.04%)</title><rect x="569.1" y="453" width="0.5" height="15.0" fill="rgb(220,11,53)" rx="2" ry="2" />
<text  x="572.12" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;::_M_valptr (28 samples, 0.03%)</title><rect x="1017.1" y="597" width="0.4" height="15.0" fill="rgb(250,169,27)" rx="2" ry="2" />
<text  x="1020.11" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::destroy&lt;char&gt; (12 samples, 0.01%)</title><rect x="41.4" y="453" width="0.1" height="15.0" fill="rgb(247,61,31)" rx="2" ry="2" />
<text  x="44.35" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_valptr (28 samples, 0.03%)</title><rect x="1160.4" y="741" width="0.4" height="15.0" fill="rgb(236,13,21)" rx="2" ry="2" />
<text  x="1163.42" y="751.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (2,189 samples, 2.38%)</title><rect x="380.3" y="597" width="28.0" height="15.0" fill="rgb(206,117,11)" rx="2" ry="2" />
<text  x="383.32" y="607.5" >s..</text>
</g>
<g >
<title>Arena::alloc (480 samples, 0.52%)</title><rect x="565.6" y="533" width="6.2" height="15.0" fill="rgb(242,122,30)" rx="2" ry="2" />
<text  x="568.64" y="543.5" ></text>
</g>
<g >
<title>CWallet::AddToSpends (17 samples, 0.02%)</title><rect x="17.9" y="757" width="0.2" height="15.0" fill="rgb(243,156,34)" rx="2" ry="2" />
<text  x="20.89" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_Rb_tree_impl&lt;std::less&lt;COutPoint&gt;, true&gt;::~_Rb_tree_impl (20 samples, 0.02%)</title><rect x="1052.5" y="629" width="0.3" height="15.0" fill="rgb(213,113,29)" rx="2" ry="2" />
<text  x="1055.51" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::empty (29 samples, 0.03%)</title><rect x="1053.6" y="661" width="0.4" height="15.0" fill="rgb(225,2,10)" rx="2" ry="2" />
<text  x="1056.60" y="671.5" ></text>
</g>
<g >
<title>CScriptWitness::~CScriptWitness (43 samples, 0.05%)</title><rect x="503.8" y="293" width="0.5" height="15.0" fill="rgb(250,217,22)" rx="2" ry="2" />
<text  x="506.80" y="303.5" ></text>
</g>
<g >
<title>ShiftMessageC (10 samples, 0.01%)</title><rect x="1144.2" y="149" width="0.1" height="15.0" fill="rgb(222,161,14)" rx="2" ry="2" />
<text  x="1147.17" y="159.5" ></text>
</g>
<g >
<title>__strlen_avx2 (43 samples, 0.05%)</title><rect x="541.3" y="597" width="0.5" height="15.0" fill="rgb(211,171,51)" rx="2" ry="2" />
<text  x="544.28" y="607.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt; &gt;::find (70 samples, 0.08%)</title><rect x="631.0" y="549" width="0.9" height="15.0" fill="rgb(242,79,37)" rx="2" ry="2" />
<text  x="634.04" y="559.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (23 samples, 0.02%)</title><rect x="591.3" y="565" width="0.3" height="15.0" fill="rgb(243,4,9)" rx="2" ry="2" />
<text  x="594.34" y="575.5" ></text>
</g>
<g >
<title>CWalletTx::CWalletTx (16 samples, 0.02%)</title><rect x="18.6" y="757" width="0.2" height="15.0" fill="rgb(220,99,5)" rx="2" ry="2" />
<text  x="21.57" y="767.5" ></text>
</g>
<g >
<title>ShiftMessageC (16 samples, 0.02%)</title><rect x="1140.4" y="149" width="0.2" height="15.0" fill="rgb(212,23,39)" rx="2" ry="2" />
<text  x="1143.41" y="159.5" ></text>
</g>
<g >
<title>__memp_fput (17 samples, 0.02%)</title><rect x="90.5" y="405" width="0.2" height="15.0" fill="rgb(242,218,13)" rx="2" ry="2" />
<text  x="93.50" y="415.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, unsigned char, std::allocator&lt;unsigned char&gt; &gt; (260 samples, 0.28%)</title><rect x="514.0" y="293" width="3.3" height="15.0" fill="rgb(243,116,25)" rx="2" ry="2" />
<text  x="516.98" y="303.5" ></text>
</g>
<g >
<title>CWalletTx::GetHash (31 samples, 0.03%)</title><rect x="1025.9" y="677" width="0.4" height="15.0" fill="rgb(247,59,28)" rx="2" ry="2" />
<text  x="1028.91" y="687.5" ></text>
</g>
<g >
<title>Unserialize_impl&lt;CDataStream, CTxIn, std::allocator&lt;CTxIn&gt;, CTxIn&gt; (978 samples, 1.06%)</title><rect x="434.1" y="373" width="12.6" height="15.0" fill="rgb(239,33,35)" rx="2" ry="2" />
<text  x="437.13" y="383.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;::operator (13 samples, 0.01%)</title><rect x="845.9" y="517" width="0.2" height="15.0" fill="rgb(217,216,29)" rx="2" ry="2" />
<text  x="848.89" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (17 samples, 0.02%)</title><rect x="1084.8" y="517" width="0.3" height="15.0" fill="rgb(227,32,31)" rx="2" ry="2" />
<text  x="1087.85" y="527.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.01%)</title><rect x="102.0" y="261" width="0.1" height="15.0" fill="rgb(250,159,9)" rx="2" ry="2" />
<text  x="104.98" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_get_insert_unique_pos (161 samples, 0.17%)</title><rect x="1044.4" y="629" width="2.0" height="15.0" fill="rgb(253,20,23)" rx="2" ry="2" />
<text  x="1047.38" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::operator* (13 samples, 0.01%)</title><rect x="1055.3" y="597" width="0.1" height="15.0" fill="rgb(234,89,39)" rx="2" ry="2" />
<text  x="1058.26" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::operator= (9 samples, 0.01%)</title><rect x="1182.4" y="757" width="0.1" height="15.0" fill="rgb(252,171,12)" rx="2" ry="2" />
<text  x="1185.42" y="767.5" ></text>
</g>
<g >
<title>ShiftMessageB (27 samples, 0.03%)</title><rect x="1136.7" y="661" width="0.4" height="15.0" fill="rgb(249,68,42)" rx="2" ry="2" />
<text  x="1139.74" y="671.5" ></text>
</g>
<g >
<title>CHashWriter::GetVersion (11 samples, 0.01%)</title><rect x="483.8" y="341" width="0.1" height="15.0" fill="rgb(232,142,7)" rx="2" ry="2" />
<text  x="486.75" y="351.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (11 samples, 0.01%)</title><rect x="851.2" y="565" width="0.1" height="15.0" fill="rgb(230,129,37)" rx="2" ry="2" />
<text  x="854.20" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;CTxIn const*, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt; (21 samples, 0.02%)</title><rect x="1043.3" y="661" width="0.3" height="15.0" fill="rgb(232,18,13)" rx="2" ry="2" />
<text  x="1046.33" y="671.5" ></text>
</g>
<g >
<title>CHash160::Write (13 samples, 0.01%)</title><rect x="658.9" y="645" width="0.2" height="15.0" fill="rgb(207,42,41)" rx="2" ry="2" />
<text  x="661.88" y="655.5" ></text>
</g>
<g >
<title>CHash160::Finalize (1,580 samples, 1.71%)</title><rect x="695.4" y="597" width="20.2" height="15.0" fill="rgb(227,95,13)" rx="2" ry="2" />
<text  x="698.36" y="607.5" ></text>
</g>
<g >
<title>CScriptID::CScriptID (153 samples, 0.17%)</title><rect x="1126.2" y="661" width="1.9" height="15.0" fill="rgb(214,84,24)" rx="2" ry="2" />
<text  x="1129.18" y="671.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, unsigned int&amp;&gt; (52 samples, 0.06%)</title><rect x="40.9" y="581" width="0.6" height="15.0" fill="rgb(228,106,33)" rx="2" ry="2" />
<text  x="43.88" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_put_node (13 samples, 0.01%)</title><rect x="547.3" y="533" width="0.2" height="15.0" fill="rgb(250,90,26)" rx="2" ry="2" />
<text  x="550.30" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (56 samples, 0.06%)</title><rect x="764.4" y="421" width="0.7" height="15.0" fill="rgb(238,153,35)" rx="2" ry="2" />
<text  x="767.37" y="431.5" ></text>
</g>
<g >
<title>CRIPEMD160::Write (42 samples, 0.05%)</title><rect x="865.9" y="597" width="0.6" height="15.0" fill="rgb(206,101,32)" rx="2" ry="2" />
<text  x="868.94" y="607.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (12 samples, 0.01%)</title><rect x="64.0" y="517" width="0.1" height="15.0" fill="rgb(244,69,38)" rx="2" ry="2" />
<text  x="66.95" y="527.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;CWalletTx&amp;&gt; (901 samples, 0.98%)</title><rect x="1107.7" y="725" width="11.5" height="15.0" fill="rgb(239,72,12)" rx="2" ry="2" />
<text  x="1110.65" y="735.5" ></text>
</g>
<g >
<title>__bam_search (268 samples, 0.29%)</title><rect x="134.2" y="485" width="3.4" height="15.0" fill="rgb(254,207,0)" rx="2" ry="2" />
<text  x="137.20" y="495.5" ></text>
</g>
<g >
<title>CTxOut::CTxOut (25 samples, 0.03%)</title><rect x="509.5" y="309" width="0.3" height="15.0" fill="rgb(213,103,36)" rx="2" ry="2" />
<text  x="512.46" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned char*, secure_allocator&lt;unsigned char&gt; &gt; (112 samples, 0.12%)</title><rect x="626.7" y="645" width="1.4" height="15.0" fill="rgb(230,86,50)" rx="2" ry="2" />
<text  x="629.71" y="655.5" ></text>
</g>
<g >
<title>operator new (49 samples, 0.05%)</title><rect x="469.8" y="277" width="0.6" height="15.0" fill="rgb(231,39,14)" rx="2" ry="2" />
<text  x="472.77" y="287.5" ></text>
</g>
<g >
<title>FillableSigningProvider::ImplicitlyLearnRelatedKeyScripts (12 samples, 0.01%)</title><rect x="20.1" y="757" width="0.1" height="15.0" fill="rgb(250,191,26)" rx="2" ry="2" />
<text  x="23.09" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_insert_unique_pos (54 samples, 0.06%)</title><rect x="420.8" y="549" width="0.7" height="15.0" fill="rgb(212,3,11)" rx="2" ry="2" />
<text  x="423.80" y="559.5" ></text>
</g>
<g >
<title>std::pair&lt;void*, CLockLocation&gt;::pair&lt;void*&amp;, true&gt; (91 samples, 0.10%)</title><rect x="947.9" y="517" width="1.1" height="15.0" fill="rgb(221,202,40)" rx="2" ry="2" />
<text  x="950.87" y="527.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;char*&gt; (11 samples, 0.01%)</title><rect x="636.2" y="517" width="0.1" height="15.0" fill="rgb(238,169,21)" rx="2" ry="2" />
<text  x="639.17" y="527.5" ></text>
</g>
<g >
<title>CHash256::Write (271 samples, 0.29%)</title><rect x="1137.3" y="213" width="3.5" height="15.0" fill="rgb(250,161,8)" rx="2" ry="2" />
<text  x="1140.31" y="223.5" ></text>
</g>
<g >
<title>std::mutex::unlock (13 samples, 0.01%)</title><rect x="815.7" y="373" width="0.2" height="15.0" fill="rgb(236,154,45)" rx="2" ry="2" />
<text  x="818.74" y="383.5" ></text>
</g>
<g >
<title>InitSignatureCache (68 samples, 0.07%)</title><rect x="30.5" y="709" width="0.9" height="15.0" fill="rgb(242,192,16)" rx="2" ry="2" />
<text  x="33.53" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;char* const, unsigned long&gt; &gt;::_M_v (15 samples, 0.02%)</title><rect x="1166.6" y="757" width="0.1" height="15.0" fill="rgb(241,170,27)" rx="2" ry="2" />
<text  x="1169.55" y="767.5" ></text>
</g>
<g >
<title>_mm_set_epi64x (14 samples, 0.02%)</title><rect x="1127.1" y="549" width="0.2" height="15.0" fill="rgb(227,112,3)" rx="2" ry="2" />
<text  x="1130.09" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;CChainState, std::default_delete&lt;CChainState&gt; &gt;::operator (10 samples, 0.01%)</title><rect x="959.9" y="629" width="0.1" height="15.0" fill="rgb(248,11,40)" rx="2" ry="2" />
<text  x="962.90" y="639.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned char const*, unsigned char*&gt; (9 samples, 0.01%)</title><rect x="693.5" y="565" width="0.1" height="15.0" fill="rgb(224,225,23)" rx="2" ry="2" />
<text  x="696.53" y="575.5" ></text>
</g>
<g >
<title>CTxOut::CTxOut (40 samples, 0.04%)</title><rect x="454.1" y="261" width="0.5" height="15.0" fill="rgb(215,119,51)" rx="2" ry="2" />
<text  x="457.11" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_S_value (72 samples, 0.08%)</title><rect x="778.8" y="533" width="0.9" height="15.0" fill="rgb(233,45,15)" rx="2" ry="2" />
<text  x="781.79" y="543.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt; (271 samples, 0.29%)</title><rect x="1137.3" y="469" width="3.5" height="15.0" fill="rgb(251,177,44)" rx="2" ry="2" />
<text  x="1140.31" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;LockedPool::LockedPageArena&gt;::_M_ptr (23 samples, 0.02%)</title><rect x="814.9" y="357" width="0.3" height="15.0" fill="rgb(224,87,44)" rx="2" ry="2" />
<text  x="817.93" y="367.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (222 samples, 0.24%)</title><rect x="148.7" y="533" width="2.9" height="15.0" fill="rgb(232,42,13)" rx="2" ry="2" />
<text  x="151.73" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::size (13 samples, 0.01%)</title><rect x="932.8" y="597" width="0.2" height="15.0" fill="rgb(238,6,4)" rx="2" ry="2" />
<text  x="935.82" y="607.5" ></text>
</g>
<g >
<title>CScript::operator&lt;&lt; (450 samples, 0.49%)</title><rect x="760.1" y="469" width="5.8" height="15.0" fill="rgb(234,84,19)" rx="2" ry="2" />
<text  x="763.11" y="479.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;unsigned char, unsigned char&gt; (15 samples, 0.02%)</title><rect x="466.5" y="245" width="0.2" height="15.0" fill="rgb(243,101,6)" rx="2" ry="2" />
<text  x="469.54" y="255.5" ></text>
</g>
<g >
<title>operator&lt; (11 samples, 0.01%)</title><rect x="824.1" y="565" width="0.1" height="15.0" fill="rgb(234,67,32)" rx="2" ry="2" />
<text  x="827.09" y="575.5" ></text>
</g>
<g >
<title>[unknown] (31 samples, 0.03%)</title><rect x="123.4" y="437" width="0.4" height="15.0" fill="rgb(229,67,41)" rx="2" ry="2" />
<text  x="126.43" y="447.5" ></text>
</g>
<g >
<title>CHash256::Write (10 samples, 0.01%)</title><rect x="500.0" y="277" width="0.1" height="15.0" fill="rgb(211,55,2)" rx="2" ry="2" />
<text  x="502.97" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_Vector_impl::_Vector_impl (10 samples, 0.01%)</title><rect x="1069.1" y="645" width="0.1" height="15.0" fill="rgb(249,157,25)" rx="2" ry="2" />
<text  x="1072.09" y="655.5" ></text>
</g>
<g >
<title>SeedStrengthen (399 samples, 0.43%)</title><rect x="1184.5" y="629" width="5.1" height="15.0" fill="rgb(239,9,0)" rx="2" ry="2" />
<text  x="1187.48" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (248 samples, 0.27%)</title><rect x="612.6" y="533" width="3.2" height="15.0" fill="rgb(241,212,39)" rx="2" ry="2" />
<text  x="615.59" y="543.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, zero_after_free_allocator&lt;char&gt; &gt; (8,208 samples, 8.91%)</title><rect x="186.1" y="613" width="105.2" height="15.0" fill="rgb(237,177,18)" rx="2" ry="2" />
<text  x="189.14" y="623.5" >std::__unini..</text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::end (16 samples, 0.02%)</title><rect x="853.6" y="613" width="0.2" height="15.0" fill="rgb(217,222,54)" rx="2" ry="2" />
<text  x="856.61" y="623.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (594 samples, 0.64%)</title><rect x="125.3" y="501" width="7.6" height="15.0" fill="rgb(241,201,17)" rx="2" ry="2" />
<text  x="128.29" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;COutPoint, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::set (53 samples, 0.06%)</title><rect x="1050.3" y="661" width="0.7" height="15.0" fill="rgb(248,120,15)" rx="2" ry="2" />
<text  x="1053.28" y="671.5" ></text>
</g>
<g >
<title>std::bitset&lt;8ul&gt;::reset (24 samples, 0.03%)</title><rect x="956.0" y="613" width="0.3" height="15.0" fill="rgb(220,152,51)" rx="2" ry="2" />
<text  x="959.04" y="623.5" ></text>
</g>
<g >
<title>SerializeTransaction&lt;CHashWriter, CTransaction&gt; (1,317 samples, 1.43%)</title><rect x="483.2" y="357" width="16.9" height="15.0" fill="rgb(240,141,0)" rx="2" ry="2" />
<text  x="486.24" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (9 samples, 0.01%)</title><rect x="633.8" y="453" width="0.2" height="15.0" fill="rgb(215,131,51)" rx="2" ry="2" />
<text  x="636.84" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::construct&lt;std::pair&lt;void*, CLockLocation&gt;, std::pair&lt;void*, CLockLocation&gt; &gt; (62 samples, 0.07%)</title><rect x="949.8" y="501" width="0.8" height="15.0" fill="rgb(240,227,41)" rx="2" ry="2" />
<text  x="952.79" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_Vector_impl::~_Vector_impl (22 samples, 0.02%)</title><rect x="521.4" y="309" width="0.3" height="15.0" fill="rgb(250,212,5)" rx="2" ry="2" />
<text  x="524.41" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_S_max_size (8 samples, 0.01%)</title><rect x="589.8" y="565" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="592.83" y="575.5" ></text>
</g>
<g >
<title>std::advance&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt;, unsigned long&gt; (22 samples, 0.02%)</title><rect x="1097.8" y="629" width="0.3" height="15.0" fill="rgb(234,14,23)" rx="2" ry="2" />
<text  x="1100.83" y="639.5" ></text>
</g>
<g >
<title>Serialize&lt;CSizeComputer&gt; (32 samples, 0.03%)</title><rect x="1041.2" y="453" width="0.4" height="15.0" fill="rgb(239,211,28)" rx="2" ry="2" />
<text  x="1044.17" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;CMerkleTx&gt;::allocator (12 samples, 0.01%)</title><rect x="556.4" y="581" width="0.2" height="15.0" fill="rgb(214,52,34)" rx="2" ry="2" />
<text  x="559.41" y="591.5" ></text>
</g>
<g >
<title>[unknown] (30 samples, 0.03%)</title><rect x="123.4" y="421" width="0.4" height="15.0" fill="rgb(243,211,36)" rx="2" ry="2" />
<text  x="126.44" y="431.5" ></text>
</g>
<g >
<title>CScriptWitness::IsNull (18 samples, 0.02%)</title><rect x="520.4" y="325" width="0.3" height="15.0" fill="rgb(239,114,27)" rx="2" ry="2" />
<text  x="523.45" y="335.5" ></text>
</g>
<g >
<title>std::less&lt;uint256&gt;::operator (22 samples, 0.02%)</title><rect x="1174.1" y="757" width="0.3" height="15.0" fill="rgb(240,18,14)" rx="2" ry="2" />
<text  x="1177.09" y="767.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (10 samples, 0.01%)</title><rect x="530.4" y="565" width="0.1" height="15.0" fill="rgb(218,144,15)" rx="2" ry="2" />
<text  x="533.41" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_S_value (49 samples, 0.05%)</title><rect x="688.8" y="565" width="0.6" height="15.0" fill="rgb(221,80,28)" rx="2" ry="2" />
<text  x="691.78" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;CTransaction&gt;::construct&lt;CTransaction const, deserialize_type const&amp;, CDataStream&amp;&gt; (352 samples, 0.38%)</title><rect x="162.5" y="597" width="4.5" height="15.0" fill="rgb(237,165,38)" rx="2" ry="2" />
<text  x="165.53" y="607.5" ></text>
</g>
<g >
<title>__bam_stkrel (16 samples, 0.02%)</title><rect x="139.2" y="485" width="0.2" height="15.0" fill="rgb(228,61,4)" rx="2" ry="2" />
<text  x="142.21" y="495.5" ></text>
</g>
<g >
<title>boost::detail::variant::invoke_visitor&lt;(anonymous namespace)::CScriptVisitor const, false&gt;::internal_visit&lt;WitnessV0KeyHash const&amp;&gt; (815 samples, 0.88%)</title><rect x="759.1" y="485" width="10.4" height="15.0" fill="rgb(227,212,42)" rx="2" ry="2" />
<text  x="762.06" y="495.5" ></text>
</g>
<g >
<title>__dbc_cleanup (9 samples, 0.01%)</title><rect x="110.1" y="453" width="0.1" height="15.0" fill="rgb(251,166,47)" rx="2" ry="2" />
<text  x="113.08" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::allocate (56 samples, 0.06%)</title><rect x="822.0" y="549" width="0.7" height="15.0" fill="rgb(246,23,23)" rx="2" ry="2" />
<text  x="825.03" y="559.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream&gt; (8 samples, 0.01%)</title><rect x="26.6" y="757" width="0.1" height="15.0" fill="rgb(227,143,21)" rx="2" ry="2" />
<text  x="29.62" y="767.5" ></text>
</g>
<g >
<title>CScript::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (279 samples, 0.30%)</title><rect x="1140.8" y="309" width="3.6" height="15.0" fill="rgb(209,25,48)" rx="2" ry="2" />
<text  x="1143.78" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt;::allocate (13 samples, 0.01%)</title><rect x="807.4" y="293" width="0.2" height="15.0" fill="rgb(245,146,30)" rx="2" ry="2" />
<text  x="810.42" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt;::destroy&lt;std::pair&lt;void*, CLockLocation&gt; &gt; (13 samples, 0.01%)</title><rect x="850.9" y="565" width="0.1" height="15.0" fill="rgb(223,6,8)" rx="2" ry="2" />
<text  x="853.88" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::_Vector_base (43 samples, 0.05%)</title><rect x="522.8" y="421" width="0.5" height="15.0" fill="rgb(243,31,24)" rx="2" ry="2" />
<text  x="525.75" y="431.5" ></text>
</g>
<g >
<title>BerkeleyEnvironment::~BerkeleyEnvironment (13 samples, 0.01%)</title><rect x="162.4" y="517" width="0.1" height="15.0" fill="rgb(218,62,23)" rx="2" ry="2" />
<text  x="165.36" y="527.5" ></text>
</g>
<g >
<title>ReadCompactSize&lt;CDataStream&gt; (51 samples, 0.06%)</title><rect x="458.9" y="325" width="0.7" height="15.0" fill="rgb(238,157,34)" rx="2" ry="2" />
<text  x="461.91" y="335.5" ></text>
</g>
<g >
<title>CTxOut::Serialize&lt;CHashWriter&gt; (183 samples, 0.20%)</title><rect x="164.7" y="389" width="2.3" height="15.0" fill="rgb(232,9,12)" rx="2" ry="2" />
<text  x="167.69" y="399.5" ></text>
</g>
<g >
<title>__db_lget (65 samples, 0.07%)</title><rect x="75.8" y="421" width="0.8" height="15.0" fill="rgb(217,103,27)" rx="2" ry="2" />
<text  x="78.76" y="431.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, unsigned int&gt; (63 samples, 0.07%)</title><rect x="488.7" y="165" width="0.8" height="15.0" fill="rgb(237,128,21)" rx="2" ry="2" />
<text  x="491.66" y="175.5" ></text>
</g>
<g >
<title>__bam_get_root (23 samples, 0.02%)</title><rect x="112.4" y="405" width="0.3" height="15.0" fill="rgb(226,120,31)" rx="2" ry="2" />
<text  x="115.38" y="415.5" ></text>
</g>
<g >
<title>__bam_cmp (23 samples, 0.02%)</title><rect x="66.1" y="469" width="0.3" height="15.0" fill="rgb(206,147,53)" rx="2" ry="2" />
<text  x="69.07" y="479.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;char*&gt; (33 samples, 0.04%)</title><rect x="1089.9" y="533" width="0.5" height="15.0" fill="rgb(237,203,41)" rx="2" ry="2" />
<text  x="1092.93" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_value (412 samples, 0.45%)</title><rect x="875.4" y="533" width="5.3" height="15.0" fill="rgb(254,66,6)" rx="2" ry="2" />
<text  x="878.43" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt; &gt;::base (22 samples, 0.02%)</title><rect x="179.5" y="629" width="0.3" height="15.0" fill="rgb(244,203,16)" rx="2" ry="2" />
<text  x="182.48" y="639.5" ></text>
</g>
<g >
<title>CScript::Serialize&lt;CHashWriter&gt; (271 samples, 0.29%)</title><rect x="1137.3" y="325" width="3.5" height="15.0" fill="rgb(209,185,11)" rx="2" ry="2" />
<text  x="1140.31" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::destroy&lt;char&gt; (8 samples, 0.01%)</title><rect x="1172.1" y="741" width="0.1" height="15.0" fill="rgb(217,176,6)" rx="2" ry="2" />
<text  x="1175.07" y="751.5" ></text>
</g>
<g >
<title>CSHA256::Write (19 samples, 0.02%)</title><rect x="497.0" y="37" width="0.2" height="15.0" fill="rgb(246,36,54)" rx="2" ry="2" />
<text  x="499.96" y="47.5" ></text>
</g>
<g >
<title>std::vector&lt;CMerkleTx, std::allocator&lt;CMerkleTx&gt; &gt;::_M_erase_at_end (20 samples, 0.02%)</title><rect x="529.0" y="565" width="0.3" height="15.0" fill="rgb(222,135,40)" rx="2" ry="2" />
<text  x="532.01" y="575.5" ></text>
</g>
<g >
<title>CDataStream::clear (70 samples, 0.08%)</title><rect x="174.7" y="677" width="0.9" height="15.0" fill="rgb(253,121,7)" rx="2" ry="2" />
<text  x="177.71" y="687.5" ></text>
</g>
<g >
<title>QuadRound (220 samples, 0.24%)</title><rect x="1141.2" y="165" width="2.8" height="15.0" fill="rgb(248,155,22)" rx="2" ry="2" />
<text  x="1144.22" y="175.5" ></text>
</g>
<g >
<title>__db_verify_internal (8,448 samples, 9.17%)</title><rect x="53.8" y="613" width="108.2" height="15.0" fill="rgb(249,76,36)" rx="2" ry="2" />
<text  x="56.80" y="623.5" >__db_verify_i..</text>
</g>
<g >
<title>std::_Vector_base&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (26 samples, 0.03%)</title><rect x="1179.3" y="741" width="0.3" height="15.0" fill="rgb(224,220,29)" rx="2" ry="2" />
<text  x="1182.26" y="751.5" ></text>
</g>
<g >
<title>_mm_sha256rnds2_epu32 (139 samples, 0.15%)</title><rect x="1134.9" y="645" width="1.8" height="15.0" fill="rgb(250,131,2)" rx="2" ry="2" />
<text  x="1137.93" y="655.5" ></text>
</g>
<g >
<title>CHash160::CHash160 (9 samples, 0.01%)</title><rect x="641.3" y="645" width="0.1" height="15.0" fill="rgb(223,83,5)" rx="2" ry="2" />
<text  x="644.26" y="655.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (273 samples, 0.30%)</title><rect x="142.9" y="517" width="3.5" height="15.0" fill="rgb(222,146,14)" rx="2" ry="2" />
<text  x="145.89" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;void*, CLockLocation&gt;::~pair (17 samples, 0.02%)</title><rect x="687.0" y="549" width="0.2" height="15.0" fill="rgb(225,42,50)" rx="2" ry="2" />
<text  x="690.02" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, CWalletTx*&gt;, std::_Select1st&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::_M_insert_node (115 samples, 0.12%)</title><rect x="1015.4" y="629" width="1.5" height="15.0" fill="rgb(219,163,14)" rx="2" ry="2" />
<text  x="1018.43" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;CTxOut const*, std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; &gt;::base (8 samples, 0.01%)</title><rect x="512.8" y="277" width="0.1" height="15.0" fill="rgb(252,193,34)" rx="2" ry="2" />
<text  x="515.84" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (149 samples, 0.16%)</title><rect x="526.1" y="517" width="1.9" height="15.0" fill="rgb(240,82,25)" rx="2" ry="2" />
<text  x="529.07" y="527.5" ></text>
</g>
<g >
<title>CSHA256::Write (19 samples, 0.02%)</title><rect x="658.4" y="613" width="0.3" height="15.0" fill="rgb(253,191,7)" rx="2" ry="2" />
<text  x="661.44" y="623.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::begin (17 samples, 0.02%)</title><rect x="757.3" y="597" width="0.3" height="15.0" fill="rgb(222,96,42)" rx="2" ry="2" />
<text  x="760.34" y="607.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::size (11 samples, 0.01%)</title><rect x="492.6" y="101" width="0.1" height="15.0" fill="rgb(230,143,13)" rx="2" ry="2" />
<text  x="495.59" y="111.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTxOut&gt; (183 samples, 0.20%)</title><rect x="164.7" y="405" width="2.3" height="15.0" fill="rgb(210,15,18)" rx="2" ry="2" />
<text  x="167.69" y="415.5" ></text>
</g>
<g >
<title>__memp_fput (8 samples, 0.01%)</title><rect x="139.1" y="469" width="0.1" height="15.0" fill="rgb(248,29,28)" rx="2" ry="2" />
<text  x="142.10" y="479.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::item_ptr (13 samples, 0.01%)</title><rect x="507.1" y="85" width="0.1" height="15.0" fill="rgb(218,154,23)" rx="2" ry="2" />
<text  x="510.06" y="95.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (30 samples, 0.03%)</title><rect x="638.1" y="517" width="0.4" height="15.0" fill="rgb(211,153,26)" rx="2" ry="2" />
<text  x="641.09" y="527.5" ></text>
</g>
<g >
<title>CBlockTreeDB::LoadBlockIndexGuts (755 samples, 0.82%)</title><rect x="36.3" y="677" width="9.6" height="15.0" fill="rgb(212,49,7)" rx="2" ry="2" />
<text  x="39.25" y="687.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (92 samples, 0.10%)</title><rect x="52.1" y="549" width="1.1" height="15.0" fill="rgb(238,130,26)" rx="2" ry="2" />
<text  x="55.06" y="559.5" ></text>
</g>
<g >
<title>ser_readdata32&lt;CDataStream&gt; (21 samples, 0.02%)</title><rect x="476.6" y="373" width="0.3" height="15.0" fill="rgb(212,208,47)" rx="2" ry="2" />
<text  x="479.61" y="383.5" ></text>
</g>
<g >
<title>__memp_fget (47 samples, 0.05%)</title><rect x="141.0" y="485" width="0.6" height="15.0" fill="rgb(205,112,8)" rx="2" ry="2" />
<text  x="144.01" y="495.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;std::vector&lt;CMerkleTx, std::allocator&lt;CMerkleTx&gt; &gt;&amp;&gt; (59 samples, 0.06%)</title><rect x="528.5" y="629" width="0.8" height="15.0" fill="rgb(240,105,0)" rx="2" ry="2" />
<text  x="531.51" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, unsigned long, true&gt;::_S_equals (111 samples, 0.12%)</title><rect x="965.0" y="549" width="1.4" height="15.0" fill="rgb(230,8,12)" rx="2" ry="2" />
<text  x="967.96" y="559.5" ></text>
</g>
<g >
<title>Shuffle (9 samples, 0.01%)</title><rect x="1110.9" y="373" width="0.1" height="15.0" fill="rgb(225,191,40)" rx="2" ry="2" />
<text  x="1113.87" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (19 samples, 0.02%)</title><rect x="567.8" y="453" width="0.2" height="15.0" fill="rgb(211,55,22)" rx="2" ry="2" />
<text  x="570.80" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_S_use_relocate (25 samples, 0.03%)</title><rect x="466.7" y="293" width="0.4" height="15.0" fill="rgb(229,18,53)" rx="2" ry="2" />
<text  x="469.73" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, zero_after_free_allocator&lt;char&gt; &gt; (97 samples, 0.11%)</title><rect x="37.6" y="597" width="1.2" height="15.0" fill="rgb(229,96,48)" rx="2" ry="2" />
<text  x="40.59" y="607.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (10 samples, 0.01%)</title><rect x="1094.4" y="549" width="0.1" height="15.0" fill="rgb(232,193,11)" rx="2" ry="2" />
<text  x="1097.41" y="559.5" ></text>
</g>
<g >
<title>std::_Construct&lt;CTxOut&gt; (57 samples, 0.06%)</title><rect x="454.0" y="277" width="0.7" height="15.0" fill="rgb(218,22,41)" rx="2" ry="2" />
<text  x="456.99" y="287.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::base_blob (26 samples, 0.03%)</title><rect x="31.0" y="549" width="0.4" height="15.0" fill="rgb(250,90,31)" rx="2" ry="2" />
<text  x="34.04" y="559.5" ></text>
</g>
<g >
<title>std::set&lt;COutPoint, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::erase (163 samples, 0.18%)</title><rect x="931.1" y="629" width="2.0" height="15.0" fill="rgb(205,115,8)" rx="2" ry="2" />
<text  x="934.05" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~vector (45 samples, 0.05%)</title><rect x="1027.3" y="661" width="0.5" height="15.0" fill="rgb(237,156,8)" rx="2" ry="2" />
<text  x="1030.27" y="671.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Vector_base&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_Vector_impl&amp;&gt; (10 samples, 0.01%)</title><rect x="522.5" y="389" width="0.2" height="15.0" fill="rgb(240,5,13)" rx="2" ry="2" />
<text  x="525.55" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_S_value (10 samples, 0.01%)</title><rect x="1156.7" y="757" width="0.1" height="15.0" fill="rgb(247,93,23)" rx="2" ry="2" />
<text  x="1159.68" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::__detail::_Select1st, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (8 samples, 0.01%)</title><rect x="1166.3" y="757" width="0.1" height="15.0" fill="rgb(239,211,39)" rx="2" ry="2" />
<text  x="1169.33" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;CBlockIndex* const, CBlockIndex*&gt; &gt;::_M_valptr (8 samples, 0.01%)</title><rect x="50.5" y="597" width="0.1" height="15.0" fill="rgb(205,98,5)" rx="2" ry="2" />
<text  x="53.53" y="607.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (10 samples, 0.01%)</title><rect x="409.1" y="581" width="0.1" height="15.0" fill="rgb(219,134,34)" rx="2" ry="2" />
<text  x="412.09" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (12 samples, 0.01%)</title><rect x="1158.4" y="757" width="0.1" height="15.0" fill="rgb(210,148,8)" rx="2" ry="2" />
<text  x="1161.37" y="767.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CTxIn, std::allocator&lt;CTxIn&gt; &gt; (11 samples, 0.01%)</title><rect x="25.8" y="757" width="0.1" height="15.0" fill="rgb(209,38,31)" rx="2" ry="2" />
<text  x="28.78" y="767.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (104 samples, 0.11%)</title><rect x="349.0" y="597" width="1.3" height="15.0" fill="rgb(254,43,48)" rx="2" ry="2" />
<text  x="351.99" y="607.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, unsigned int&amp;&gt; (52 samples, 0.06%)</title><rect x="40.9" y="565" width="0.6" height="15.0" fill="rgb(211,116,39)" rx="2" ry="2" />
<text  x="43.88" y="575.5" ></text>
</g>
<g >
<title>[unknown] (47 samples, 0.05%)</title><rect x="160.5" y="453" width="0.6" height="15.0" fill="rgb(223,39,40)" rx="2" ry="2" />
<text  x="163.53" y="463.5" ></text>
</g>
<g >
<title>[unknown] (18 samples, 0.02%)</title><rect x="101.9" y="277" width="0.2" height="15.0" fill="rgb(209,48,53)" rx="2" ry="2" />
<text  x="104.89" y="287.5" ></text>
</g>
<g >
<title>__lock_get_internal (15 samples, 0.02%)</title><rect x="153.8" y="453" width="0.2" height="15.0" fill="rgb(230,67,3)" rx="2" ry="2" />
<text  x="156.84" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;::_M_valptr (48 samples, 0.05%)</title><rect x="828.6" y="533" width="0.6" height="15.0" fill="rgb(253,86,15)" rx="2" ry="2" />
<text  x="831.60" y="543.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, CScript&gt; (110 samples, 0.12%)</title><rect x="506.2" y="229" width="1.4" height="15.0" fill="rgb(232,76,25)" rx="2" ry="2" />
<text  x="509.17" y="239.5" ></text>
</g>
<g >
<title>ser_readdata32&lt;CDataStream&gt; (41 samples, 0.04%)</title><rect x="431.1" y="373" width="0.5" height="15.0" fill="rgb(209,16,20)" rx="2" ry="2" />
<text  x="434.06" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_M_lower_bound (271 samples, 0.29%)</title><rect x="844.2" y="549" width="3.5" height="15.0" fill="rgb(223,151,1)" rx="2" ry="2" />
<text  x="847.25" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (10 samples, 0.01%)</title><rect x="1093.8" y="533" width="0.1" height="15.0" fill="rgb(230,88,24)" rx="2" ry="2" />
<text  x="1096.81" y="543.5" ></text>
</g>
<g >
<title>std::__addressof&lt;unsigned char&gt; (149 samples, 0.16%)</title><rect x="1072.4" y="645" width="2.0" height="15.0" fill="rgb(224,50,23)" rx="2" ry="2" />
<text  x="1075.45" y="655.5" ></text>
</g>
<g >
<title>std::__distance&lt;unsigned char const*&gt; (8 samples, 0.01%)</title><rect x="768.5" y="405" width="0.1" height="15.0" fill="rgb(229,37,29)" rx="2" ry="2" />
<text  x="771.46" y="415.5" ></text>
</g>
<g >
<title>CScript::Serialize&lt;CHashWriter&gt; (116 samples, 0.13%)</title><rect x="496.1" y="197" width="1.5" height="15.0" fill="rgb(219,163,8)" rx="2" ry="2" />
<text  x="499.11" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;secure_allocator&lt;unsigned char&gt; &gt;::destroy&lt;unsigned char&gt; (10 samples, 0.01%)</title><rect x="1170.5" y="757" width="0.1" height="15.0" fill="rgb(252,22,45)" rx="2" ry="2" />
<text  x="1173.47" y="767.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;*, unsigned long&gt; (82 samples, 0.09%)</title><rect x="470.7" y="309" width="1.0" height="15.0" fill="rgb(233,188,35)" rx="2" ry="2" />
<text  x="473.69" y="319.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, 28u, unsigned char&gt; (271 samples, 0.29%)</title><rect x="1137.3" y="261" width="3.5" height="15.0" fill="rgb(246,51,52)" rx="2" ry="2" />
<text  x="1140.31" y="271.5" ></text>
</g>
<g >
<title>CRIPEMD160::Write (1,396 samples, 1.52%)</title><rect x="717.6" y="549" width="17.9" height="15.0" fill="rgb(239,174,32)" rx="2" ry="2" />
<text  x="720.63" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (12 samples, 0.01%)</title><rect x="631.8" y="517" width="0.1" height="15.0" fill="rgb(210,187,20)" rx="2" ry="2" />
<text  x="634.79" y="527.5" ></text>
</g>
<g >
<title>__env_refresh (12 samples, 0.01%)</title><rect x="162.4" y="437" width="0.1" height="15.0" fill="rgb(227,18,49)" rx="2" ry="2" />
<text  x="165.37" y="447.5" ></text>
</g>
<g >
<title>__libc_start_main (411 samples, 0.45%)</title><rect x="1184.5" y="741" width="5.2" height="15.0" fill="rgb(250,213,17)" rx="2" ry="2" />
<text  x="1187.47" y="751.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (10 samples, 0.01%)</title><rect x="26.4" y="757" width="0.1" height="15.0" fill="rgb(228,4,40)" rx="2" ry="2" />
<text  x="29.35" y="767.5" ></text>
</g>
<g >
<title>__db_vrfy_putpageinfo (320 samples, 0.35%)</title><rect x="151.8" y="581" width="4.1" height="15.0" fill="rgb(243,107,49)" rx="2" ry="2" />
<text  x="154.78" y="591.5" ></text>
</g>
<g >
<title>ReadVarInt&lt;CDataStream,  (42 samples, 0.05%)</title><rect x="40.2" y="517" width="0.5" height="15.0" fill="rgb(228,38,6)" rx="2" ry="2" />
<text  x="43.21" y="527.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, unsigned int&gt; (32 samples, 0.03%)</title><rect x="505.6" y="149" width="0.4" height="15.0" fill="rgb(253,41,18)" rx="2" ry="2" />
<text  x="508.62" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::empty (18 samples, 0.02%)</title><rect x="500.5" y="389" width="0.2" height="15.0" fill="rgb(229,96,18)" rx="2" ry="2" />
<text  x="503.48" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~_Vector_base (20 samples, 0.02%)</title><rect x="1027.6" y="645" width="0.2" height="15.0" fill="rgb(205,96,39)" rx="2" ry="2" />
<text  x="1030.59" y="655.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;CTransaction const,  (8 samples, 0.01%)</title><rect x="1064.0" y="597" width="0.1" height="15.0" fill="rgb(205,110,26)" rx="2" ry="2" />
<text  x="1067.02" y="607.5" ></text>
</g>
<g >
<title>operator&lt; (131 samples, 0.14%)</title><rect x="690.1" y="565" width="1.6" height="15.0" fill="rgb(224,146,1)" rx="2" ry="2" />
<text  x="693.06" y="575.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (10 samples, 0.01%)</title><rect x="1094.6" y="549" width="0.1" height="15.0" fill="rgb(226,134,36)" rx="2" ry="2" />
<text  x="1097.62" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (9 samples, 0.01%)</title><rect x="1094.4" y="533" width="0.1" height="15.0" fill="rgb(223,79,22)" rx="2" ry="2" />
<text  x="1097.41" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (14 samples, 0.02%)</title><rect x="809.0" y="309" width="0.1" height="15.0" fill="rgb(208,113,46)" rx="2" ry="2" />
<text  x="811.95" y="319.5" ></text>
</g>
<g >
<title>CTransaction::Serialize&lt;CHashWriter&gt; (183 samples, 0.20%)</title><rect x="164.7" y="485" width="2.3" height="15.0" fill="rgb(232,213,17)" rx="2" ry="2" />
<text  x="167.69" y="495.5" ></text>
</g>
<g >
<title>__uint32_identity (19 samples, 0.02%)</title><rect x="1031.0" y="533" width="0.2" height="15.0" fill="rgb(215,50,29)" rx="2" ry="2" />
<text  x="1033.98" y="543.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::end (12 samples, 0.01%)</title><rect x="660.8" y="549" width="0.2" height="15.0" fill="rgb(245,3,8)" rx="2" ry="2" />
<text  x="663.81" y="559.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::erase (883 samples, 0.96%)</title><rect x="543.5" y="629" width="11.3" height="15.0" fill="rgb(252,55,41)" rx="2" ry="2" />
<text  x="546.52" y="639.5" ></text>
</g>
<g >
<title>__db_vrfy_childput (122 samples, 0.13%)</title><rect x="61.2" y="549" width="1.6" height="15.0" fill="rgb(227,155,26)" rx="2" ry="2" />
<text  x="64.24" y="559.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt;&gt; (271 samples, 0.29%)</title><rect x="1137.3" y="277" width="3.5" height="15.0" fill="rgb(210,150,25)" rx="2" ry="2" />
<text  x="1140.31" y="287.5" ></text>
</g>
<g >
<title>__db_cursor_int (23 samples, 0.02%)</title><rect x="64.9" y="517" width="0.3" height="15.0" fill="rgb(225,133,28)" rx="2" ry="2" />
<text  x="67.94" y="527.5" ></text>
</g>
<g >
<title>CTxIn::CTxIn (28 samples, 0.03%)</title><rect x="503.2" y="309" width="0.4" height="15.0" fill="rgb(219,23,20)" rx="2" ry="2" />
<text  x="506.23" y="319.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (37 samples, 0.04%)</title><rect x="1098.1" y="629" width="0.5" height="15.0" fill="rgb(211,161,45)" rx="2" ry="2" />
<text  x="1101.11" y="639.5" ></text>
</g>
<g >
<title>__gthread_once (8 samples, 0.01%)</title><rect x="572.4" y="517" width="0.1" height="15.0" fill="rgb(231,87,16)" rx="2" ry="2" />
<text  x="575.35" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_S_value (8 samples, 0.01%)</title><rect x="1157.2" y="741" width="0.1" height="15.0" fill="rgb(221,102,4)" rx="2" ry="2" />
<text  x="1160.16" y="751.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (28 samples, 0.03%)</title><rect x="1094.8" y="581" width="0.4" height="15.0" fill="rgb(220,40,48)" rx="2" ry="2" />
<text  x="1097.81" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (14 samples, 0.02%)</title><rect x="631.2" y="501" width="0.2" height="15.0" fill="rgb(241,169,5)" rx="2" ry="2" />
<text  x="634.21" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, CWalletTx*&gt;, std::_Select1st&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::_S_right (29 samples, 0.03%)</title><rect x="1006.9" y="613" width="0.4" height="15.0" fill="rgb(233,88,17)" rx="2" ry="2" />
<text  x="1009.93" y="623.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_M_allocate (874 samples, 0.95%)</title><rect x="609.0" y="629" width="11.2" height="15.0" fill="rgb(244,92,27)" rx="2" ry="2" />
<text  x="611.96" y="639.5" ></text>
</g>
<g >
<title>__bam_search (241 samples, 0.26%)</title><rect x="111.5" y="421" width="3.1" height="15.0" fill="rgb(214,174,38)" rx="2" ry="2" />
<text  x="114.54" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::operator* (9 samples, 0.01%)</title><rect x="517.6" y="293" width="0.1" height="15.0" fill="rgb(218,135,47)" rx="2" ry="2" />
<text  x="520.63" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;uint256, std::allocator&lt;uint256&gt; &gt;::_Vector_impl::_Vector_impl (33 samples, 0.04%)</title><rect x="557.6" y="597" width="0.4" height="15.0" fill="rgb(240,189,0)" rx="2" ry="2" />
<text  x="560.60" y="607.5" ></text>
</g>
<g >
<title>ser_readdata32&lt;CDataStream&gt; (27 samples, 0.03%)</title><rect x="437.5" y="181" width="0.4" height="15.0" fill="rgb(213,55,11)" rx="2" ry="2" />
<text  x="440.54" y="191.5" ></text>
</g>
<g >
<title>__bam_vrfy_subtree (4,044 samples, 4.39%)</title><rect x="72.2" y="517" width="51.8" height="15.0" fill="rgb(246,187,8)" rx="2" ry="2" />
<text  x="75.20" y="527.5" >__bam..</text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_S_right (22 samples, 0.02%)</title><rect x="897.9" y="597" width="0.3" height="15.0" fill="rgb(235,66,2)" rx="2" ry="2" />
<text  x="900.92" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (11 samples, 0.01%)</title><rect x="944.1" y="517" width="0.1" height="15.0" fill="rgb(236,143,19)" rx="2" ry="2" />
<text  x="947.09" y="527.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CTxIn&amp;&gt; (565 samples, 0.61%)</title><rect x="435.0" y="357" width="7.2" height="15.0" fill="rgb(244,128,12)" rx="2" ry="2" />
<text  x="438.00" y="367.5" ></text>
</g>
<g >
<title>ser_writedata64&lt;CHashWriter&gt; (32 samples, 0.03%)</title><rect x="498.1" y="197" width="0.5" height="15.0" fill="rgb(226,0,27)" rx="2" ry="2" />
<text  x="501.15" y="207.5" ></text>
</g>
<g >
<title>std::mutex::unlock (11 samples, 0.01%)</title><rect x="841.2" y="565" width="0.2" height="15.0" fill="rgb(208,225,48)" rx="2" ry="2" />
<text  x="844.21" y="575.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, CScript&amp;&gt; (148 samples, 0.16%)</title><rect x="448.8" y="309" width="1.9" height="15.0" fill="rgb(238,140,45)" rx="2" ry="2" />
<text  x="451.79" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::begin (13 samples, 0.01%)</title><rect x="1103.2" y="661" width="0.2" height="15.0" fill="rgb(241,134,31)" rx="2" ry="2" />
<text  x="1106.21" y="671.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;false&gt;::__uninit_default_n&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;*, unsigned long&gt; (77 samples, 0.08%)</title><rect x="470.8" y="293" width="0.9" height="15.0" fill="rgb(248,195,33)" rx="2" ry="2" />
<text  x="473.76" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;uint256, std::allocator&lt;uint256&gt; &gt;::_M_deallocate (11 samples, 0.01%)</title><rect x="558.8" y="597" width="0.2" height="15.0" fill="rgb(239,131,19)" rx="2" ry="2" />
<text  x="561.81" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;CTxIn const*, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt;::base (9 samples, 0.01%)</title><rect x="934.1" y="629" width="0.2" height="15.0" fill="rgb(218,101,18)" rx="2" ry="2" />
<text  x="937.15" y="639.5" ></text>
</g>
<g >
<title>Hash160&lt;unsigned char const*&gt; (112 samples, 0.12%)</title><rect x="1119.2" y="709" width="1.4" height="15.0" fill="rgb(217,211,49)" rx="2" ry="2" />
<text  x="1122.19" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;::_Rb_tree_const_iterator (10 samples, 0.01%)</title><rect x="685.7" y="533" width="0.1" height="15.0" fill="rgb(208,158,36)" rx="2" ry="2" />
<text  x="688.66" y="543.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;CTransaction const,  (7,550 samples, 8.19%)</title><rect x="427.9" y="549" width="96.7" height="15.0" fill="rgb(237,117,31)" rx="2" ry="2" />
<text  x="430.87" y="559.5" >std::__shar..</text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CScript&gt; (99 samples, 0.11%)</title><rect x="506.3" y="213" width="1.2" height="15.0" fill="rgb(212,3,3)" rx="2" ry="2" />
<text  x="509.27" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::operator[] (18 samples, 0.02%)</title><rect x="410.2" y="549" width="0.2" height="15.0" fill="rgb(228,110,7)" rx="2" ry="2" />
<text  x="413.15" y="559.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (10 samples, 0.01%)</title><rect x="142.4" y="485" width="0.1" height="15.0" fill="rgb(238,45,31)" rx="2" ry="2" />
<text  x="145.39" y="495.5" ></text>
</g>
<g >
<title>operator&lt; (16 samples, 0.02%)</title><rect x="929.8" y="565" width="0.3" height="15.0" fill="rgb(210,56,48)" rx="2" ry="2" />
<text  x="932.85" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::operator (11 samples, 0.01%)</title><rect x="869.7" y="613" width="0.2" height="15.0" fill="rgb(220,53,12)" rx="2" ry="2" />
<text  x="872.72" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt;::_Tuple_impl (12 samples, 0.01%)</title><rect x="953.3" y="549" width="0.2" height="15.0" fill="rgb(238,165,8)" rx="2" ry="2" />
<text  x="956.31" y="559.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.01%)</title><rect x="629.6" y="453" width="0.1" height="15.0" fill="rgb(208,131,10)" rx="2" ry="2" />
<text  x="632.61" y="463.5" ></text>
</g>
<g >
<title>CRIPEMD160::Finalize (1,521 samples, 1.65%)</title><rect x="695.6" y="581" width="19.4" height="15.0" fill="rgb(220,74,49)" rx="2" ry="2" />
<text  x="698.55" y="591.5" ></text>
</g>
<g >
<title>SerializeTransaction&lt;CHashWriter, CTransaction&gt; (16 samples, 0.02%)</title><rect x="24.2" y="757" width="0.2" height="15.0" fill="rgb(233,125,39)" rx="2" ry="2" />
<text  x="27.20" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt; &gt;::operator+ (86 samples, 0.09%)</title><rect x="177.9" y="645" width="1.1" height="15.0" fill="rgb(244,217,6)" rx="2" ry="2" />
<text  x="180.86" y="655.5" ></text>
</g>
<g >
<title>Unserialize_impl&lt;CDataStream, unsigned char, secure_allocator&lt;unsigned char&gt; &gt; (2,074 samples, 2.25%)</title><rect x="564.1" y="645" width="26.5" height="15.0" fill="rgb(232,143,26)" rx="2" ry="2" />
<text  x="567.06" y="655.5" >U..</text>
</g>
<g >
<title>Serialize&lt;CHashWriter, 28u, unsigned char&gt; (79 samples, 0.09%)</title><rect x="510.8" y="133" width="1.0" height="15.0" fill="rgb(244,24,45)" rx="2" ry="2" />
<text  x="513.81" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl::~_Vector_impl (12 samples, 0.01%)</title><rect x="519.6" y="277" width="0.2" height="15.0" fill="rgb(219,215,43)" rx="2" ry="2" />
<text  x="522.64" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_drop_node (13 samples, 0.01%)</title><rect x="1052.1" y="597" width="0.2" height="15.0" fill="rgb(223,98,35)" rx="2" ry="2" />
<text  x="1055.11" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::end (15 samples, 0.02%)</title><rect x="1053.3" y="661" width="0.2" height="15.0" fill="rgb(229,185,1)" rx="2" ry="2" />
<text  x="1056.29" y="671.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, interfaces::(anonymous namespace)::LockImpl*, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt; (9 samples, 0.01%)</title><rect x="955.4" y="549" width="0.1" height="15.0" fill="rgb(227,142,52)" rx="2" ry="2" />
<text  x="958.42" y="559.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned long&gt;::operator (8 samples, 0.01%)</title><rect x="567.4" y="469" width="0.1" height="15.0" fill="rgb(224,204,31)" rx="2" ry="2" />
<text  x="570.41" y="479.5" ></text>
</g>
<g >
<title>boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt;::which (10 samples, 0.01%)</title><rect x="769.5" y="549" width="0.1" height="15.0" fill="rgb(234,182,20)" rx="2" ry="2" />
<text  x="772.50" y="559.5" ></text>
</g>
<g >
<title>LockedPoolManager::Instance (31 samples, 0.03%)</title><rect x="1094.8" y="597" width="0.4" height="15.0" fill="rgb(236,203,52)" rx="2" ry="2" />
<text  x="1097.77" y="607.5" ></text>
</g>
<g >
<title>[unknown] (30 samples, 0.03%)</title><rect x="123.4" y="405" width="0.4" height="15.0" fill="rgb(239,220,23)" rx="2" ry="2" />
<text  x="126.44" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (18 samples, 0.02%)</title><rect x="525.8" y="517" width="0.3" height="15.0" fill="rgb(208,56,1)" rx="2" ry="2" />
<text  x="528.84" y="527.5" ></text>
</g>
<g >
<title>WriteBE32 (15 samples, 0.02%)</title><rect x="678.9" y="581" width="0.2" height="15.0" fill="rgb(250,192,43)" rx="2" ry="2" />
<text  x="681.86" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;COutPoint&gt; &gt; &gt;::construct&lt;COutPoint, COutPoint const&amp;&gt; (31 samples, 0.03%)</title><rect x="1047.5" y="565" width="0.4" height="15.0" fill="rgb(238,223,6)" rx="2" ry="2" />
<text  x="1050.53" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_deallocate (12 samples, 0.01%)</title><rect x="1105.8" y="645" width="0.2" height="15.0" fill="rgb(246,73,12)" rx="2" ry="2" />
<text  x="1108.80" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_M_lower_bound (1,502 samples, 1.63%)</title><rect x="872.0" y="565" width="19.2" height="15.0" fill="rgb(215,0,7)" rx="2" ry="2" />
<text  x="874.97" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (8 samples, 0.01%)</title><rect x="1084.7" y="501" width="0.1" height="15.0" fill="rgb(217,127,28)" rx="2" ry="2" />
<text  x="1087.70" y="511.5" ></text>
</g>
<g >
<title>__memp_alloc (375 samples, 0.41%)</title><rect x="156.6" y="565" width="4.8" height="15.0" fill="rgb(249,31,8)" rx="2" ry="2" />
<text  x="159.64" y="575.5" ></text>
</g>
<g >
<title>std::map&lt;CScriptID, CScript, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::lower_bound (293 samples, 0.32%)</title><rect x="688.0" y="629" width="3.7" height="15.0" fill="rgb(228,139,32)" rx="2" ry="2" />
<text  x="690.98" y="639.5" ></text>
</g>
<g >
<title>WriteCompactSize (13 samples, 0.01%)</title><rect x="1037.7" y="533" width="0.2" height="15.0" fill="rgb(252,180,34)" rx="2" ry="2" />
<text  x="1040.74" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (9 samples, 0.01%)</title><rect x="45.5" y="549" width="0.1" height="15.0" fill="rgb(223,219,10)" rx="2" ry="2" />
<text  x="48.50" y="559.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, COutPoint&amp;&gt; (209 samples, 0.23%)</title><rect x="435.3" y="309" width="2.7" height="15.0" fill="rgb(244,27,36)" rx="2" ry="2" />
<text  x="438.33" y="319.5" ></text>
</g>
<g >
<title>CHash256::Finalize (271 samples, 0.29%)</title><rect x="1107.7" y="437" width="3.4" height="15.0" fill="rgb(230,141,53)" rx="2" ry="2" />
<text  x="1110.65" y="447.5" ></text>
</g>
<g >
<title>CBlockHeader::Serialize&lt;CHashWriter&gt; (32 samples, 0.03%)</title><rect x="43.3" y="581" width="0.4" height="15.0" fill="rgb(235,178,36)" rx="2" ry="2" />
<text  x="46.27" y="591.5" ></text>
</g>
<g >
<title>RewindBlockIndex (143 samples, 0.16%)</title><rect x="49.2" y="725" width="1.8" height="15.0" fill="rgb(223,228,33)" rx="2" ry="2" />
<text  x="52.20" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;COutPoint, uint256&gt; &gt; (110 samples, 0.12%)</title><rect x="904.0" y="581" width="1.4" height="15.0" fill="rgb(205,132,3)" rx="2" ry="2" />
<text  x="906.99" y="591.5" ></text>
</g>
<g >
<title>__gthread_recursive_mutex_lock (40 samples, 0.04%)</title><rect x="951.3" y="533" width="0.5" height="15.0" fill="rgb(209,101,12)" rx="2" ry="2" />
<text  x="954.32" y="543.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, unsigned long, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt; &gt;::emplace&lt;char*, unsigned long&amp;&gt; (277 samples, 0.30%)</title><rect x="811.2" y="373" width="3.5" height="15.0" fill="rgb(227,36,19)" rx="2" ry="2" />
<text  x="814.19" y="383.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTransaction&gt; (361 samples, 0.39%)</title><rect x="1114.6" y="437" width="4.6" height="15.0" fill="rgb(228,32,30)" rx="2" ry="2" />
<text  x="1117.57" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::end (13 samples, 0.01%)</title><rect x="777.5" y="581" width="0.2" height="15.0" fill="rgb(233,227,41)" rx="2" ry="2" />
<text  x="780.54" y="591.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned char*&gt; (18 samples, 0.02%)</title><rect x="475.5" y="341" width="0.2" height="15.0" fill="rgb(213,123,19)" rx="2" ry="2" />
<text  x="478.49" y="351.5" ></text>
</g>
<g >
<title>Load (8 samples, 0.01%)</title><rect x="1115.1" y="245" width="0.1" height="15.0" fill="rgb(251,106,46)" rx="2" ry="2" />
<text  x="1118.09" y="255.5" ></text>
</g>
<g >
<title>__dbc_iput (608 samples, 0.66%)</title><rect x="134.0" y="533" width="7.8" height="15.0" fill="rgb(219,10,6)" rx="2" ry="2" />
<text  x="137.03" y="543.5" ></text>
</g>
<g >
<title>__db_lput (25 samples, 0.03%)</title><rect x="152.1" y="517" width="0.3" height="15.0" fill="rgb(219,182,36)" rx="2" ry="2" />
<text  x="155.10" y="527.5" ></text>
</g>
<g >
<title>_mm_sha256rnds2_epu32 (53 samples, 0.06%)</title><rect x="1123.3" y="565" width="0.6" height="15.0" fill="rgb(245,129,40)" rx="2" ry="2" />
<text  x="1126.26" y="575.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;*&amp;, std::_Rb_tree_node_base*&amp;, true&gt; (21 samples, 0.02%)</title><rect x="983.4" y="613" width="0.3" height="15.0" fill="rgb(251,25,48)" rx="2" ry="2" />
<text  x="986.42" y="623.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (8 samples, 0.01%)</title><rect x="823.9" y="549" width="0.1" height="15.0" fill="rgb(235,223,5)" rx="2" ry="2" />
<text  x="826.91" y="559.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (10 samples, 0.01%)</title><rect x="1027.4" y="629" width="0.1" height="15.0" fill="rgb(208,118,26)" rx="2" ry="2" />
<text  x="1030.42" y="639.5" ></text>
</g>
<g >
<title>CSHA256::Write (403 samples, 0.44%)</title><rect x="1132.1" y="693" width="5.2" height="15.0" fill="rgb(209,108,10)" rx="2" ry="2" />
<text  x="1135.11" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::end (20 samples, 0.02%)</title><rect x="547.5" y="581" width="0.3" height="15.0" fill="rgb(232,117,34)" rx="2" ry="2" />
<text  x="550.52" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_S_do_relocate (55 samples, 0.06%)</title><rect x="466.0" y="277" width="0.7" height="15.0" fill="rgb(249,197,12)" rx="2" ry="2" />
<text  x="469.03" y="287.5" ></text>
</g>
<g >
<title>__dbc_iput (55 samples, 0.06%)</title><rect x="94.8" y="453" width="0.7" height="15.0" fill="rgb(216,124,46)" rx="2" ry="2" />
<text  x="97.75" y="463.5" ></text>
</g>
<g >
<title>CHashWriter::write (9 samples, 0.01%)</title><rect x="520.3" y="293" width="0.1" height="15.0" fill="rgb(218,136,8)" rx="2" ry="2" />
<text  x="523.27" y="303.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (24 samples, 0.03%)</title><rect x="693.9" y="565" width="0.3" height="15.0" fill="rgb(219,108,12)" rx="2" ry="2" />
<text  x="696.91" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (9 samples, 0.01%)</title><rect x="802.7" y="325" width="0.1" height="15.0" fill="rgb(208,122,10)" rx="2" ry="2" />
<text  x="805.70" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Rb_tree_const_iterator (9 samples, 0.01%)</title><rect x="542.5" y="597" width="0.1" height="15.0" fill="rgb(233,30,21)" rx="2" ry="2" />
<text  x="545.46" y="607.5" ></text>
</g>
<g >
<title>__memp_fput (13 samples, 0.01%)</title><rect x="71.9" y="501" width="0.2" height="15.0" fill="rgb(245,120,7)" rx="2" ry="2" />
<text  x="74.91" y="511.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (12 samples, 0.01%)</title><rect x="65.5" y="517" width="0.2" height="15.0" fill="rgb(251,184,25)" rx="2" ry="2" />
<text  x="68.50" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (12 samples, 0.01%)</title><rect x="1167.3" y="757" width="0.1" height="15.0" fill="rgb(229,67,38)" rx="2" ry="2" />
<text  x="1170.29" y="767.5" ></text>
</g>
<g >
<title>std::forward&lt;std::_Rb_tree_node_base*&amp;&gt; (8 samples, 0.01%)</title><rect x="927.3" y="565" width="0.1" height="15.0" fill="rgb(225,28,11)" rx="2" ry="2" />
<text  x="930.29" y="575.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned int const*, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt; &gt; (11 samples, 0.01%)</title><rect x="853.2" y="517" width="0.1" height="15.0" fill="rgb(214,111,28)" rx="2" ry="2" />
<text  x="856.19" y="527.5" ></text>
</g>
<g >
<title>CDiskBlockIndex::SerializationOp&lt;CDataStream, CSerActionUnserialize&gt; (121 samples, 0.13%)</title><rect x="40.1" y="597" width="1.5" height="15.0" fill="rgb(232,107,23)" rx="2" ry="2" />
<text  x="43.08" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::construct&lt;char, char const&amp;&gt; (17 samples, 0.02%)</title><rect x="36.6" y="549" width="0.2" height="15.0" fill="rgb(234,217,48)" rx="2" ry="2" />
<text  x="39.61" y="559.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;false&gt;::__uninit_default_n&lt;uint256*, unsigned long&gt; (54 samples, 0.06%)</title><rect x="30.7" y="597" width="0.7" height="15.0" fill="rgb(236,114,49)" rx="2" ry="2" />
<text  x="33.71" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt; &gt; (10 samples, 0.01%)</title><rect x="1182.9" y="757" width="0.2" height="15.0" fill="rgb(208,32,47)" rx="2" ry="2" />
<text  x="1185.93" y="767.5" ></text>
</g>
<g >
<title>__db_tas_mutex_readlock (10 samples, 0.01%)</title><rect x="67.3" y="453" width="0.1" height="15.0" fill="rgb(234,43,9)" rx="2" ry="2" />
<text  x="70.31" y="463.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CWalletTx&amp;&gt; (14,046 samples, 15.24%)</title><rect x="379.3" y="661" width="179.8" height="15.0" fill="rgb(211,72,0)" rx="2" ry="2" />
<text  x="382.25" y="671.5" >Unserialize&lt;CDataStream..</text>
</g>
<g >
<title>CDataStream::read (19 samples, 0.02%)</title><rect x="449.4" y="165" width="0.2" height="15.0" fill="rgb(238,155,6)" rx="2" ry="2" />
<text  x="452.39" y="175.5" ></text>
</g>
<g >
<title>__lock_get (61 samples, 0.07%)</title><rect x="126.6" y="453" width="0.8" height="15.0" fill="rgb(239,143,16)" rx="2" ry="2" />
<text  x="129.63" y="463.5" ></text>
</g>
<g >
<title>sha256_shani::Transform (14 samples, 0.02%)</title><rect x="43.4" y="437" width="0.2" height="15.0" fill="rgb(213,141,48)" rx="2" ry="2" />
<text  x="46.44" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::deallocate (19 samples, 0.02%)</title><rect x="545.7" y="533" width="0.3" height="15.0" fill="rgb(253,87,19)" rx="2" ry="2" />
<text  x="548.73" y="543.5" ></text>
</g>
<g >
<title>Hash160&lt;unsigned char const*&gt; (1,633 samples, 1.77%)</title><rect x="695.0" y="613" width="20.9" height="15.0" fill="rgb(210,85,16)" rx="2" ry="2" />
<text  x="698.02" y="623.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream&gt; (17 samples, 0.02%)</title><rect x="369.7" y="581" width="0.2" height="15.0" fill="rgb(240,12,7)" rx="2" ry="2" />
<text  x="372.71" y="591.5" ></text>
</g>
<g >
<title>__env_alloc (8 samples, 0.01%)</title><rect x="327.4" y="565" width="0.1" height="15.0" fill="rgb(243,197,37)" rx="2" ry="2" />
<text  x="330.42" y="575.5" ></text>
</g>
<g >
<title>std::tuple&lt;char*&amp;&amp;&gt;::tuple (15 samples, 0.02%)</title><rect x="1089.4" y="485" width="0.2" height="15.0" fill="rgb(246,115,25)" rx="2" ry="2" />
<text  x="1092.37" y="495.5" ></text>
</g>
<g >
<title>__GI_____strtoll_l_internal (15 samples, 0.02%)</title><rect x="539.3" y="613" width="0.2" height="15.0" fill="rgb(233,34,44)" rx="2" ry="2" />
<text  x="542.32" y="623.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (15 samples, 0.02%)</title><rect x="108.3" y="389" width="0.2" height="15.0" fill="rgb(245,37,4)" rx="2" ry="2" />
<text  x="111.28" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;char* const, unsigned long&gt; &gt;::_M_v (8 samples, 0.01%)</title><rect x="812.8" y="261" width="0.1" height="15.0" fill="rgb(205,219,24)" rx="2" ry="2" />
<text  x="815.79" y="271.5" ></text>
</g>
<g >
<title>__db_lput (9 samples, 0.01%)</title><rect x="91.3" y="421" width="0.1" height="15.0" fill="rgb(219,19,35)" rx="2" ry="2" />
<text  x="94.31" y="431.5" ></text>
</g>
<g >
<title>std::set&lt;CBlockIndex*, CBlockIndexWorkComparator, std::allocator&lt;CBlockIndex*&gt; &gt;::erase[abi:cxx11] (11 samples, 0.01%)</title><rect x="32.2" y="677" width="0.1" height="15.0" fill="rgb(235,144,14)" rx="2" ry="2" />
<text  x="35.16" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;::_Rb_tree_const_iterator (15 samples, 0.02%)</title><rect x="848.1" y="533" width="0.2" height="15.0" fill="rgb(253,167,21)" rx="2" ry="2" />
<text  x="851.06" y="543.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, CScript&gt; (169 samples, 0.18%)</title><rect x="162.5" y="341" width="2.2" height="15.0" fill="rgb(245,120,37)" rx="2" ry="2" />
<text  x="165.53" y="351.5" ></text>
</g>
<g >
<title>AssertLockHeldInternal (26 samples, 0.03%)</title><rect x="854.0" y="645" width="0.3" height="15.0" fill="rgb(236,32,27)" rx="2" ry="2" />
<text  x="856.98" y="655.5" ></text>
</g>
<g >
<title>CKeyMetadata::SetNull (17 samples, 0.02%)</title><rect x="639.8" y="661" width="0.2" height="15.0" fill="rgb(237,168,45)" rx="2" ry="2" />
<text  x="642.78" y="671.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (8 samples, 0.01%)</title><rect x="524.1" y="517" width="0.1" height="15.0" fill="rgb(240,94,19)" rx="2" ry="2" />
<text  x="527.10" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, char*&gt;::pair&lt;unsigned long&amp;, char*&amp;, true&gt; (8 samples, 0.01%)</title><rect x="1082.6" y="469" width="0.1" height="15.0" fill="rgb(211,86,37)" rx="2" ry="2" />
<text  x="1085.60" y="479.5" ></text>
</g>
<g >
<title>CHash256::CHash256 (26 samples, 0.03%)</title><rect x="1056.7" y="661" width="0.4" height="15.0" fill="rgb(227,145,17)" rx="2" ry="2" />
<text  x="1059.73" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CBlockIndex*, CBlockIndex*, std::_Identity&lt;CBlockIndex*&gt;, CBlockIndexWorkComparator, std::allocator&lt;CBlockIndex*&gt; &gt;::_Alloc_node::operator (11 samples, 0.01%)</title><rect x="48.6" y="629" width="0.2" height="15.0" fill="rgb(248,81,20)" rx="2" ry="2" />
<text  x="51.61" y="639.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (16 samples, 0.02%)</title><rect x="102.2" y="389" width="0.2" height="15.0" fill="rgb(246,11,49)" rx="2" ry="2" />
<text  x="105.19" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_lower_bound (71 samples, 0.08%)</title><rect x="804.8" y="341" width="0.9" height="15.0" fill="rgb(229,132,17)" rx="2" ry="2" />
<text  x="807.78" y="351.5" ></text>
</g>
<g >
<title>CChainState::CheckBlockIndex (140 samples, 0.15%)</title><rect x="49.2" y="693" width="1.8" height="15.0" fill="rgb(241,111,12)" rx="2" ry="2" />
<text  x="52.24" y="703.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (22 samples, 0.02%)</title><rect x="426.4" y="597" width="0.3" height="15.0" fill="rgb(220,221,38)" rx="2" ry="2" />
<text  x="429.39" y="607.5" ></text>
</g>
<g >
<title>Serialize&lt;CSizeComputer, COutPoint&gt; (118 samples, 0.13%)</title><rect x="1034.0" y="453" width="1.5" height="15.0" fill="rgb(251,75,32)" rx="2" ry="2" />
<text  x="1036.95" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::_Vector_base (25 samples, 0.03%)</title><rect x="1062.2" y="501" width="0.4" height="15.0" fill="rgb(252,171,8)" rx="2" ry="2" />
<text  x="1065.24" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;::_Rb_tree_iterator (8 samples, 0.01%)</title><rect x="566.4" y="485" width="0.1" height="15.0" fill="rgb(216,6,18)" rx="2" ry="2" />
<text  x="569.37" y="495.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (33 samples, 0.04%)</title><rect x="146.8" y="501" width="0.5" height="15.0" fill="rgb(223,21,1)" rx="2" ry="2" />
<text  x="149.84" y="511.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (25 samples, 0.03%)</title><rect x="412.2" y="533" width="0.3" height="15.0" fill="rgb(252,122,23)" rx="2" ry="2" />
<text  x="415.23" y="543.5" ></text>
</g>
<g >
<title>CDataStream::read (9 samples, 0.01%)</title><rect x="408.4" y="581" width="0.1" height="15.0" fill="rgb(226,229,46)" rx="2" ry="2" />
<text  x="411.41" y="591.5" ></text>
</g>
<g >
<title>operator new (331 samples, 0.36%)</title><rect x="254.2" y="549" width="4.3" height="15.0" fill="rgb(250,7,1)" rx="2" ry="2" />
<text  x="257.25" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_get_node (23 samples, 0.02%)</title><rect x="1082.9" y="517" width="0.3" height="15.0" fill="rgb(212,149,12)" rx="2" ry="2" />
<text  x="1085.86" y="527.5" ></text>
</g>
<g >
<title>CDataStream::read (34 samples, 0.04%)</title><rect x="451.2" y="245" width="0.4" height="15.0" fill="rgb(210,170,49)" rx="2" ry="2" />
<text  x="454.19" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::size (8 samples, 0.01%)</title><rect x="623.2" y="613" width="0.1" height="15.0" fill="rgb(223,0,6)" rx="2" ry="2" />
<text  x="626.19" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::_M_ptr (8 samples, 0.01%)</title><rect x="869.8" y="581" width="0.1" height="15.0" fill="rgb(207,30,40)" rx="2" ry="2" />
<text  x="872.76" y="591.5" ></text>
</g>
<g >
<title>std::pair&lt;void*, CLockLocation&gt;::pair&lt;void*&amp;, true&gt; (121 samples, 0.13%)</title><rect x="842.0" y="565" width="1.5" height="15.0" fill="rgb(234,73,6)" rx="2" ry="2" />
<text  x="844.99" y="575.5" ></text>
</g>
<g >
<title>UniqueLock&lt;AnnotatedMixin&lt;std::recursive_mutex&gt;, std::unique_lock&lt;std::recursive_mutex&gt; &gt;::UniqueLock (746 samples, 0.81%)</title><rect x="942.6" y="597" width="9.5" height="15.0" fill="rgb(216,162,4)" rx="2" ry="2" />
<text  x="945.58" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (10 samples, 0.01%)</title><rect x="534.0" y="597" width="0.1" height="15.0" fill="rgb(242,148,35)" rx="2" ry="2" />
<text  x="536.97" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree (8 samples, 0.01%)</title><rect x="1158.6" y="757" width="0.1" height="15.0" fill="rgb(232,16,12)" rx="2" ry="2" />
<text  x="1161.59" y="767.5" ></text>
</g>
<g >
<title>__os_io (54 samples, 0.06%)</title><rect x="160.5" y="517" width="0.7" height="15.0" fill="rgb(218,20,34)" rx="2" ry="2" />
<text  x="163.46" y="527.5" ></text>
</g>
<g >
<title>__db_cursor (19 samples, 0.02%)</title><rect x="105.7" y="469" width="0.3" height="15.0" fill="rgb(217,193,30)" rx="2" ry="2" />
<text  x="108.74" y="479.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;unsigned char*&gt;, unsigned char*&gt; (17 samples, 0.02%)</title><rect x="1097.5" y="597" width="0.2" height="15.0" fill="rgb(229,188,45)" rx="2" ry="2" />
<text  x="1100.47" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::erase[abi:cxx11] (78 samples, 0.08%)</title><rect x="610.6" y="533" width="1.0" height="15.0" fill="rgb(235,130,51)" rx="2" ry="2" />
<text  x="613.64" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_addr (93 samples, 0.10%)</title><rect x="879.5" y="485" width="1.2" height="15.0" fill="rgb(214,60,8)" rx="2" ry="2" />
<text  x="882.52" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_Vector_impl::_Vector_impl (15 samples, 0.02%)</title><rect x="1061.9" y="485" width="0.2" height="15.0" fill="rgb(215,156,27)" rx="2" ry="2" />
<text  x="1064.88" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::__detail::_Select1st, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (55 samples, 0.06%)</title><rect x="966.5" y="597" width="0.7" height="15.0" fill="rgb(213,117,45)" rx="2" ry="2" />
<text  x="969.49" y="607.5" ></text>
</g>
<g >
<title>CSHA512::Finalize (395 samples, 0.43%)</title><rect x="1184.5" y="597" width="5.0" height="15.0" fill="rgb(239,42,4)" rx="2" ry="2" />
<text  x="1187.48" y="607.5" ></text>
</g>
<g >
<title>KeyOriginInfo::operator= (139 samples, 0.15%)</title><rect x="852.1" y="645" width="1.8" height="15.0" fill="rgb(227,13,54)" rx="2" ry="2" />
<text  x="855.09" y="655.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::size (13 samples, 0.01%)</title><rect x="762.5" y="437" width="0.2" height="15.0" fill="rgb(225,175,2)" rx="2" ry="2" />
<text  x="765.53" y="447.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (39 samples, 0.04%)</title><rect x="313.7" y="549" width="0.5" height="15.0" fill="rgb(240,63,32)" rx="2" ry="2" />
<text  x="316.73" y="559.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;unsigned char*&gt; (10 samples, 0.01%)</title><rect x="464.3" y="229" width="0.1" height="15.0" fill="rgb(225,60,2)" rx="2" ry="2" />
<text  x="467.30" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;::_M_valptr (19 samples, 0.02%)</title><rect x="1002.1" y="597" width="0.3" height="15.0" fill="rgb(231,10,31)" rx="2" ry="2" />
<text  x="1005.14" y="607.5" ></text>
</g>
<g >
<title>__lock_get (20 samples, 0.02%)</title><rect x="104.4" y="389" width="0.3" height="15.0" fill="rgb(251,146,40)" rx="2" ry="2" />
<text  x="107.41" y="399.5" ></text>
</g>
<g >
<title>pop_lock (60 samples, 0.07%)</title><rect x="1020.2" y="565" width="0.8" height="15.0" fill="rgb(245,185,17)" rx="2" ry="2" />
<text  x="1023.25" y="575.5" ></text>
</g>
<g >
<title>__os_io (16 samples, 0.02%)</title><rect x="89.0" y="341" width="0.2" height="15.0" fill="rgb(225,215,8)" rx="2" ry="2" />
<text  x="92.03" y="351.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;CTransaction const,  (10 samples, 0.01%)</title><rect x="34.9" y="629" width="0.1" height="15.0" fill="rgb(210,42,28)" rx="2" ry="2" />
<text  x="37.90" y="639.5" ></text>
</g>
<g >
<title>CSHA256::Write (14 samples, 0.02%)</title><rect x="511.2" y="37" width="0.2" height="15.0" fill="rgb(224,171,28)" rx="2" ry="2" />
<text  x="514.21" y="47.5" ></text>
</g>
<g >
<title>DecodeDestination (182 samples, 0.20%)</title><rect x="1054.1" y="677" width="2.3" height="15.0" fill="rgb(226,187,52)" rx="2" ry="2" />
<text  x="1057.10" y="687.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, unsigned char, std::allocator&lt;unsigned char&gt; &gt; (831 samples, 0.90%)</title><rect x="457.7" y="357" width="10.6" height="15.0" fill="rgb(234,141,53)" rx="2" ry="2" />
<text  x="460.67" y="367.5" ></text>
</g>
<g >
<title>__db_tas_mutex_readlock (8 samples, 0.01%)</title><rect x="70.7" y="453" width="0.1" height="15.0" fill="rgb(213,51,44)" rx="2" ry="2" />
<text  x="73.70" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator[] (15 samples, 0.02%)</title><rect x="39.7" y="629" width="0.2" height="15.0" fill="rgb(225,79,51)" rx="2" ry="2" />
<text  x="42.69" y="639.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (468 samples, 0.51%)</title><rect x="780.9" y="501" width="6.0" height="15.0" fill="rgb(235,47,44)" rx="2" ry="2" />
<text  x="783.89" y="511.5" ></text>
</g>
<g >
<title>secp256k1_ec_seckey_verify (27 samples, 0.03%)</title><rect x="626.0" y="645" width="0.3" height="15.0" fill="rgb(221,165,33)" rx="2" ry="2" />
<text  x="629.00" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_S_key (10 samples, 0.01%)</title><rect x="805.2" y="325" width="0.1" height="15.0" fill="rgb(233,58,13)" rx="2" ry="2" />
<text  x="808.19" y="335.5" ></text>
</g>
<g >
<title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt; &gt; (20 samples, 0.02%)</title><rect x="1098.7" y="613" width="0.2" height="15.0" fill="rgb(233,24,11)" rx="2" ry="2" />
<text  x="1101.65" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::end (13 samples, 0.01%)</title><rect x="931.8" y="581" width="0.2" height="15.0" fill="rgb(232,49,23)" rx="2" ry="2" />
<text  x="934.81" y="591.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, char&gt; (38 samples, 0.04%)</title><rect x="370.6" y="581" width="0.5" height="15.0" fill="rgb(230,102,32)" rx="2" ry="2" />
<text  x="373.57" y="591.5" ></text>
</g>
<g >
<title>LockedPool::alloc (1,380 samples, 1.50%)</title><rect x="798.4" y="405" width="17.6" height="15.0" fill="rgb(207,121,17)" rx="2" ry="2" />
<text  x="801.37" y="415.5" ></text>
</g>
<g >
<title>CScript::Serialize&lt;CHashWriter&gt; (183 samples, 0.20%)</title><rect x="164.7" y="309" width="2.3" height="15.0" fill="rgb(235,30,43)" rx="2" ry="2" />
<text  x="167.69" y="319.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (17 samples, 0.02%)</title><rect x="116.5" y="485" width="0.2" height="15.0" fill="rgb(214,52,44)" rx="2" ry="2" />
<text  x="119.53" y="495.5" ></text>
</g>
<g >
<title>__bam_get_root (25 samples, 0.03%)</title><rect x="126.2" y="469" width="0.4" height="15.0" fill="rgb(209,64,16)" rx="2" ry="2" />
<text  x="129.25" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_S_max_size (41 samples, 0.04%)</title><rect x="474.0" y="309" width="0.5" height="15.0" fill="rgb(213,44,4)" rx="2" ry="2" />
<text  x="477.01" y="319.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, CScript&gt; (279 samples, 0.30%)</title><rect x="1140.8" y="357" width="3.6" height="15.0" fill="rgb(239,209,27)" rx="2" ry="2" />
<text  x="1143.78" y="367.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::recursive_mutex&gt;::lock (48 samples, 0.05%)</title><rect x="849.9" y="613" width="0.6" height="15.0" fill="rgb(228,71,47)" rx="2" ry="2" />
<text  x="852.92" y="623.5" ></text>
</g>
<g >
<title>UniqueLock&lt;AnnotatedMixin&lt;std::recursive_mutex&gt;, std::unique_lock&lt;std::recursive_mutex&gt; &gt;::Enter (549 samples, 0.60%)</title><rect x="787.4" y="613" width="7.1" height="15.0" fill="rgb(216,17,53)" rx="2" ry="2" />
<text  x="790.42" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_S_relocate (10 samples, 0.01%)</title><rect x="590.1" y="597" width="0.1" height="15.0" fill="rgb(217,135,33)" rx="2" ry="2" />
<text  x="593.06" y="607.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, interfaces::Chain::Lock*, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt; (31 samples, 0.03%)</title><rect x="1019.2" y="629" width="0.4" height="15.0" fill="rgb(213,145,34)" rx="2" ry="2" />
<text  x="1022.22" y="639.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;secure_allocator&lt;unsigned char&gt; &gt;::destroy&lt;unsigned char&gt; (61 samples, 0.07%)</title><rect x="627.4" y="629" width="0.7" height="15.0" fill="rgb(235,141,36)" rx="2" ry="2" />
<text  x="630.37" y="639.5" ></text>
</g>
<g >
<title>std::forward&lt;char const&amp;&gt; (792 samples, 0.86%)</title><rect x="258.5" y="549" width="10.1" height="15.0" fill="rgb(252,128,17)" rx="2" ry="2" />
<text  x="261.49" y="559.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (13 samples, 0.01%)</title><rect x="162.4" y="597" width="0.1" height="15.0" fill="rgb(222,59,40)" rx="2" ry="2" />
<text  x="165.36" y="607.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, interfaces::Chain::Lock*, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt;::_M_head (14 samples, 0.02%)</title><rect x="1019.4" y="597" width="0.2" height="15.0" fill="rgb(219,104,11)" rx="2" ry="2" />
<text  x="1022.44" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_Vector_base (113 samples, 0.12%)</title><rect x="351.6" y="661" width="1.5" height="15.0" fill="rgb(206,74,16)" rx="2" ry="2" />
<text  x="354.63" y="671.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;CTransaction const&gt;::shared_ptr&lt;std::allocator&lt;CTransaction&gt;, deserialize_type const&amp;, CDataStream&amp;&gt; (7,575 samples, 8.22%)</title><rect x="427.6" y="565" width="97.0" height="15.0" fill="rgb(228,7,45)" rx="2" ry="2" />
<text  x="430.61" y="575.5" >std::shared..</text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_Vector_base (11 samples, 0.01%)</title><rect x="1069.1" y="661" width="0.1" height="15.0" fill="rgb(249,64,5)" rx="2" ry="2" />
<text  x="1072.08" y="671.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::recursive_mutex&gt;::lock (70 samples, 0.08%)</title><rect x="950.9" y="565" width="0.9" height="15.0" fill="rgb(214,199,44)" rx="2" ry="2" />
<text  x="953.94" y="575.5" ></text>
</g>
<g >
<title>bitcoind (439 samples, 0.48%)</title><rect x="1184.4" y="773" width="5.6" height="15.0" fill="rgb(240,171,9)" rx="2" ry="2" />
<text  x="1187.38" y="783.5" ></text>
</g>
<g >
<title>CPubKey::GetID (161 samples, 0.17%)</title><rect x="1124.1" y="661" width="2.1" height="15.0" fill="rgb(224,24,39)" rx="2" ry="2" />
<text  x="1127.12" y="671.5" ></text>
</g>
<g >
<title>__db_refresh (130 samples, 0.14%)</title><rect x="53.8" y="581" width="1.7" height="15.0" fill="rgb(251,13,27)" rx="2" ry="2" />
<text  x="56.80" y="591.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, unsigned int&gt; (47 samples, 0.05%)</title><rect x="507.6" y="245" width="0.6" height="15.0" fill="rgb(205,12,47)" rx="2" ry="2" />
<text  x="510.57" y="255.5" ></text>
</g>
<g >
<title>sha256_shani::Transform (279 samples, 0.30%)</title><rect x="1140.8" y="181" width="3.6" height="15.0" fill="rgb(221,3,38)" rx="2" ry="2" />
<text  x="1143.78" y="191.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8 samples, 0.01%)</title><rect x="412.4" y="517" width="0.1" height="15.0" fill="rgb(250,71,54)" rx="2" ry="2" />
<text  x="415.45" y="527.5" ></text>
</g>
<g >
<title>QuadRound (90 samples, 0.10%)</title><rect x="1120.9" y="597" width="1.1" height="15.0" fill="rgb(215,10,50)" rx="2" ry="2" />
<text  x="1123.87" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (15 samples, 0.02%)</title><rect x="424.1" y="517" width="0.2" height="15.0" fill="rgb(234,160,31)" rx="2" ry="2" />
<text  x="427.09" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::end (17 samples, 0.02%)</title><rect x="1103.0" y="629" width="0.2" height="15.0" fill="rgb(216,90,52)" rx="2" ry="2" />
<text  x="1105.99" y="639.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_const_iterator&lt;COutPoint&gt;, bool&gt;::pair&lt;std::_Rb_tree_iterator&lt;COutPoint&gt;&amp;, bool&amp;, true&gt; (23 samples, 0.02%)</title><rect x="1050.0" y="645" width="0.3" height="15.0" fill="rgb(212,142,8)" rx="2" ry="2" />
<text  x="1052.99" y="655.5" ></text>
</g>
<g >
<title>CLockLocation::CLockLocation (139 samples, 0.15%)</title><rect x="943.2" y="549" width="1.7" height="15.0" fill="rgb(217,195,40)" rx="2" ry="2" />
<text  x="946.15" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase_aux (349 samples, 0.38%)</title><rect x="544.4" y="597" width="4.4" height="15.0" fill="rgb(244,139,36)" rx="2" ry="2" />
<text  x="547.36" y="607.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (8 samples, 0.01%)</title><rect x="140.3" y="453" width="0.1" height="15.0" fill="rgb(250,91,5)" rx="2" ry="2" />
<text  x="143.35" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (609 samples, 0.66%)</title><rect x="460.4" y="309" width="7.8" height="15.0" fill="rgb(212,137,9)" rx="2" ry="2" />
<text  x="463.36" y="319.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::BackgroundCall (33 samples, 0.04%)</title><rect x="1147.3" y="677" width="0.4" height="15.0" fill="rgb(226,92,22)" rx="2" ry="2" />
<text  x="1150.32" y="687.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, long&gt; (77 samples, 0.08%)</title><rect x="497.6" y="245" width="1.0" height="15.0" fill="rgb(219,132,49)" rx="2" ry="2" />
<text  x="500.65" y="255.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, CTxIn, std::allocator&lt;CTxIn&gt;, CTxIn&gt; (279 samples, 0.30%)</title><rect x="1140.8" y="437" width="3.6" height="15.0" fill="rgb(247,170,44)" rx="2" ry="2" />
<text  x="1143.78" y="447.5" ></text>
</g>
<g >
<title>__bswap_32 (17 samples, 0.02%)</title><rect x="501.6" y="341" width="0.2" height="15.0" fill="rgb(218,20,19)" rx="2" ry="2" />
<text  x="504.61" y="351.5" ></text>
</g>
<g >
<title>util::ThreadGetInternalName[abi:cxx11] (9 samples, 0.01%)</title><rect x="19.9" y="741" width="0.1" height="15.0" fill="rgb(238,124,3)" rx="2" ry="2" />
<text  x="22.91" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::begin (18 samples, 0.02%)</title><rect x="413.2" y="581" width="0.2" height="15.0" fill="rgb(238,86,26)" rx="2" ry="2" />
<text  x="416.16" y="591.5" ></text>
</g>
<g >
<title>sha256_shani::Transform (33 samples, 0.04%)</title><rect x="42.7" y="549" width="0.4" height="15.0" fill="rgb(233,139,5)" rx="2" ry="2" />
<text  x="45.72" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::_M_addr (43 samples, 0.05%)</title><rect x="896.7" y="533" width="0.5" height="15.0" fill="rgb(222,64,1)" rx="2" ry="2" />
<text  x="899.68" y="543.5" ></text>
</g>
<g >
<title>std::pair&lt;void*, CLockLocation&gt;::pair&lt;void*&amp;, true&gt; (35 samples, 0.04%)</title><rect x="789.7" y="549" width="0.4" height="15.0" fill="rgb(232,128,43)" rx="2" ry="2" />
<text  x="792.69" y="559.5" ></text>
</g>
<g >
<title>CScriptWitness::CScriptWitness (16 samples, 0.02%)</title><rect x="444.5" y="245" width="0.2" height="15.0" fill="rgb(229,173,30)" rx="2" ry="2" />
<text  x="447.52" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (16 samples, 0.02%)</title><rect x="354.5" y="661" width="0.2" height="15.0" fill="rgb(236,51,29)" rx="2" ry="2" />
<text  x="357.47" y="671.5" ></text>
</g>
<g >
<title>[unknown] (18 samples, 0.02%)</title><rect x="79.4" y="309" width="0.2" height="15.0" fill="rgb(225,89,37)" rx="2" ry="2" />
<text  x="82.37" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_insert_node (48 samples, 0.05%)</title><rect x="802.3" y="341" width="0.6" height="15.0" fill="rgb(233,130,27)" rx="2" ry="2" />
<text  x="805.28" y="351.5" ></text>
</g>
<g >
<title>__libc_pread (10 samples, 0.01%)</title><rect x="92.7" y="341" width="0.1" height="15.0" fill="rgb(247,53,22)" rx="2" ry="2" />
<text  x="95.65" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_Rb_tree_iterator (8 samples, 0.01%)</title><rect x="934.5" y="613" width="0.1" height="15.0" fill="rgb(226,90,40)" rx="2" ry="2" />
<text  x="937.52" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned long const, char*&gt;, unsigned long const&amp;, char*&amp;&gt; (34 samples, 0.04%)</title><rect x="800.9" y="309" width="0.4" height="15.0" fill="rgb(234,184,9)" rx="2" ry="2" />
<text  x="803.90" y="319.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::IsNull (9 samples, 0.01%)</title><rect x="933.4" y="597" width="0.1" height="15.0" fill="rgb(249,187,6)" rx="2" ry="2" />
<text  x="936.39" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (13 samples, 0.01%)</title><rect x="545.8" y="517" width="0.2" height="15.0" fill="rgb(225,142,29)" rx="2" ry="2" />
<text  x="548.80" y="527.5" ></text>
</g>
<g >
<title>__db_tas_mutex_readlock (15 samples, 0.02%)</title><rect x="128.8" y="453" width="0.2" height="15.0" fill="rgb(249,226,1)" rx="2" ry="2" />
<text  x="131.81" y="463.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (28 samples, 0.03%)</title><rect x="422.9" y="501" width="0.4" height="15.0" fill="rgb(225,59,48)" rx="2" ry="2" />
<text  x="425.90" y="511.5" ></text>
</g>
<g >
<title>__memp_fget (17 samples, 0.02%)</title><rect x="107.4" y="389" width="0.2" height="15.0" fill="rgb(243,179,22)" rx="2" ry="2" />
<text  x="110.42" y="399.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CScript&gt; (183 samples, 0.20%)</title><rect x="164.7" y="325" width="2.3" height="15.0" fill="rgb(250,21,24)" rx="2" ry="2" />
<text  x="167.69" y="335.5" ></text>
</g>
<g >
<title>UniqueLock&lt;AnnotatedMixin&lt;std::recursive_mutex&gt;, std::unique_lock&lt;std::recursive_mutex&gt; &gt;::UniqueLock (556 samples, 0.60%)</title><rect x="679.6" y="645" width="7.2" height="15.0" fill="rgb(209,46,4)" rx="2" ry="2" />
<text  x="682.63" y="655.5" ></text>
</g>
<g >
<title>std::_Construct&lt;uint256&gt; (41 samples, 0.04%)</title><rect x="30.8" y="581" width="0.6" height="15.0" fill="rgb(254,155,12)" rx="2" ry="2" />
<text  x="33.85" y="591.5" ></text>
</g>
<g >
<title>std::forward&lt;char const&amp;&gt; (669 samples, 0.73%)</title><rect x="282.7" y="581" width="8.6" height="15.0" fill="rgb(252,14,40)" rx="2" ry="2" />
<text  x="285.69" y="591.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;unsigned int&amp;&gt; (35 samples, 0.04%)</title><rect x="531.4" y="629" width="0.4" height="15.0" fill="rgb(244,205,15)" rx="2" ry="2" />
<text  x="534.36" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::max_size (34 samples, 0.04%)</title><rect x="472.1" y="309" width="0.4" height="15.0" fill="rgb(211,150,36)" rx="2" ry="2" />
<text  x="475.10" y="319.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I__Z18InitSignatureCachev (399 samples, 0.43%)</title><rect x="1184.5" y="709" width="5.1" height="15.0" fill="rgb(221,74,44)" rx="2" ry="2" />
<text  x="1187.48" y="719.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (19 samples, 0.02%)</title><rect x="105.4" y="389" width="0.3" height="15.0" fill="rgb(230,22,14)" rx="2" ry="2" />
<text  x="108.42" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CMerkleTx, std::allocator&lt;CMerkleTx&gt; &gt;::_Vector_impl::_Vector_impl (38 samples, 0.04%)</title><rect x="556.1" y="597" width="0.5" height="15.0" fill="rgb(241,206,45)" rx="2" ry="2" />
<text  x="559.07" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (8 samples, 0.01%)</title><rect x="1166.0" y="757" width="0.1" height="15.0" fill="rgb(247,190,37)" rx="2" ry="2" />
<text  x="1169.01" y="767.5" ></text>
</g>
<g >
<title>std::forward&lt;CWalletTx&amp;&gt; (14 samples, 0.02%)</title><rect x="985.1" y="645" width="0.2" height="15.0" fill="rgb(237,34,22)" rx="2" ry="2" />
<text  x="988.13" y="655.5" ></text>
</g>
<g >
<title>CSHA256::Write (269 samples, 0.29%)</title><rect x="1111.1" y="405" width="3.5" height="15.0" fill="rgb(208,78,6)" rx="2" ry="2" />
<text  x="1114.12" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;CKeyID const, CKey&gt;::pair&lt;CKeyID&amp;&amp;&gt; (1,853 samples, 2.01%)</title><rect x="797.4" y="533" width="23.7" height="15.0" fill="rgb(235,89,11)" rx="2" ry="2" />
<text  x="800.41" y="543.5" >s..</text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (90 samples, 0.10%)</title><rect x="1091.3" y="517" width="1.2" height="15.0" fill="rgb(210,186,4)" rx="2" ry="2" />
<text  x="1094.33" y="527.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;*&gt; (14 samples, 0.02%)</title><rect x="473.2" y="277" width="0.2" height="15.0" fill="rgb(230,216,5)" rx="2" ry="2" />
<text  x="476.20" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::lower_bound (696 samples, 0.76%)</title><rect x="778.0" y="581" width="8.9" height="15.0" fill="rgb(233,147,44)" rx="2" ry="2" />
<text  x="780.97" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_S_check_init_len (19 samples, 0.02%)</title><rect x="768.7" y="421" width="0.2" height="15.0" fill="rgb(212,140,34)" rx="2" ry="2" />
<text  x="771.68" y="431.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (21 samples, 0.02%)</title><rect x="434.7" y="341" width="0.3" height="15.0" fill="rgb(235,173,7)" rx="2" ry="2" />
<text  x="437.73" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;::_M_ptr (26 samples, 0.03%)</title><rect x="845.6" y="485" width="0.3" height="15.0" fill="rgb(215,129,8)" rx="2" ry="2" />
<text  x="848.55" y="495.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (20 samples, 0.02%)</title><rect x="78.0" y="405" width="0.2" height="15.0" fill="rgb(239,29,19)" rx="2" ry="2" />
<text  x="80.96" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (67 samples, 0.07%)</title><rect x="1093.0" y="517" width="0.8" height="15.0" fill="rgb(205,222,46)" rx="2" ry="2" />
<text  x="1095.95" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::clear (122 samples, 0.13%)</title><rect x="590.8" y="613" width="1.6" height="15.0" fill="rgb(230,4,6)" rx="2" ry="2" />
<text  x="593.83" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::destroy&lt;char&gt; (34 samples, 0.04%)</title><rect x="1172.6" y="757" width="0.4" height="15.0" fill="rgb(234,130,52)" rx="2" ry="2" />
<text  x="1175.56" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (14 samples, 0.02%)</title><rect x="972.3" y="469" width="0.2" height="15.0" fill="rgb(210,139,8)" rx="2" ry="2" />
<text  x="975.33" y="479.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ostream (9 samples, 0.01%)</title><rect x="1146.0" y="629" width="0.1" height="15.0" fill="rgb(249,12,45)" rx="2" ry="2" />
<text  x="1148.97" y="639.5" ></text>
</g>
<g >
<title>__gthread_active_p (8 samples, 0.01%)</title><rect x="526.0" y="501" width="0.1" height="15.0" fill="rgb(252,174,3)" rx="2" ry="2" />
<text  x="528.97" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::_M_get_Tp_allocator (11 samples, 0.01%)</title><rect x="453.6" y="325" width="0.1" height="15.0" fill="rgb(221,99,45)" rx="2" ry="2" />
<text  x="456.56" y="335.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::recursive_mutex&gt;::unlock (35 samples, 0.04%)</title><rect x="795.4" y="597" width="0.5" height="15.0" fill="rgb(235,114,20)" rx="2" ry="2" />
<text  x="798.44" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;::_M_valptr (8 samples, 0.01%)</title><rect x="1087.0" y="517" width="0.1" height="15.0" fill="rgb(231,225,32)" rx="2" ry="2" />
<text  x="1090.01" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (112 samples, 0.12%)</title><rect x="183.3" y="581" width="1.4" height="15.0" fill="rgb(207,61,42)" rx="2" ry="2" />
<text  x="186.29" y="591.5" ></text>
</g>
<g >
<title>std::pair&lt;void*, CLockLocation&gt;::~pair (17 samples, 0.02%)</title><rect x="795.1" y="533" width="0.2" height="15.0" fill="rgb(249,175,5)" rx="2" ry="2" />
<text  x="798.12" y="543.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, uint256&gt; (19 samples, 0.02%)</title><rect x="505.3" y="133" width="0.2" height="15.0" fill="rgb(239,228,45)" rx="2" ry="2" />
<text  x="508.27" y="143.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (11 samples, 0.01%)</title><rect x="501.2" y="341" width="0.2" height="15.0" fill="rgb(251,29,36)" rx="2" ry="2" />
<text  x="504.22" y="351.5" ></text>
</g>
<g >
<title>__lock_get (16 samples, 0.02%)</title><rect x="138.8" y="453" width="0.2" height="15.0" fill="rgb(213,185,21)" rx="2" ry="2" />
<text  x="141.78" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_S_key (20 samples, 0.02%)</title><rect x="774.7" y="565" width="0.2" height="15.0" fill="rgb(250,68,17)" rx="2" ry="2" />
<text  x="777.67" y="575.5" ></text>
</g>
<g >
<title>CScript::SerializationOp&lt;CDataStream, CSerActionUnserialize&gt; (120 samples, 0.13%)</title><rect x="449.1" y="245" width="1.5" height="15.0" fill="rgb(246,218,26)" rx="2" ry="2" />
<text  x="452.09" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (10 samples, 0.01%)</title><rect x="534.8" y="613" width="0.1" height="15.0" fill="rgb(216,213,14)" rx="2" ry="2" />
<text  x="537.80" y="623.5" ></text>
</g>
<g >
<title>__lock_put (34 samples, 0.04%)</title><rect x="81.7" y="421" width="0.4" height="15.0" fill="rgb(236,142,49)" rx="2" ry="2" />
<text  x="84.68" y="431.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt; &gt; (86 samples, 0.09%)</title><rect x="510.8" y="165" width="1.1" height="15.0" fill="rgb(208,217,1)" rx="2" ry="2" />
<text  x="513.76" y="175.5" ></text>
</g>
<g >
<title>[unknown] (25 samples, 0.03%)</title><rect x="79.3" y="357" width="0.3" height="15.0" fill="rgb(220,195,21)" rx="2" ry="2" />
<text  x="82.28" y="367.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;std::shared_ptr&lt;CTransaction const&gt;&amp;&gt; (7,952 samples, 8.63%)</title><rect x="426.7" y="629" width="101.8" height="15.0" fill="rgb(248,18,49)" rx="2" ry="2" />
<text  x="429.68" y="639.5" >CDataStream:..</text>
</g>
<g >
<title>std::unique_ptr&lt;interfaces::Chain::Lock, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt;::operator bool (73 samples, 0.08%)</title><rect x="1017.8" y="661" width="0.9" height="15.0" fill="rgb(214,64,26)" rx="2" ry="2" />
<text  x="1020.76" y="671.5" ></text>
</g>
<g >
<title>__dbc_close (32 samples, 0.03%)</title><rect x="148.2" y="549" width="0.4" height="15.0" fill="rgb(215,160,44)" rx="2" ry="2" />
<text  x="151.20" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (10 samples, 0.01%)</title><rect x="813.2" y="325" width="0.2" height="15.0" fill="rgb(217,38,54)" rx="2" ry="2" />
<text  x="816.23" y="335.5" ></text>
</g>
<g >
<title>CHash256::Write (17 samples, 0.02%)</title><rect x="505.7" y="85" width="0.2" height="15.0" fill="rgb(210,152,21)" rx="2" ry="2" />
<text  x="508.73" y="95.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CScript&gt; (169 samples, 0.18%)</title><rect x="162.5" y="325" width="2.2" height="15.0" fill="rgb(245,69,38)" rx="2" ry="2" />
<text  x="165.53" y="335.5" ></text>
</g>
<g >
<title>CHash256::Finalize (121 samples, 0.13%)</title><rect x="1057.1" y="661" width="1.5" height="15.0" fill="rgb(234,148,17)" rx="2" ry="2" />
<text  x="1060.07" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::_Rb_tree_iterator (15 samples, 0.02%)</title><rect x="893.5" y="581" width="0.2" height="15.0" fill="rgb(226,98,50)" rx="2" ry="2" />
<text  x="896.50" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned int&gt; &gt;::deallocate (9 samples, 0.01%)</title><rect x="640.6" y="597" width="0.1" height="15.0" fill="rgb(242,202,32)" rx="2" ry="2" />
<text  x="643.60" y="607.5" ></text>
</g>
<g >
<title>CWalletTx::GetDepthInMainChain (79 samples, 0.09%)</title><rect x="32.7" y="645" width="1.0" height="15.0" fill="rgb(241,88,14)" rx="2" ry="2" />
<text  x="35.65" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::size (25 samples, 0.03%)</title><rect x="39.3" y="613" width="0.3" height="15.0" fill="rgb(237,192,54)" rx="2" ry="2" />
<text  x="42.31" y="623.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (12 samples, 0.01%)</title><rect x="1189.8" y="677" width="0.2" height="15.0" fill="rgb(240,122,19)" rx="2" ry="2" />
<text  x="1192.85" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (41 samples, 0.04%)</title><rect x="679.8" y="581" width="0.5" height="15.0" fill="rgb(236,86,28)" rx="2" ry="2" />
<text  x="682.82" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (35 samples, 0.04%)</title><rect x="563.4" y="645" width="0.5" height="15.0" fill="rgb(236,203,19)" rx="2" ry="2" />
<text  x="566.41" y="655.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;uint256, CBlockIndex*, BlockHasher, std::equal_to&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt; &gt;::insert&lt;std::pair&lt;uint256, CBlockIndex*&gt; &gt; (37 samples, 0.04%)</title><rect x="45.4" y="597" width="0.4" height="15.0" fill="rgb(233,60,37)" rx="2" ry="2" />
<text  x="48.36" y="607.5" ></text>
</g>
<g >
<title>CBlockIndexWorkComparator::operator (57 samples, 0.06%)</title><rect x="47.5" y="629" width="0.8" height="15.0" fill="rgb(226,40,45)" rx="2" ry="2" />
<text  x="50.55" y="639.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt; &gt;::allocate (27 samples, 0.03%)</title><rect x="773.9" y="549" width="0.3" height="15.0" fill="rgb(242,126,48)" rx="2" ry="2" />
<text  x="776.89" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_S_max_size (8 samples, 0.01%)</title><rect x="1183.1" y="757" width="0.1" height="15.0" fill="rgb(228,16,12)" rx="2" ry="2" />
<text  x="1186.12" y="767.5" ></text>
</g>
<g >
<title>std::forward&lt;std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (16 samples, 0.02%)</title><rect x="554.0" y="565" width="0.2" height="15.0" fill="rgb(216,213,4)" rx="2" ry="2" />
<text  x="557.01" y="575.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (38 samples, 0.04%)</title><rect x="84.2" y="357" width="0.4" height="15.0" fill="rgb(247,131,10)" rx="2" ry="2" />
<text  x="87.16" y="367.5" ></text>
</g>
<g >
<title>LockedPool::free (1,123 samples, 1.22%)</title><rect x="1080.4" y="597" width="14.4" height="15.0" fill="rgb(247,227,7)" rx="2" ry="2" />
<text  x="1083.39" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (8 samples, 0.01%)</title><rect x="45.5" y="517" width="0.1" height="15.0" fill="rgb(228,4,51)" rx="2" ry="2" />
<text  x="48.51" y="527.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 0.05%)</title><rect x="122.7" y="405" width="0.5" height="15.0" fill="rgb(251,2,31)" rx="2" ry="2" />
<text  x="125.71" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::_S_value (8 samples, 0.01%)</title><rect x="824.5" y="565" width="0.1" height="15.0" fill="rgb(221,30,54)" rx="2" ry="2" />
<text  x="827.54" y="575.5" ></text>
</g>
<g >
<title>ser_writedata32&lt;CSizeComputer&gt; (36 samples, 0.04%)</title><rect x="1030.8" y="549" width="0.4" height="15.0" fill="rgb(240,84,43)" rx="2" ry="2" />
<text  x="1033.76" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt;::construct&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;CKeyID const&amp;&gt;, std::tuple&lt;&gt; &gt; (105 samples, 0.11%)</title><rect x="854.8" y="581" width="1.3" height="15.0" fill="rgb(239,14,18)" rx="2" ry="2" />
<text  x="857.80" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_destroy_node (14 samples, 0.02%)</title><rect x="803.7" y="309" width="0.2" height="15.0" fill="rgb(237,151,50)" rx="2" ry="2" />
<text  x="806.71" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_Vector_impl::_Vector_impl (10 samples, 0.01%)</title><rect x="640.1" y="613" width="0.1" height="15.0" fill="rgb(232,26,8)" rx="2" ry="2" />
<text  x="643.11" y="623.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, 4&gt; (14 samples, 0.02%)</title><rect x="365.4" y="501" width="0.1" height="15.0" fill="rgb(236,51,27)" rx="2" ry="2" />
<text  x="368.36" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::_M_construct_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;CKeyID&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (1,951 samples, 2.12%)</title><rect x="796.8" y="581" width="24.9" height="15.0" fill="rgb(249,29,5)" rx="2" ry="2" />
<text  x="799.76" y="591.5" >s..</text>
</g>
<g >
<title>unlink_chunk.isra.0 (9 samples, 0.01%)</title><rect x="55.1" y="517" width="0.1" height="15.0" fill="rgb(215,71,16)" rx="2" ry="2" />
<text  x="58.10" y="527.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;&amp;&gt; (183 samples, 0.20%)</title><rect x="362.9" y="517" width="2.4" height="15.0" fill="rgb(251,171,33)" rx="2" ry="2" />
<text  x="365.92" y="527.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (9 samples, 0.01%)</title><rect x="99.0" y="357" width="0.1" height="15.0" fill="rgb(243,77,1)" rx="2" ry="2" />
<text  x="101.99" y="367.5" ></text>
</g>
<g >
<title>__bam_get_root (19 samples, 0.02%)</title><rect x="143.7" y="485" width="0.2" height="15.0" fill="rgb(248,112,21)" rx="2" ry="2" />
<text  x="146.70" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;char*&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (74 samples, 0.08%)</title><rect x="635.1" y="517" width="1.0" height="15.0" fill="rgb(219,194,2)" rx="2" ry="2" />
<text  x="638.12" y="527.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, unsigned int&gt; (31 samples, 0.03%)</title><rect x="492.9" y="229" width="0.4" height="15.0" fill="rgb(228,39,11)" rx="2" ry="2" />
<text  x="495.95" y="239.5" ></text>
</g>
<g >
<title>std::tuple&lt;char*&amp;&amp;&gt;::tuple&lt;char*, true&gt; (20 samples, 0.02%)</title><rect x="1090.1" y="517" width="0.3" height="15.0" fill="rgb(247,128,33)" rx="2" ry="2" />
<text  x="1093.10" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_S_max_size (21 samples, 0.02%)</title><rect x="820.4" y="437" width="0.3" height="15.0" fill="rgb(228,126,29)" rx="2" ry="2" />
<text  x="823.39" y="447.5" ></text>
</g>
<g >
<title>__memp_fput (21 samples, 0.02%)</title><rect x="79.6" y="421" width="0.3" height="15.0" fill="rgb(212,165,12)" rx="2" ry="2" />
<text  x="82.62" y="431.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTxOut&gt; (258 samples, 0.28%)</title><rect x="495.4" y="293" width="3.3" height="15.0" fill="rgb(214,191,4)" rx="2" ry="2" />
<text  x="498.38" y="303.5" ></text>
</g>
<g >
<title>UintToArith256 (24 samples, 0.03%)</title><rect x="43.7" y="645" width="0.3" height="15.0" fill="rgb(235,47,12)" rx="2" ry="2" />
<text  x="46.69" y="655.5" ></text>
</g>
<g >
<title>CRIPEMD160::Write (17 samples, 0.02%)</title><rect x="735.8" y="565" width="0.2" height="15.0" fill="rgb(209,75,51)" rx="2" ry="2" />
<text  x="738.76" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (10 samples, 0.01%)</title><rect x="547.3" y="501" width="0.2" height="15.0" fill="rgb(253,202,18)" rx="2" ry="2" />
<text  x="550.34" y="511.5" ></text>
</g>
<g >
<title>CSHA256::Write (8 samples, 0.01%)</title><rect x="498.4" y="149" width="0.1" height="15.0" fill="rgb(216,6,37)" rx="2" ry="2" />
<text  x="501.38" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_Vector_impl::_Vector_impl (11 samples, 0.01%)</title><rect x="820.8" y="453" width="0.2" height="15.0" fill="rgb(210,162,22)" rx="2" ry="2" />
<text  x="823.85" y="463.5" ></text>
</g>
<g >
<title>CRIPEMD160::CRIPEMD160 (9 samples, 0.01%)</title><rect x="717.5" y="565" width="0.1" height="15.0" fill="rgb(237,41,41)" rx="2" ry="2" />
<text  x="720.49" y="575.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (20 samples, 0.02%)</title><rect x="68.4" y="517" width="0.3" height="15.0" fill="rgb(213,38,11)" rx="2" ry="2" />
<text  x="71.42" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~_Rb_tree (32 samples, 0.03%)</title><rect x="1026.6" y="645" width="0.4" height="15.0" fill="rgb(214,125,25)" rx="2" ry="2" />
<text  x="1029.56" y="655.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.01%)</title><rect x="92.7" y="293" width="0.1" height="15.0" fill="rgb(227,49,23)" rx="2" ry="2" />
<text  x="95.65" y="303.5" ></text>
</g>
<g >
<title>__db_vrfy_getpageinfo (254 samples, 0.28%)</title><rect x="64.8" y="565" width="3.3" height="15.0" fill="rgb(239,36,40)" rx="2" ry="2" />
<text  x="67.83" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_get_Tp_allocator (8 samples, 0.01%)</title><rect x="767.7" y="421" width="0.1" height="15.0" fill="rgb(214,124,33)" rx="2" ry="2" />
<text  x="770.66" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;::_M_valptr (38 samples, 0.04%)</title><rect x="791.5" y="485" width="0.5" height="15.0" fill="rgb(205,88,29)" rx="2" ry="2" />
<text  x="794.48" y="495.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (418 samples, 0.45%)</title><rect x="97.0" y="437" width="5.4" height="15.0" fill="rgb(217,201,37)" rx="2" ry="2" />
<text  x="100.05" y="447.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Compare (167 samples, 0.18%)</title><rect x="900.9" y="565" width="2.1" height="15.0" fill="rgb(233,36,20)" rx="2" ry="2" />
<text  x="903.88" y="575.5" ></text>
</g>
<g >
<title>boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt;::destroy_content (61 samples, 0.07%)</title><rect x="770.8" y="597" width="0.8" height="15.0" fill="rgb(241,104,30)" rx="2" ry="2" />
<text  x="773.79" y="607.5" ></text>
</g>
<g >
<title>CTxOut::SetNull (13 samples, 0.01%)</title><rect x="509.6" y="293" width="0.2" height="15.0" fill="rgb(220,25,32)" rx="2" ry="2" />
<text  x="512.61" y="303.5" ></text>
</g>
<g >
<title>operator&lt; (755 samples, 0.82%)</title><rect x="991.4" y="597" width="9.6" height="15.0" fill="rgb(240,126,54)" rx="2" ry="2" />
<text  x="994.37" y="607.5" ></text>
</g>
<g >
<title>CTransaction::IsCoinBase (48 samples, 0.05%)</title><rect x="34.3" y="629" width="0.6" height="15.0" fill="rgb(238,210,41)" rx="2" ry="2" />
<text  x="37.28" y="639.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;CBlockHeader&gt; (32 samples, 0.03%)</title><rect x="43.3" y="613" width="0.4" height="15.0" fill="rgb(246,80,28)" rx="2" ry="2" />
<text  x="46.27" y="623.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt; &gt;::find (80 samples, 0.09%)</title><rect x="1084.3" y="565" width="1.0" height="15.0" fill="rgb(248,132,0)" rx="2" ry="2" />
<text  x="1087.32" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (21 samples, 0.02%)</title><rect x="856.5" y="549" width="0.3" height="15.0" fill="rgb(222,37,49)" rx="2" ry="2" />
<text  x="859.53" y="559.5" ></text>
</g>
<g >
<title>CSHA256::Finalize (47 samples, 0.05%)</title><rect x="42.7" y="581" width="0.6" height="15.0" fill="rgb(206,226,25)" rx="2" ry="2" />
<text  x="45.66" y="591.5" ></text>
</g>
<g >
<title>EnterCritical (986 samples, 1.07%)</title><rect x="837.3" y="613" width="12.6" height="15.0" fill="rgb(235,149,49)" rx="2" ry="2" />
<text  x="840.29" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (95 samples, 0.10%)</title><rect x="52.0" y="565" width="1.2" height="15.0" fill="rgb(235,13,53)" rx="2" ry="2" />
<text  x="55.02" y="575.5" ></text>
</g>
<g >
<title>CDiskBlockIndex::Unserialize&lt;CDataStream&gt; (121 samples, 0.13%)</title><rect x="40.1" y="613" width="1.5" height="15.0" fill="rgb(207,11,16)" rx="2" ry="2" />
<text  x="43.08" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_get_insert_equal_pos (40 samples, 0.04%)</title><rect x="801.8" y="341" width="0.5" height="15.0" fill="rgb(225,32,50)" rx="2" ry="2" />
<text  x="804.77" y="351.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;unsigned int*, unsigned long&gt; (11 samples, 0.01%)</title><rect x="364.5" y="421" width="0.1" height="15.0" fill="rgb(248,185,54)" rx="2" ry="2" />
<text  x="367.47" y="431.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::direct_ptr (11 samples, 0.01%)</title><rect x="440.7" y="133" width="0.1" height="15.0" fill="rgb(254,77,8)" rx="2" ry="2" />
<text  x="443.70" y="143.5" ></text>
</g>
<g >
<title>CTxIn::CTxIn (59 samples, 0.06%)</title><rect x="431.8" y="373" width="0.8" height="15.0" fill="rgb(247,171,33)" rx="2" ry="2" />
<text  x="434.84" y="383.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::DBIter::Next (54 samples, 0.06%)</title><rect x="41.7" y="645" width="0.7" height="15.0" fill="rgb(217,129,1)" rx="2" ry="2" />
<text  x="44.75" y="655.5" ></text>
</g>
<g >
<title>CSHA256::Finalize (161 samples, 0.17%)</title><rect x="1124.1" y="613" width="2.1" height="15.0" fill="rgb(227,120,33)" rx="2" ry="2" />
<text  x="1127.12" y="623.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::swap (49 samples, 0.05%)</title><rect x="737.2" y="581" width="0.6" height="15.0" fill="rgb(218,104,33)" rx="2" ry="2" />
<text  x="740.20" y="591.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (20 samples, 0.02%)</title><rect x="111.0" y="405" width="0.2" height="15.0" fill="rgb(222,19,39)" rx="2" ry="2" />
<text  x="113.97" y="415.5" ></text>
</g>
<g >
<title>std::recursive_mutex::lock (12 samples, 0.01%)</title><rect x="686.5" y="597" width="0.2" height="15.0" fill="rgb(252,154,46)" rx="2" ry="2" />
<text  x="689.53" y="607.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (11 samples, 0.01%)</title><rect x="535.0" y="613" width="0.1" height="15.0" fill="rgb(251,175,48)" rx="2" ry="2" />
<text  x="537.97" y="623.5" ></text>
</g>
<g >
<title>CHashWriter::write (28 samples, 0.03%)</title><rect x="484.5" y="293" width="0.4" height="15.0" fill="rgb(232,163,40)" rx="2" ry="2" />
<text  x="487.54" y="303.5" ></text>
</g>
<g >
<title>COutPoint::IsNull (13 samples, 0.01%)</title><rect x="1029.2" y="645" width="0.1" height="15.0" fill="rgb(243,69,48)" rx="2" ry="2" />
<text  x="1032.16" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_M_create_node&lt;uint256&amp;, CWalletTx&amp;&gt; (568 samples, 0.62%)</title><rect x="968.6" y="629" width="7.3" height="15.0" fill="rgb(230,204,50)" rx="2" ry="2" />
<text  x="971.63" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::max_size (24 samples, 0.03%)</title><rect x="1104.7" y="661" width="0.3" height="15.0" fill="rgb(246,2,5)" rx="2" ry="2" />
<text  x="1107.66" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::_Rb_tree_iterator (15 samples, 0.02%)</title><rect x="893.9" y="581" width="0.2" height="15.0" fill="rgb(228,154,43)" rx="2" ry="2" />
<text  x="896.90" y="591.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (25 samples, 0.03%)</title><rect x="426.1" y="597" width="0.3" height="15.0" fill="rgb(210,186,13)" rx="2" ry="2" />
<text  x="429.07" y="607.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (22 samples, 0.02%)</title><rect x="76.6" y="389" width="0.3" height="15.0" fill="rgb(250,19,5)" rx="2" ry="2" />
<text  x="79.62" y="399.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (18 samples, 0.02%)</title><rect x="377.5" y="485" width="0.2" height="15.0" fill="rgb(211,78,30)" rx="2" ry="2" />
<text  x="380.46" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::end (18 samples, 0.02%)</title><rect x="537.8" y="597" width="0.2" height="15.0" fill="rgb(254,221,26)" rx="2" ry="2" />
<text  x="540.77" y="607.5" ></text>
</g>
<g >
<title>CDataStream::read (10 samples, 0.01%)</title><rect x="409.1" y="565" width="0.1" height="15.0" fill="rgb(251,32,13)" rx="2" ry="2" />
<text  x="412.09" y="575.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::~prevector (11 samples, 0.01%)</title><rect x="737.9" y="597" width="0.1" height="15.0" fill="rgb(213,139,36)" rx="2" ry="2" />
<text  x="740.86" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt;::construct&lt;std::pair&lt;char* const, unsigned long&gt;, char*, unsigned long&amp;&gt; (9 samples, 0.01%)</title><rect x="571.3" y="437" width="0.1" height="15.0" fill="rgb(211,68,13)" rx="2" ry="2" />
<text  x="574.31" y="447.5" ></text>
</g>
<g >
<title>BerkeleyBatch::VerifyDatabaseFile (10 samples, 0.01%)</title><rect x="1144.7" y="677" width="0.1" height="15.0" fill="rgb(205,193,25)" rx="2" ry="2" />
<text  x="1147.70" y="687.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, uint256&amp;&gt; (20 samples, 0.02%)</title><rect x="436.6" y="197" width="0.3" height="15.0" fill="rgb(218,38,23)" rx="2" ry="2" />
<text  x="439.63" y="207.5" ></text>
</g>
<g >
<title>CSHA256::Finalize (271 samples, 0.29%)</title><rect x="1107.7" y="421" width="3.4" height="15.0" fill="rgb(208,23,15)" rx="2" ry="2" />
<text  x="1110.65" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const*, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (21 samples, 0.02%)</title><rect x="973.9" y="485" width="0.2" height="15.0" fill="rgb(214,19,4)" rx="2" ry="2" />
<text  x="976.86" y="495.5" ></text>
</g>
<g >
<title>__db_tas_mutex_readlock (15 samples, 0.02%)</title><rect x="77.8" y="405" width="0.2" height="15.0" fill="rgb(212,121,39)" rx="2" ry="2" />
<text  x="80.77" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::size (32 samples, 0.03%)</title><rect x="465.5" y="277" width="0.4" height="15.0" fill="rgb(221,209,31)" rx="2" ry="2" />
<text  x="468.52" y="287.5" ></text>
</g>
<g >
<title>std::function&lt;CBlockIndex*  (114 samples, 0.12%)</title><rect x="44.4" y="661" width="1.4" height="15.0" fill="rgb(239,79,2)" rx="2" ry="2" />
<text  x="47.39" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::select_on_container_copy_construction (32 samples, 0.03%)</title><rect x="971.4" y="469" width="0.4" height="15.0" fill="rgb(250,63,6)" rx="2" ry="2" />
<text  x="974.37" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_insert_dispatch&lt;unsigned char const*&gt; (276 samples, 0.30%)</title><rect x="1099.7" y="661" width="3.5" height="15.0" fill="rgb(215,39,38)" rx="2" ry="2" />
<text  x="1102.68" y="671.5" ></text>
</g>
<g >
<title>CPubKey::CPubKey (11 samples, 0.01%)</title><rect x="640.8" y="677" width="0.1" height="15.0" fill="rgb(238,203,41)" rx="2" ry="2" />
<text  x="643.79" y="687.5" ></text>
</g>
<g >
<title>__db_cursor_int (19 samples, 0.02%)</title><rect x="133.1" y="517" width="0.3" height="15.0" fill="rgb(237,212,42)" rx="2" ry="2" />
<text  x="136.12" y="527.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::map (44 samples, 0.05%)</title><rect x="1024.0" y="661" width="0.6" height="15.0" fill="rgb(251,63,30)" rx="2" ry="2" />
<text  x="1027.01" y="671.5" ></text>
</g>
<g >
<title>CDataStream::read (15 samples, 0.02%)</title><rect x="436.7" y="165" width="0.2" height="15.0" fill="rgb(250,43,15)" rx="2" ry="2" />
<text  x="439.69" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::max_size (23 samples, 0.02%)</title><rect x="820.4" y="453" width="0.3" height="15.0" fill="rgb(236,124,38)" rx="2" ry="2" />
<text  x="823.36" y="463.5" ></text>
</g>
<g >
<title>__os_umalloc (98 samples, 0.11%)</title><rect x="331.7" y="613" width="1.2" height="15.0" fill="rgb(206,171,19)" rx="2" ry="2" />
<text  x="334.65" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_S_value (21 samples, 0.02%)</title><rect x="930.2" y="581" width="0.3" height="15.0" fill="rgb(253,191,15)" rx="2" ry="2" />
<text  x="933.19" y="591.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::iterator::iterator (11 samples, 0.01%)</title><rect x="760.9" y="437" width="0.2" height="15.0" fill="rgb(243,182,24)" rx="2" ry="2" />
<text  x="763.91" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (70 samples, 0.08%)</title><rect x="542.6" y="613" width="0.9" height="15.0" fill="rgb(220,127,34)" rx="2" ry="2" />
<text  x="545.58" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::_Rb_tree_iterator (8 samples, 0.01%)</title><rect x="929.7" y="581" width="0.1" height="15.0" fill="rgb(214,171,42)" rx="2" ry="2" />
<text  x="932.68" y="591.5" ></text>
</g>
<g >
<title>__dbc_iput (315 samples, 0.34%)</title><rect x="111.4" y="469" width="4.0" height="15.0" fill="rgb(214,191,42)" rx="2" ry="2" />
<text  x="114.42" y="479.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (8 samples, 0.01%)</title><rect x="127.1" y="421" width="0.1" height="15.0" fill="rgb(230,188,38)" rx="2" ry="2" />
<text  x="130.13" y="431.5" ></text>
</g>
<g >
<title>Serialize&lt;CSizeComputer&gt; (13 samples, 0.01%)</title><rect x="1037.5" y="453" width="0.2" height="15.0" fill="rgb(218,36,28)" rx="2" ry="2" />
<text  x="1040.50" y="463.5" ></text>
</g>
<g >
<title>CHash160::Finalize (146 samples, 0.16%)</title><rect x="1122.3" y="645" width="1.8" height="15.0" fill="rgb(224,23,39)" rx="2" ry="2" />
<text  x="1125.25" y="655.5" ></text>
</g>
<g >
<title>__bam_ca_di (34 samples, 0.04%)</title><rect x="108.9" y="421" width="0.4" height="15.0" fill="rgb(234,181,46)" rx="2" ry="2" />
<text  x="111.89" y="431.5" ></text>
</g>
<g >
<title>std::mutex::unlock (9 samples, 0.01%)</title><rect x="572.2" y="517" width="0.1" height="15.0" fill="rgb(253,202,53)" rx="2" ry="2" />
<text  x="575.16" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (40 samples, 0.04%)</title><rect x="809.4" y="309" width="0.5" height="15.0" fill="rgb(219,119,24)" rx="2" ry="2" />
<text  x="812.36" y="319.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt; &gt; (184 samples, 0.20%)</title><rect x="490.4" y="165" width="2.4" height="15.0" fill="rgb(243,13,46)" rx="2" ry="2" />
<text  x="493.41" y="175.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char*&amp;&amp;&gt;::_Tuple_impl (15 samples, 0.02%)</title><rect x="1089.4" y="469" width="0.2" height="15.0" fill="rgb(229,154,5)" rx="2" ry="2" />
<text  x="1092.37" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_M_allocate (17 samples, 0.02%)</title><rect x="443.3" y="325" width="0.2" height="15.0" fill="rgb(225,6,43)" rx="2" ry="2" />
<text  x="446.29" y="335.5" ></text>
</g>
<g >
<title>SerializeHash&lt;CTransaction&gt; (1,631 samples, 1.77%)</title><rect x="500.8" y="421" width="20.9" height="15.0" fill="rgb(219,22,9)" rx="2" ry="2" />
<text  x="503.80" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::_M_ptr (11 samples, 0.01%)</title><rect x="904.4" y="549" width="0.1" height="15.0" fill="rgb(230,10,11)" rx="2" ry="2" />
<text  x="907.37" y="559.5" ></text>
</g>
<g >
<title>all (92,140 samples, 100%)</title><rect x="10.0" y="789" width="1180.0" height="15.0" fill="rgb(236,66,36)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.01%)</title><rect x="814.0" y="277" width="0.1" height="15.0" fill="rgb(212,17,17)" rx="2" ry="2" />
<text  x="816.96" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (13 samples, 0.01%)</title><rect x="1023.2" y="645" width="0.1" height="15.0" fill="rgb(237,175,4)" rx="2" ry="2" />
<text  x="1026.17" y="655.5" ></text>
</g>
<g >
<title>__bam_iitem (8 samples, 0.01%)</title><rect x="147.9" y="501" width="0.1" height="15.0" fill="rgb(230,209,41)" rx="2" ry="2" />
<text  x="150.89" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (29 samples, 0.03%)</title><rect x="1105.0" y="677" width="0.3" height="15.0" fill="rgb(221,5,11)" rx="2" ry="2" />
<text  x="1107.98" y="687.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (20 samples, 0.02%)</title><rect x="67.4" y="453" width="0.3" height="15.0" fill="rgb(210,62,4)" rx="2" ry="2" />
<text  x="70.44" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, char*&gt;::pair&lt;char*&amp;, true&gt; (9 samples, 0.01%)</title><rect x="801.1" y="277" width="0.2" height="15.0" fill="rgb(239,5,29)" rx="2" ry="2" />
<text  x="804.14" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (12 samples, 0.01%)</title><rect x="849.6" y="485" width="0.2" height="15.0" fill="rgb(232,48,13)" rx="2" ry="2" />
<text  x="852.60" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (80 samples, 0.09%)</title><rect x="943.4" y="533" width="1.0" height="15.0" fill="rgb(208,185,15)" rx="2" ry="2" />
<text  x="946.37" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (122 samples, 0.13%)</title><rect x="774.3" y="581" width="1.6" height="15.0" fill="rgb(245,77,19)" rx="2" ry="2" />
<text  x="777.32" y="591.5" ></text>
</g>
<g >
<title>__lock_get_internal (344 samples, 0.37%)</title><rect x="311.2" y="565" width="4.4" height="15.0" fill="rgb(246,79,48)" rx="2" ry="2" />
<text  x="314.17" y="575.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::operator (38 samples, 0.04%)</title><rect x="979.0" y="597" width="0.5" height="15.0" fill="rgb(225,27,13)" rx="2" ry="2" />
<text  x="982.04" y="607.5" ></text>
</g>
<g >
<title>std::pair&lt;void*, CLockLocation&gt;::pair (35 samples, 0.04%)</title><rect x="950.1" y="469" width="0.4" height="15.0" fill="rgb(222,209,1)" rx="2" ry="2" />
<text  x="953.09" y="479.5" ></text>
</g>
<g >
<title>ChainActive (10 samples, 0.01%)</title><rect x="19.5" y="757" width="0.1" height="15.0" fill="rgb(231,185,38)" rx="2" ry="2" />
<text  x="22.45" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_M_default_append (1,984 samples, 2.15%)</title><rect x="565.2" y="613" width="25.4" height="15.0" fill="rgb(240,46,16)" rx="2" ry="2" />
<text  x="568.19" y="623.5" >s..</text>
</g>
<g >
<title>__db_put (314 samples, 0.34%)</title><rect x="151.8" y="565" width="4.0" height="15.0" fill="rgb(231,133,5)" rx="2" ry="2" />
<text  x="154.81" y="575.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (10 samples, 0.01%)</title><rect x="542.2" y="629" width="0.1" height="15.0" fill="rgb(223,61,19)" rx="2" ry="2" />
<text  x="545.22" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::empty (46 samples, 0.05%)</title><rect x="477.1" y="373" width="0.6" height="15.0" fill="rgb(225,136,5)" rx="2" ry="2" />
<text  x="480.10" y="383.5" ></text>
</g>
<g >
<title>__dbc_iget (686 samples, 0.74%)</title><rect x="82.3" y="469" width="8.8" height="15.0" fill="rgb(253,23,14)" rx="2" ry="2" />
<text  x="85.33" y="479.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt; &gt;::operator[] (48 samples, 0.05%)</title><rect x="810.6" y="373" width="0.6" height="15.0" fill="rgb(221,123,47)" rx="2" ry="2" />
<text  x="813.58" y="383.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;CTransaction const,  (46 samples, 0.05%)</title><rect x="33.7" y="613" width="0.6" height="15.0" fill="rgb(234,178,18)" rx="2" ry="2" />
<text  x="36.68" y="623.5" ></text>
</g>
<g >
<title>__bam_split (44 samples, 0.05%)</title><rect x="109.5" y="437" width="0.6" height="15.0" fill="rgb(212,14,48)" rx="2" ry="2" />
<text  x="112.51" y="447.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTxOut, std::allocator&lt;CTxOut&gt; &gt; (169 samples, 0.18%)</title><rect x="162.5" y="437" width="2.2" height="15.0" fill="rgb(213,107,45)" rx="2" ry="2" />
<text  x="165.53" y="447.5" ></text>
</g>
<g >
<title>__db_goff (84 samples, 0.09%)</title><rect x="328.8" y="629" width="1.1" height="15.0" fill="rgb(232,87,21)" rx="2" ry="2" />
<text  x="331.85" y="639.5" ></text>
</g>
<g >
<title>CWalletTx::GetDepthInMainChain (215 samples, 0.23%)</title><rect x="51.0" y="661" width="2.8" height="15.0" fill="rgb(244,71,16)" rx="2" ry="2" />
<text  x="54.05" y="671.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (18 samples, 0.02%)</title><rect x="1147.1" y="677" width="0.2" height="15.0" fill="rgb(240,121,39)" rx="2" ry="2" />
<text  x="1150.07" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;char* const&amp;&gt;, std::tuple&lt;&gt; &gt; (63 samples, 0.07%)</title><rect x="634.3" y="517" width="0.8" height="15.0" fill="rgb(244,66,51)" rx="2" ry="2" />
<text  x="637.31" y="527.5" ></text>
</g>
<g >
<title>_int_malloc (14 samples, 0.02%)</title><rect x="523.9" y="437" width="0.2" height="15.0" fill="rgb(234,142,2)" rx="2" ry="2" />
<text  x="526.92" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::emplace&lt;std::pair&lt;uint256, CBlockIndex*&gt; &gt; (37 samples, 0.04%)</title><rect x="45.4" y="581" width="0.4" height="15.0" fill="rgb(211,25,13)" rx="2" ry="2" />
<text  x="48.36" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;CTxIn const*, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt;::operator++ (14 samples, 0.02%)</title><rect x="933.8" y="645" width="0.1" height="15.0" fill="rgb(253,198,50)" rx="2" ry="2" />
<text  x="936.77" y="655.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt; &gt;::erase (145 samples, 0.16%)</title><rect x="808.7" y="373" width="1.9" height="15.0" fill="rgb(218,64,6)" rx="2" ry="2" />
<text  x="811.72" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const*, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (10 samples, 0.01%)</title><rect x="974.0" y="469" width="0.1" height="15.0" fill="rgb(253,101,0)" rx="2" ry="2" />
<text  x="977.00" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (10 samples, 0.01%)</title><rect x="632.8" y="453" width="0.2" height="15.0" fill="rgb(226,36,7)" rx="2" ry="2" />
<text  x="635.85" y="463.5" ></text>
</g>
<g >
<title>CSHA256::Finalize (112 samples, 0.12%)</title><rect x="1119.2" y="677" width="1.4" height="15.0" fill="rgb(244,20,13)" rx="2" ry="2" />
<text  x="1122.19" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::end (13 samples, 0.01%)</title><rect x="934.5" y="629" width="0.1" height="15.0" fill="rgb(207,187,36)" rx="2" ry="2" />
<text  x="937.46" y="639.5" ></text>
</g>
<g >
<title>CScript::Unserialize&lt;CDataStream&gt; (123 samples, 0.13%)</title><rect x="449.0" y="261" width="1.6" height="15.0" fill="rgb(235,26,43)" rx="2" ry="2" />
<text  x="452.05" y="271.5" ></text>
</g>
<g >
<title>StartWallets (215 samples, 0.23%)</title><rect x="51.0" y="709" width="2.8" height="15.0" fill="rgb(210,216,24)" rx="2" ry="2" />
<text  x="54.05" y="719.5" ></text>
</g>
<g >
<title>__db_lput (24 samples, 0.03%)</title><rect x="76.6" y="421" width="0.3" height="15.0" fill="rgb(230,194,28)" rx="2" ry="2" />
<text  x="79.59" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (16 samples, 0.02%)</title><rect x="421.8" y="517" width="0.2" height="15.0" fill="rgb(206,78,34)" rx="2" ry="2" />
<text  x="424.76" y="527.5" ></text>
</g>
<g >
<title>CHash256::Write (8 samples, 0.01%)</title><rect x="498.8" y="245" width="0.1" height="15.0" fill="rgb(207,121,6)" rx="2" ry="2" />
<text  x="501.82" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;::operator (48 samples, 0.05%)</title><rect x="799.8" y="373" width="0.6" height="15.0" fill="rgb(234,77,19)" rx="2" ry="2" />
<text  x="802.77" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (17 samples, 0.02%)</title><rect x="1182.6" y="757" width="0.3" height="15.0" fill="rgb(225,23,7)" rx="2" ry="2" />
<text  x="1185.65" y="767.5" ></text>
</g>
<g >
<title>CSHA256::Write (361 samples, 0.39%)</title><rect x="1114.6" y="277" width="4.6" height="15.0" fill="rgb(244,74,1)" rx="2" ry="2" />
<text  x="1117.57" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;CScriptID const&amp;&gt;, std::tuple&lt;&gt; &gt; (186 samples, 0.20%)</title><rect x="771.9" y="581" width="2.4" height="15.0" fill="rgb(228,59,25)" rx="2" ry="2" />
<text  x="774.94" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::deallocate (14 samples, 0.02%)</title><rect x="809.6" y="277" width="0.1" height="15.0" fill="rgb(207,16,2)" rx="2" ry="2" />
<text  x="812.57" y="287.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::end (8 samples, 0.01%)</title><rect x="555.1" y="613" width="0.1" height="15.0" fill="rgb(219,100,1)" rx="2" ry="2" />
<text  x="558.09" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (72 samples, 0.08%)</title><rect x="568.0" y="469" width="1.0" height="15.0" fill="rgb(219,198,19)" rx="2" ry="2" />
<text  x="571.05" y="479.5" ></text>
</g>
<g >
<title>CSHA256::Write (8 samples, 0.01%)</title><rect x="658.9" y="629" width="0.2" height="15.0" fill="rgb(227,187,17)" rx="2" ry="2" />
<text  x="661.95" y="639.5" ></text>
</g>
<g >
<title>Serialize&lt;CSizeComputer, 28u, unsigned char&gt; (64 samples, 0.07%)</title><rect x="1036.3" y="373" width="0.9" height="15.0" fill="rgb(253,23,40)" rx="2" ry="2" />
<text  x="1039.35" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, interfaces::(anonymous namespace)::LockImpl*, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt; (11 samples, 0.01%)</title><rect x="952.9" y="565" width="0.2" height="15.0" fill="rgb(229,167,6)" rx="2" ry="2" />
<text  x="955.92" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::begin (9 samples, 0.01%)</title><rect x="1042.2" y="533" width="0.1" height="15.0" fill="rgb(245,213,5)" rx="2" ry="2" />
<text  x="1045.16" y="543.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Compare (11 samples, 0.01%)</title><rect x="53.1" y="469" width="0.1" height="15.0" fill="rgb(254,1,46)" rx="2" ry="2" />
<text  x="56.07" y="479.5" ></text>
</g>
<g >
<title>std::less&lt;boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt; &gt;::operator (9 samples, 0.01%)</title><rect x="1065.6" y="613" width="0.1" height="15.0" fill="rgb(212,52,31)" rx="2" ry="2" />
<text  x="1068.57" y="623.5" ></text>
</g>
<g >
<title>CWalletTx::MarkDirty (49 samples, 0.05%)</title><rect x="955.7" y="645" width="0.6" height="15.0" fill="rgb(212,111,45)" rx="2" ry="2" />
<text  x="958.72" y="655.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned (10 samples, 0.01%)</title><rect x="481.5" y="341" width="0.1" height="15.0" fill="rgb(227,53,9)" rx="2" ry="2" />
<text  x="484.50" y="351.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (9 samples, 0.01%)</title><rect x="1146.0" y="613" width="0.1" height="15.0" fill="rgb(209,116,22)" rx="2" ry="2" />
<text  x="1148.97" y="623.5" ></text>
</g>
<g >
<title>_mm_sha256rnds2_epu32 (53 samples, 0.06%)</title><rect x="1125.2" y="549" width="0.7" height="15.0" fill="rgb(247,100,7)" rx="2" ry="2" />
<text  x="1128.21" y="559.5" ></text>
</g>
<g >
<title>std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::pair&lt;char*&amp;&amp;&gt; (21 samples, 0.02%)</title><rect x="1089.1" y="485" width="0.3" height="15.0" fill="rgb(239,18,4)" rx="2" ry="2" />
<text  x="1092.10" y="495.5" ></text>
</g>
<g >
<title>_mm_add_epi32 (28 samples, 0.03%)</title><rect x="1129.6" y="629" width="0.4" height="15.0" fill="rgb(210,210,41)" rx="2" ry="2" />
<text  x="1132.64" y="639.5" ></text>
</g>
<g >
<title>__db_lput (18 samples, 0.02%)</title><rect x="148.2" y="517" width="0.2" height="15.0" fill="rgb(246,138,11)" rx="2" ry="2" />
<text  x="151.21" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;secure_allocator&lt;unsigned char&gt; &gt;::max_size (8 samples, 0.01%)</title><rect x="820.5" y="421" width="0.1" height="15.0" fill="rgb(252,73,4)" rx="2" ry="2" />
<text  x="823.47" y="431.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;CTransaction const, std::allocator&lt;CTransaction&gt;, deserialize_type const&amp;, CDataStream&amp;&gt; (352 samples, 0.38%)</title><rect x="162.5" y="693" width="4.5" height="15.0" fill="rgb(251,135,2)" rx="2" ry="2" />
<text  x="165.53" y="703.5" ></text>
</g>
<g >
<title>ChainActive (16 samples, 0.02%)</title><rect x="53.4" y="613" width="0.2" height="15.0" fill="rgb(252,67,46)" rx="2" ry="2" />
<text  x="56.44" y="623.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (8 samples, 0.01%)</title><rect x="122.0" y="437" width="0.1" height="15.0" fill="rgb(245,174,19)" rx="2" ry="2" />
<text  x="124.99" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (16 samples, 0.02%)</title><rect x="331.4" y="613" width="0.3" height="15.0" fill="rgb(212,43,43)" rx="2" ry="2" />
<text  x="334.45" y="623.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, KeyOriginInfo&amp;&gt; (219 samples, 0.24%)</title><rect x="362.8" y="581" width="2.8" height="15.0" fill="rgb(217,155,23)" rx="2" ry="2" />
<text  x="365.77" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, CWalletTx*&gt;, std::_Select1st&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::_S_key (111 samples, 0.12%)</title><rect x="1005.1" y="613" width="1.5" height="15.0" fill="rgb(242,171,10)" rx="2" ry="2" />
<text  x="1008.15" y="623.5" ></text>
</g>
<g >
<title>sha256_shani::Transform (271 samples, 0.29%)</title><rect x="1137.3" y="181" width="3.5" height="15.0" fill="rgb(218,130,53)" rx="2" ry="2" />
<text  x="1140.31" y="191.5" ></text>
</g>
<g >
<title>sha256_shani::Transform (183 samples, 0.20%)</title><rect x="164.7" y="165" width="2.3" height="15.0" fill="rgb(220,154,46)" rx="2" ry="2" />
<text  x="167.69" y="175.5" ></text>
</g>
<g >
<title>boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt;::internal_apply_visitor&lt;boost::detail::variant::invoke_visitor&lt;(anonymous namespace)::CScriptVisitor const, false&gt; &gt; (885 samples, 0.96%)</title><rect x="758.3" y="565" width="11.3" height="15.0" fill="rgb(254,219,51)" rx="2" ry="2" />
<text  x="761.29" y="575.5" ></text>
</g>
<g >
<title>interfaces::(anonymous namespace)::ChainImpl::lock (1,063 samples, 1.15%)</title><rect x="941.9" y="645" width="13.6" height="15.0" fill="rgb(219,152,0)" rx="2" ry="2" />
<text  x="944.92" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (46 samples, 0.05%)</title><rect x="810.6" y="357" width="0.6" height="15.0" fill="rgb(219,98,52)" rx="2" ry="2" />
<text  x="813.60" y="367.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Unserialize&lt;CDataStream&gt; (23 samples, 0.02%)</title><rect x="37.0" y="597" width="0.3" height="15.0" fill="rgb(222,37,19)" rx="2" ry="2" />
<text  x="40.05" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (19 samples, 0.02%)</title><rect x="1092.7" y="533" width="0.2" height="15.0" fill="rgb(228,216,39)" rx="2" ry="2" />
<text  x="1095.67" y="543.5" ></text>
</g>
<g >
<title>CTransaction::ComputeHash (271 samples, 0.29%)</title><rect x="1137.3" y="565" width="3.5" height="15.0" fill="rgb(237,16,30)" rx="2" ry="2" />
<text  x="1140.31" y="575.5" ></text>
</g>
<g >
<title>__libc_pread (27 samples, 0.03%)</title><rect x="101.8" y="357" width="0.3" height="15.0" fill="rgb(219,75,23)" rx="2" ry="2" />
<text  x="104.77" y="367.5" ></text>
</g>
<g >
<title>__os_malloc (21 samples, 0.02%)</title><rect x="130.9" y="421" width="0.2" height="15.0" fill="rgb(239,51,11)" rx="2" ry="2" />
<text  x="133.86" y="431.5" ></text>
</g>
<g >
<title>CScriptWitness::CScriptWitness (14 samples, 0.02%)</title><rect x="485.7" y="293" width="0.1" height="15.0" fill="rgb(252,73,51)" rx="2" ry="2" />
<text  x="488.66" y="303.5" ></text>
</g>
<g >
<title>__db_cursor (43 samples, 0.05%)</title><rect x="80.6" y="485" width="0.6" height="15.0" fill="rgb(250,146,13)" rx="2" ry="2" />
<text  x="83.60" y="495.5" ></text>
</g>
<g >
<title>CWallet::postInitProcess (266 samples, 0.29%)</title><rect x="32.6" y="677" width="3.4" height="15.0" fill="rgb(232,148,15)" rx="2" ry="2" />
<text  x="35.62" y="687.5" ></text>
</g>
<g >
<title>__memp_fget (26 samples, 0.03%)</title><rect x="62.3" y="453" width="0.3" height="15.0" fill="rgb(245,220,32)" rx="2" ry="2" />
<text  x="65.30" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (13 samples, 0.01%)</title><rect x="680.3" y="581" width="0.2" height="15.0" fill="rgb(225,47,14)" rx="2" ry="2" />
<text  x="683.35" y="591.5" ></text>
</g>
<g >
<title>operator+ (10 samples, 0.01%)</title><rect x="46.4" y="661" width="0.1" height="15.0" fill="rgb(214,12,18)" rx="2" ry="2" />
<text  x="49.36" y="671.5" ></text>
</g>
<g >
<title>CSHA256::Write (18 samples, 0.02%)</title><rect x="515.8" y="197" width="0.2" height="15.0" fill="rgb(246,199,34)" rx="2" ry="2" />
<text  x="518.76" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, CWalletTx*&gt;, std::_Select1st&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::_M_get_insert_equal_pos (892 samples, 0.97%)</title><rect x="1004.0" y="629" width="11.4" height="15.0" fill="rgb(242,106,48)" rx="2" ry="2" />
<text  x="1007.01" y="639.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::base_blob (8 samples, 0.01%)</title><rect x="1062.6" y="501" width="0.1" height="15.0" fill="rgb(210,73,18)" rx="2" ry="2" />
<text  x="1065.64" y="511.5" ></text>
</g>
<g >
<title>__lock_get (15 samples, 0.02%)</title><rect x="139.4" y="469" width="0.2" height="15.0" fill="rgb(214,88,40)" rx="2" ry="2" />
<text  x="142.41" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::clear (13 samples, 0.01%)</title><rect x="468.3" y="357" width="0.2" height="15.0" fill="rgb(230,9,17)" rx="2" ry="2" />
<text  x="471.31" y="367.5" ></text>
</g>
<g >
<title>AssertLockHeldInternal (43 samples, 0.05%)</title><rect x="851.4" y="661" width="0.6" height="15.0" fill="rgb(248,141,9)" rx="2" ry="2" />
<text  x="854.41" y="671.5" ></text>
</g>
<g >
<title>CScript::~CScript (8 samples, 0.01%)</title><rect x="503.7" y="293" width="0.1" height="15.0" fill="rgb(210,41,39)" rx="2" ry="2" />
<text  x="506.69" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_Rb_tree (46 samples, 0.05%)</title><rect x="1050.4" y="645" width="0.6" height="15.0" fill="rgb(235,79,40)" rx="2" ry="2" />
<text  x="1053.37" y="655.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (18 samples, 0.02%)</title><rect x="465.3" y="245" width="0.2" height="15.0" fill="rgb(210,101,2)" rx="2" ry="2" />
<text  x="468.29" y="255.5" ></text>
</g>
<g >
<title>__db_vrfy_childcursor (46 samples, 0.05%)</title><rect x="80.6" y="501" width="0.6" height="15.0" fill="rgb(207,83,20)" rx="2" ry="2" />
<text  x="83.56" y="511.5" ></text>
</g>
<g >
<title>__mutex_alloc_int (8 samples, 0.01%)</title><rect x="101.6" y="373" width="0.1" height="15.0" fill="rgb(243,80,36)" rx="2" ry="2" />
<text  x="104.64" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_M_default_append (319 samples, 0.35%)</title><rect x="442.5" y="341" width="4.1" height="15.0" fill="rgb(226,131,8)" rx="2" ry="2" />
<text  x="445.49" y="351.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (29 samples, 0.03%)</title><rect x="816.1" y="389" width="0.4" height="15.0" fill="rgb(220,104,52)" rx="2" ry="2" />
<text  x="819.15" y="399.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;CTransaction&gt; (169 samples, 0.18%)</title><rect x="162.5" y="517" width="2.2" height="15.0" fill="rgb(220,90,37)" rx="2" ry="2" />
<text  x="165.53" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;COutPoint&gt;::_M_valptr (9 samples, 0.01%)</title><rect x="1051.6" y="581" width="0.1" height="15.0" fill="rgb(212,4,23)" rx="2" ry="2" />
<text  x="1054.56" y="591.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::recursive_mutex&gt;::unlock (8 samples, 0.01%)</title><rect x="1177.4" y="757" width="0.1" height="15.0" fill="rgb(208,117,39)" rx="2" ry="2" />
<text  x="1180.40" y="767.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.01%)</title><rect x="857.7" y="565" width="0.1" height="15.0" fill="rgb(222,1,14)" rx="2" ry="2" />
<text  x="860.68" y="575.5" ></text>
</g>
<g >
<title>__os_io (66 samples, 0.07%)</title><rect x="89.7" y="373" width="0.8" height="15.0" fill="rgb(205,94,37)" rx="2" ry="2" />
<text  x="92.66" y="383.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTransaction&gt; (1,518 samples, 1.65%)</title><rect x="502.2" y="389" width="19.5" height="15.0" fill="rgb(249,152,31)" rx="2" ry="2" />
<text  x="505.25" y="399.5" ></text>
</g>
<g >
<title>CLockLocation::CLockLocation (160 samples, 0.17%)</title><rect x="837.4" y="597" width="2.1" height="15.0" fill="rgb(235,159,37)" rx="2" ry="2" />
<text  x="840.43" y="607.5" ></text>
</g>
<g >
<title>std::copy&lt;unsigned char const*, __gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (50 samples, 0.05%)</title><rect x="1102.1" y="629" width="0.6" height="15.0" fill="rgb(206,9,51)" rx="2" ry="2" />
<text  x="1105.07" y="639.5" ></text>
</g>
<g >
<title>std::map&lt;CScriptID, CScript, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::end (20 samples, 0.02%)</title><rect x="777.4" y="597" width="0.3" height="15.0" fill="rgb(209,111,10)" rx="2" ry="2" />
<text  x="780.45" y="607.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.02%)</title><rect x="90.3" y="229" width="0.2" height="15.0" fill="rgb(232,142,6)" rx="2" ry="2" />
<text  x="93.31" y="239.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (54 samples, 0.06%)</title><rect x="94.8" y="437" width="0.6" height="15.0" fill="rgb(252,50,44)" rx="2" ry="2" />
<text  x="97.75" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::lower_bound (776 samples, 0.84%)</title><rect x="826.8" y="597" width="10.0" height="15.0" fill="rgb(214,0,37)" rx="2" ry="2" />
<text  x="829.82" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Rb_tree_iterator (13 samples, 0.01%)</title><rect x="422.2" y="533" width="0.1" height="15.0" fill="rgb(230,118,15)" rx="2" ry="2" />
<text  x="425.17" y="543.5" ></text>
</g>
<g >
<title>CRIPEMD160::Write (1,173 samples, 1.27%)</title><rect x="663.3" y="581" width="15.0" height="15.0" fill="rgb(228,21,7)" rx="2" ry="2" />
<text  x="666.29" y="591.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (8 samples, 0.01%)</title><rect x="1023.1" y="645" width="0.1" height="15.0" fill="rgb(218,93,35)" rx="2" ry="2" />
<text  x="1026.07" y="655.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (32 samples, 0.03%)</title><rect x="1048.6" y="517" width="0.4" height="15.0" fill="rgb(250,79,21)" rx="2" ry="2" />
<text  x="1051.58" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::lower_bound (1,524 samples, 1.65%)</title><rect x="871.7" y="581" width="19.5" height="15.0" fill="rgb(224,199,46)" rx="2" ry="2" />
<text  x="874.69" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_addr (12 samples, 0.01%)</title><rect x="969.4" y="565" width="0.1" height="15.0" fill="rgb(230,171,25)" rx="2" ry="2" />
<text  x="972.36" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;CTxIn&gt; &gt;::allocate (13 samples, 0.01%)</title><rect x="443.3" y="309" width="0.2" height="15.0" fill="rgb(243,177,34)" rx="2" ry="2" />
<text  x="446.34" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;COutPoint&gt;::_Rb_tree_iterator (13 samples, 0.01%)</title><rect x="932.4" y="581" width="0.2" height="15.0" fill="rgb(249,58,46)" rx="2" ry="2" />
<text  x="935.41" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt;::destroy&lt;std::pair&lt;void*, CLockLocation&gt; &gt; (26 samples, 0.03%)</title><rect x="1020.7" y="517" width="0.3" height="15.0" fill="rgb(232,149,32)" rx="2" ry="2" />
<text  x="1023.68" y="527.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (14 samples, 0.02%)</title><rect x="162.1" y="533" width="0.2" height="15.0" fill="rgb(233,90,20)" rx="2" ry="2" />
<text  x="165.14" y="543.5" ></text>
</g>
<g >
<title>__libc_pread (34 samples, 0.04%)</title><rect x="123.4" y="453" width="0.5" height="15.0" fill="rgb(244,219,20)" rx="2" ry="2" />
<text  x="126.42" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (163 samples, 0.18%)</title><rect x="567.6" y="485" width="2.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="570.60" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;::_M_valptr (34 samples, 0.04%)</title><rect x="689.0" y="549" width="0.4" height="15.0" fill="rgb(212,32,36)" rx="2" ry="2" />
<text  x="691.97" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt; &gt;::_M_deallocate_node (42 samples, 0.05%)</title><rect x="637.2" y="485" width="0.5" height="15.0" fill="rgb(224,37,44)" rx="2" ry="2" />
<text  x="640.20" y="495.5" ></text>
</g>
<g >
<title>ShiftMessageB (19 samples, 0.02%)</title><rect x="1144.0" y="165" width="0.3" height="15.0" fill="rgb(215,165,48)" rx="2" ry="2" />
<text  x="1147.05" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (17 samples, 0.02%)</title><rect x="612.9" y="501" width="0.2" height="15.0" fill="rgb(217,62,25)" rx="2" ry="2" />
<text  x="615.90" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::destroy&lt;char&gt; (10 samples, 0.01%)</title><rect x="592.3" y="533" width="0.1" height="15.0" fill="rgb(234,223,26)" rx="2" ry="2" />
<text  x="595.26" y="543.5" ></text>
</g>
<g >
<title>ShiftMessageB (22 samples, 0.02%)</title><rect x="1140.3" y="165" width="0.3" height="15.0" fill="rgb(215,199,4)" rx="2" ry="2" />
<text  x="1143.34" y="175.5" ></text>
</g>
<g >
<title>CTxIn::CTxIn (42 samples, 0.05%)</title><rect x="485.3" y="309" width="0.5" height="15.0" fill="rgb(208,118,28)" rx="2" ry="2" />
<text  x="488.30" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; (21 samples, 0.02%)</title><rect x="517.9" y="293" width="0.3" height="15.0" fill="rgb(205,42,2)" rx="2" ry="2" />
<text  x="520.90" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;uint256, std::allocator&lt;uint256&gt; &gt;::_M_default_append (54 samples, 0.06%)</title><rect x="30.7" y="645" width="0.7" height="15.0" fill="rgb(236,194,45)" rx="2" ry="2" />
<text  x="33.71" y="655.5" ></text>
</g>
<g >
<title>WriteBE32 (16 samples, 0.02%)</title><rect x="715.4" y="565" width="0.2" height="15.0" fill="rgb(239,195,42)" rx="2" ry="2" />
<text  x="718.37" y="575.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.01%)</title><rect x="131.6" y="341" width="0.2" height="15.0" fill="rgb(233,67,37)" rx="2" ry="2" />
<text  x="134.59" y="351.5" ></text>
</g>
<g >
<title>BerkeleyEnvironment::Close (13 samples, 0.01%)</title><rect x="162.4" y="501" width="0.1" height="15.0" fill="rgb(220,118,2)" rx="2" ry="2" />
<text  x="165.36" y="511.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (8 samples, 0.01%)</title><rect x="425.2" y="533" width="0.1" height="15.0" fill="rgb(215,68,32)" rx="2" ry="2" />
<text  x="428.20" y="543.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Compare (18 samples, 0.02%)</title><rect x="966.2" y="501" width="0.2" height="15.0" fill="rgb(214,81,4)" rx="2" ry="2" />
<text  x="969.15" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::_S_destroy&lt;zero_after_free_allocator&lt;char&gt;, char&gt; (87 samples, 0.09%)</title><rect x="368.4" y="469" width="1.1" height="15.0" fill="rgb(232,186,30)" rx="2" ry="2" />
<text  x="371.42" y="479.5" ></text>
</g>
<g >
<title>CDataStream::read (10 samples, 0.01%)</title><rect x="363.1" y="437" width="0.1" height="15.0" fill="rgb(244,104,47)" rx="2" ry="2" />
<text  x="366.10" y="447.5" ></text>
</g>
<g >
<title>std::make_shared&lt;CTransaction const, deserialize_type const&amp;, CDataStream&amp;&gt; (7,635 samples, 8.29%)</title><rect x="427.0" y="597" width="97.8" height="15.0" fill="rgb(238,143,29)" rx="2" ry="2" />
<text  x="430.02" y="607.5" >std::make_s..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (8 samples, 0.01%)</title><rect x="680.4" y="565" width="0.1" height="15.0" fill="rgb(246,168,8)" rx="2" ry="2" />
<text  x="683.41" y="575.5" ></text>
</g>
<g >
<title>CDataStream::read (12 samples, 0.01%)</title><rect x="564.6" y="597" width="0.2" height="15.0" fill="rgb(212,44,40)" rx="2" ry="2" />
<text  x="567.64" y="607.5" ></text>
</g>
<g >
<title>CTxOut::SetNull (28 samples, 0.03%)</title><rect x="447.2" y="357" width="0.4" height="15.0" fill="rgb(219,104,52)" rx="2" ry="2" />
<text  x="450.22" y="367.5" ></text>
</g>
<g >
<title>CTransaction::CTransaction (901 samples, 0.98%)</title><rect x="1107.7" y="501" width="11.5" height="15.0" fill="rgb(234,18,54)" rx="2" ry="2" />
<text  x="1110.65" y="511.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.01%)</title><rect x="132.4" y="309" width="0.2" height="15.0" fill="rgb(206,86,45)" rx="2" ry="2" />
<text  x="135.41" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (44 samples, 0.05%)</title><rect x="469.8" y="261" width="0.6" height="15.0" fill="rgb(252,166,48)" rx="2" ry="2" />
<text  x="472.83" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::size (12 samples, 0.01%)</title><rect x="1042.5" y="533" width="0.1" height="15.0" fill="rgb(253,219,48)" rx="2" ry="2" />
<text  x="1045.47" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (20 samples, 0.02%)</title><rect x="951.5" y="501" width="0.3" height="15.0" fill="rgb(232,52,45)" rx="2" ry="2" />
<text  x="954.54" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (48 samples, 0.05%)</title><rect x="569.0" y="469" width="0.6" height="15.0" fill="rgb(219,93,20)" rx="2" ry="2" />
<text  x="571.97" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_key (8 samples, 0.01%)</title><rect x="1160.3" y="757" width="0.1" height="15.0" fill="rgb(242,217,0)" rx="2" ry="2" />
<text  x="1163.31" y="767.5" ></text>
</g>
<g >
<title>__dbc_iput (43 samples, 0.05%)</title><rect x="95.7" y="453" width="0.6" height="15.0" fill="rgb(227,196,42)" rx="2" ry="2" />
<text  x="98.70" y="463.5" ></text>
</g>
<g >
<title>std::multimap&lt;unsigned long, char*, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::emplace&lt;unsigned long&amp;, char*&amp;&gt; (187 samples, 0.20%)</title><rect x="1081.7" y="565" width="2.4" height="15.0" fill="rgb(214,39,31)" rx="2" ry="2" />
<text  x="1084.66" y="575.5" ></text>
</g>
<g >
<title>CSHA256::Write (169 samples, 0.18%)</title><rect x="162.5" y="181" width="2.2" height="15.0" fill="rgb(251,123,47)" rx="2" ry="2" />
<text  x="165.53" y="191.5" ></text>
</g>
<g >
<title>push_lock (787 samples, 0.85%)</title><rect x="839.7" y="597" width="10.1" height="15.0" fill="rgb(236,177,54)" rx="2" ry="2" />
<text  x="842.70" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (20 samples, 0.02%)</title><rect x="1084.8" y="533" width="0.3" height="15.0" fill="rgb(221,41,37)" rx="2" ry="2" />
<text  x="1087.81" y="543.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (10 samples, 0.01%)</title><rect x="80.9" y="453" width="0.1" height="15.0" fill="rgb(235,158,27)" rx="2" ry="2" />
<text  x="83.87" y="463.5" ></text>
</g>
<g >
<title>CTxIn::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (509 samples, 0.55%)</title><rect x="486.8" y="261" width="6.5" height="15.0" fill="rgb(206,121,21)" rx="2" ry="2" />
<text  x="489.83" y="271.5" ></text>
</g>
<g >
<title>__memp_fput (32 samples, 0.03%)</title><rect x="154.9" y="485" width="0.4" height="15.0" fill="rgb(242,134,50)" rx="2" ry="2" />
<text  x="157.86" y="495.5" ></text>
</g>
<g >
<title>CRIPEMD160::Write (1,370 samples, 1.49%)</title><rect x="738.5" y="549" width="17.5" height="15.0" fill="rgb(206,66,13)" rx="2" ry="2" />
<text  x="741.49" y="559.5" ></text>
</g>
<g >
<title>__subvdi3 (10 samples, 0.01%)</title><rect x="300.5" y="581" width="0.1" height="15.0" fill="rgb(254,49,40)" rx="2" ry="2" />
<text  x="303.47" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::lower_bound (33 samples, 0.04%)</title><rect x="567.1" y="501" width="0.4" height="15.0" fill="rgb(206,210,24)" rx="2" ry="2" />
<text  x="570.09" y="511.5" ></text>
</g>
<g >
<title>std::equal_to&lt;uint256&gt;::operator (23 samples, 0.02%)</title><rect x="966.1" y="533" width="0.3" height="15.0" fill="rgb(212,132,52)" rx="2" ry="2" />
<text  x="969.09" y="543.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CDiskBlockIndex&amp;&gt; (121 samples, 0.13%)</title><rect x="40.1" y="629" width="1.5" height="15.0" fill="rgb(232,61,2)" rx="2" ry="2" />
<text  x="43.08" y="639.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, CVarInt&lt; (49 samples, 0.05%)</title><rect x="40.1" y="581" width="0.7" height="15.0" fill="rgb(216,146,51)" rx="2" ry="2" />
<text  x="43.13" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (9 samples, 0.01%)</title><rect x="806.3" y="325" width="0.1" height="15.0" fill="rgb(249,103,13)" rx="2" ry="2" />
<text  x="809.31" y="335.5" ></text>
</g>
<g >
<title>std::map&lt;CKeyID, CKeyMetadata, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt;::operator[] (902 samples, 0.98%)</title><rect x="854.3" y="661" width="11.6" height="15.0" fill="rgb(252,180,21)" rx="2" ry="2" />
<text  x="857.31" y="671.5" ></text>
</g>
<g >
<title>Arena::alloc (23 samples, 0.02%)</title><rect x="12.5" y="757" width="0.3" height="15.0" fill="rgb(225,30,16)" rx="2" ry="2" />
<text  x="15.48" y="767.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (47 samples, 0.05%)</title><rect x="86.6" y="389" width="0.6" height="15.0" fill="rgb(212,192,38)" rx="2" ry="2" />
<text  x="89.57" y="399.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (1,535 samples, 1.67%)</title><rect x="456.6" y="389" width="19.7" height="15.0" fill="rgb(222,108,35)" rx="2" ry="2" />
<text  x="459.60" y="399.5" ></text>
</g>
<g >
<title>CTransaction::ComputeHash (271 samples, 0.29%)</title><rect x="1107.7" y="485" width="3.4" height="15.0" fill="rgb(213,21,41)" rx="2" ry="2" />
<text  x="1110.65" y="495.5" ></text>
</g>
<g >
<title>_mm_set_epi64x (8 samples, 0.01%)</title><rect x="1119.8" y="613" width="0.1" height="15.0" fill="rgb(219,62,47)" rx="2" ry="2" />
<text  x="1122.85" y="623.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (8 samples, 0.01%)</title><rect x="96.8" y="453" width="0.1" height="15.0" fill="rgb(244,51,2)" rx="2" ry="2" />
<text  x="99.79" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_S_do_relocate (10 samples, 0.01%)</title><rect x="590.1" y="581" width="0.1" height="15.0" fill="rgb(244,223,2)" rx="2" ry="2" />
<text  x="593.06" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_S_key (97 samples, 0.11%)</title><rect x="844.8" y="533" width="1.3" height="15.0" fill="rgb(206,149,25)" rx="2" ry="2" />
<text  x="847.81" y="543.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (8 samples, 0.01%)</title><rect x="133.6" y="453" width="0.1" height="15.0" fill="rgb(243,49,26)" rx="2" ry="2" />
<text  x="136.57" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::end (25 samples, 0.03%)</title><rect x="803.3" y="357" width="0.3" height="15.0" fill="rgb(229,118,28)" rx="2" ry="2" />
<text  x="806.28" y="367.5" ></text>
</g>
<g >
<title>__strlen_avx2 (8 samples, 0.01%)</title><rect x="680.4" y="549" width="0.1" height="15.0" fill="rgb(237,228,37)" rx="2" ry="2" />
<text  x="683.41" y="559.5" ></text>
</g>
<g >
<title>operator&lt; (331 samples, 0.36%)</title><rect x="861.4" y="581" width="4.3" height="15.0" fill="rgb(227,94,7)" rx="2" ry="2" />
<text  x="864.42" y="591.5" ></text>
</g>
<g >
<title>WriteCompactSize&lt;CHashWriter&gt; (38 samples, 0.04%)</title><rect x="493.4" y="293" width="0.5" height="15.0" fill="rgb(247,86,37)" rx="2" ry="2" />
<text  x="496.42" y="303.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (311 samples, 0.34%)</title><rect x="334.9" y="597" width="3.9" height="15.0" fill="rgb(225,27,45)" rx="2" ry="2" />
<text  x="337.86" y="607.5" ></text>
</g>
<g >
<title>__dbc_close (21 samples, 0.02%)</title><rect x="79.9" y="453" width="0.3" height="15.0" fill="rgb(247,196,34)" rx="2" ry="2" />
<text  x="82.92" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (26 samples, 0.03%)</title><rect x="944.4" y="533" width="0.3" height="15.0" fill="rgb(250,154,45)" rx="2" ry="2" />
<text  x="947.40" y="543.5" ></text>
</g>
<g >
<title>SerializeTransaction&lt;CHashWriter, CTransaction&gt; (169 samples, 0.18%)</title><rect x="162.5" y="469" width="2.2" height="15.0" fill="rgb(217,210,9)" rx="2" ry="2" />
<text  x="165.53" y="479.5" ></text>
</g>
<g >
<title>operator new (78 samples, 0.08%)</title><rect x="183.7" y="565" width="1.0" height="15.0" fill="rgb(234,117,41)" rx="2" ry="2" />
<text  x="186.71" y="575.5" ></text>
</g>
<g >
<title>std::pair&lt;uint256 const, CWalletTx&gt;::pair&lt;uint256&amp;, CWalletTx&amp;, true&gt; (389 samples, 0.42%)</title><rect x="969.8" y="565" width="5.0" height="15.0" fill="rgb(206,114,17)" rx="2" ry="2" />
<text  x="972.79" y="575.5" ></text>
</g>
<g >
<title>std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::pair&lt;char*, std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;&amp;, true&gt; (12 samples, 0.01%)</title><rect x="807.9" y="277" width="0.2" height="15.0" fill="rgb(210,48,24)" rx="2" ry="2" />
<text  x="810.93" y="287.5" ></text>
</g>
<g >
<title>std::less&lt;uint256&gt;::operator (29 samples, 0.03%)</title><rect x="870.8" y="597" width="0.4" height="15.0" fill="rgb(214,66,9)" rx="2" ry="2" />
<text  x="873.78" y="607.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (8 samples, 0.01%)</title><rect x="536.7" y="549" width="0.2" height="15.0" fill="rgb(215,139,20)" rx="2" ry="2" />
<text  x="539.75" y="559.5" ></text>
</g>
<g >
<title>std::pair&lt;CScriptID const, CScript&gt;::pair&lt;CScriptID const&amp;, 0ul&gt; (26 samples, 0.03%)</title><rect x="772.7" y="501" width="0.4" height="15.0" fill="rgb(206,197,27)" rx="2" ry="2" />
<text  x="775.75" y="511.5" ></text>
</g>
<g >
<title>std::__addressof&lt;unsigned char&gt; (24 samples, 0.03%)</title><rect x="817.5" y="437" width="0.3" height="15.0" fill="rgb(206,210,43)" rx="2" ry="2" />
<text  x="820.46" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::begin (9 samples, 0.01%)</title><rect x="499.3" y="293" width="0.1" height="15.0" fill="rgb(250,219,11)" rx="2" ry="2" />
<text  x="502.25" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_M_get_node (77 samples, 0.08%)</title><rect x="974.8" y="613" width="1.0" height="15.0" fill="rgb(211,38,3)" rx="2" ry="2" />
<text  x="977.85" y="623.5" ></text>
</g>
<g >
<title>__memp_bhfree (19 samples, 0.02%)</title><rect x="101.3" y="373" width="0.3" height="15.0" fill="rgb(230,39,46)" rx="2" ry="2" />
<text  x="104.31" y="383.5" ></text>
</g>
<g >
<title>std::less&lt;CScriptID&gt;::operator (11 samples, 0.01%)</title><rect x="687.7" y="629" width="0.2" height="15.0" fill="rgb(229,169,34)" rx="2" ry="2" />
<text  x="690.73" y="639.5" ></text>
</g>
<g >
<title>[unknown] (35 samples, 0.04%)</title><rect x="132.1" y="357" width="0.5" height="15.0" fill="rgb(218,85,3)" rx="2" ry="2" />
<text  x="135.11" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.01%)</title><rect x="1097.2" y="517" width="0.1" height="15.0" fill="rgb(220,215,7)" rx="2" ry="2" />
<text  x="1100.20" y="527.5" ></text>
</g>
<g >
<title>std::make_pair&lt;void* const&amp;, void*&amp;&gt; (20 samples, 0.02%)</title><rect x="789.4" y="565" width="0.2" height="15.0" fill="rgb(209,229,16)" rx="2" ry="2" />
<text  x="792.36" y="575.5" ></text>
</g>
<g >
<title>CLockLocation::~CLockLocation (9 samples, 0.01%)</title><rect x="680.5" y="597" width="0.2" height="15.0" fill="rgb(220,133,12)" rx="2" ry="2" />
<text  x="683.54" y="607.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, CScriptID const&amp;&gt;::_Tuple_impl (38 samples, 0.04%)</title><rect x="773.1" y="501" width="0.5" height="15.0" fill="rgb(239,46,26)" rx="2" ry="2" />
<text  x="776.15" y="511.5" ></text>
</g>
<g >
<title>CWalletTx::IsCoinBase (40 samples, 0.04%)</title><rect x="933.1" y="645" width="0.6" height="15.0" fill="rgb(244,147,15)" rx="2" ry="2" />
<text  x="936.14" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, CChainState*, std::default_delete&lt;CChainState&gt; &gt;::_M_head (11 samples, 0.01%)</title><rect x="959.8" y="549" width="0.1" height="15.0" fill="rgb(229,117,16)" rx="2" ry="2" />
<text  x="962.76" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (22 samples, 0.02%)</title><rect x="523.8" y="453" width="0.3" height="15.0" fill="rgb(243,28,20)" rx="2" ry="2" />
<text  x="526.81" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;::_M_valptr (9 samples, 0.01%)</title><rect x="1089.8" y="517" width="0.1" height="15.0" fill="rgb(240,64,29)" rx="2" ry="2" />
<text  x="1092.81" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_M_lower_bound (285 samples, 0.31%)</title><rect x="688.1" y="597" width="3.6" height="15.0" fill="rgb(232,226,24)" rx="2" ry="2" />
<text  x="691.08" y="607.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (9 samples, 0.01%)</title><rect x="944.8" y="533" width="0.1" height="15.0" fill="rgb(238,140,22)" rx="2" ry="2" />
<text  x="947.80" y="543.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (16 samples, 0.02%)</title><rect x="1094.5" y="581" width="0.2" height="15.0" fill="rgb(246,87,19)" rx="2" ry="2" />
<text  x="1097.54" y="591.5" ></text>
</g>
<g >
<title>ReadCompactSize&lt;CDataStream&gt; (11 samples, 0.01%)</title><rect x="378.5" y="549" width="0.2" height="15.0" fill="rgb(206,131,10)" rx="2" ry="2" />
<text  x="381.55" y="559.5" ></text>
</g>
<g >
<title>CScript::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (86 samples, 0.09%)</title><rect x="506.4" y="181" width="1.1" height="15.0" fill="rgb(217,11,25)" rx="2" ry="2" />
<text  x="509.42" y="191.5" ></text>
</g>
<g >
<title>__bam_cmp (23 samples, 0.02%)</title><rect x="69.4" y="469" width="0.3" height="15.0" fill="rgb(212,82,21)" rx="2" ry="2" />
<text  x="72.37" y="479.5" ></text>
</g>
<g >
<title>std::make_shared&lt;CTransaction const&gt; (394 samples, 0.43%)</title><rect x="1059.5" y="661" width="5.0" height="15.0" fill="rgb(206,70,14)" rx="2" ry="2" />
<text  x="1062.46" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::find (1,238 samples, 1.34%)</title><rect x="985.6" y="645" width="15.9" height="15.0" fill="rgb(228,121,5)" rx="2" ry="2" />
<text  x="988.61" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKeyMetadata&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt;::_M_construct_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;CKeyID const&amp;&gt;, std::tuple&lt;&gt; &gt; (127 samples, 0.14%)</title><rect x="854.6" y="613" width="1.6" height="15.0" fill="rgb(222,119,44)" rx="2" ry="2" />
<text  x="857.61" y="623.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (18 samples, 0.02%)</title><rect x="788.0" y="549" width="0.2" height="15.0" fill="rgb(252,149,51)" rx="2" ry="2" />
<text  x="791.01" y="559.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Compare (8 samples, 0.01%)</title><rect x="929.9" y="549" width="0.2" height="15.0" fill="rgb(226,176,0)" rx="2" ry="2" />
<text  x="932.95" y="559.5" ></text>
</g>
<g >
<title>WalletBatch::VerifyEnvironment (28 samples, 0.03%)</title><rect x="162.0" y="677" width="0.4" height="15.0" fill="rgb(225,168,29)" rx="2" ry="2" />
<text  x="165.00" y="687.5" ></text>
</g>
<g >
<title>boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt;::operator&lt; (8 samples, 0.01%)</title><rect x="1065.6" y="597" width="0.1" height="15.0" fill="rgb(236,44,43)" rx="2" ry="2" />
<text  x="1068.58" y="607.5" ></text>
</g>
<g >
<title>CTxIn::Unserialize&lt;CDataStream&gt; (558 samples, 0.61%)</title><rect x="435.1" y="341" width="7.1" height="15.0" fill="rgb(240,208,24)" rx="2" ry="2" />
<text  x="438.09" y="351.5" ></text>
</g>
<g >
<title>CSHA256::Write (14 samples, 0.02%)</title><rect x="482.6" y="373" width="0.2" height="15.0" fill="rgb(213,103,2)" rx="2" ry="2" />
<text  x="485.58" y="383.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::begin (13 samples, 0.01%)</title><rect x="763.1" y="437" width="0.2" height="15.0" fill="rgb(219,9,9)" rx="2" ry="2" />
<text  x="766.14" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, CScriptID const&amp;&gt;::_M_head (18 samples, 0.02%)</title><rect x="773.3" y="485" width="0.3" height="15.0" fill="rgb(210,97,39)" rx="2" ry="2" />
<text  x="776.32" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (70 samples, 0.08%)</title><rect x="1092.9" y="533" width="0.9" height="15.0" fill="rgb(210,163,31)" rx="2" ry="2" />
<text  x="1095.91" y="543.5" ></text>
</g>
<g >
<title>COutPoint::IsNull (36 samples, 0.04%)</title><rect x="34.4" y="613" width="0.4" height="15.0" fill="rgb(223,57,17)" rx="2" ry="2" />
<text  x="37.36" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_S_left (18 samples, 0.02%)</title><rect x="779.8" y="549" width="0.3" height="15.0" fill="rgb(224,114,51)" rx="2" ry="2" />
<text  x="782.84" y="559.5" ></text>
</g>
<g >
<title>ser_writedata32&lt;CHashWriter&gt; (24 samples, 0.03%)</title><rect x="507.8" y="197" width="0.3" height="15.0" fill="rgb(240,222,1)" rx="2" ry="2" />
<text  x="510.83" y="207.5" ></text>
</g>
<g >
<title>Serialize&lt;CSizeComputer&gt; (42 samples, 0.05%)</title><rect x="1030.7" y="565" width="0.5" height="15.0" fill="rgb(236,219,47)" rx="2" ry="2" />
<text  x="1033.69" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_allocate (18 samples, 0.02%)</title><rect x="1103.9" y="661" width="0.2" height="15.0" fill="rgb(253,205,28)" rx="2" ry="2" />
<text  x="1106.89" y="671.5" ></text>
</g>
<g >
<title>__db_vrfy_ovfl_structure (401 samples, 0.44%)</title><rect x="91.1" y="501" width="5.2" height="15.0" fill="rgb(238,217,54)" rx="2" ry="2" />
<text  x="94.12" y="511.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;CTransaction&gt; (1,344 samples, 1.46%)</title><rect x="482.9" y="405" width="17.2" height="15.0" fill="rgb(254,164,8)" rx="2" ry="2" />
<text  x="485.90" y="415.5" ></text>
</g>
<g >
<title>boost::aligned_storage&lt;48ul, 4ul&gt;::address (10 samples, 0.01%)</title><rect x="771.0" y="565" width="0.1" height="15.0" fill="rgb(227,173,7)" rx="2" ry="2" />
<text  x="773.98" y="575.5" ></text>
</g>
<g >
<title>CDataStream::read (23 samples, 0.02%)</title><rect x="37.0" y="581" width="0.3" height="15.0" fill="rgb(206,36,49)" rx="2" ry="2" />
<text  x="40.05" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;secure_allocator&lt;unsigned char&gt; &gt;::allocate (1,428 samples, 1.55%)</title><rect x="798.2" y="437" width="18.3" height="15.0" fill="rgb(234,190,30)" rx="2" ry="2" />
<text  x="801.23" y="447.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::clear (37 samples, 0.04%)</title><rect x="759.4" y="453" width="0.4" height="15.0" fill="rgb(215,218,20)" rx="2" ry="2" />
<text  x="762.37" y="463.5" ></text>
</g>
<g >
<title>__bam_search (151 samples, 0.16%)</title><rect x="106.8" y="421" width="2.0" height="15.0" fill="rgb(218,183,14)" rx="2" ry="2" />
<text  x="109.83" y="431.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.01%)</title><rect x="1063.3" y="533" width="0.1" height="15.0" fill="rgb(225,23,16)" rx="2" ry="2" />
<text  x="1066.28" y="543.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter&gt; (56 samples, 0.06%)</title><rect x="484.2" y="325" width="0.7" height="15.0" fill="rgb(229,173,40)" rx="2" ry="2" />
<text  x="487.19" y="335.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (10 samples, 0.01%)</title><rect x="1027.1" y="629" width="0.2" height="15.0" fill="rgb(233,91,10)" rx="2" ry="2" />
<text  x="1030.14" y="639.5" ></text>
</g>
<g >
<title>CTxOut::Unserialize&lt;CDataStream&gt; (261 samples, 0.28%)</title><rect x="448.4" y="341" width="3.4" height="15.0" fill="rgb(210,149,27)" rx="2" ry="2" />
<text  x="451.45" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::_Rb_tree_iterator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::_Rb_tree_iterator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, true&gt; (27 samples, 0.03%)</title><rect x="930.7" y="629" width="0.4" height="15.0" fill="rgb(232,36,13)" rx="2" ry="2" />
<text  x="933.70" y="639.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CSizeComputer, CScript&gt; (89 samples, 0.10%)</title><rect x="1039.8" y="485" width="1.2" height="15.0" fill="rgb(209,3,29)" rx="2" ry="2" />
<text  x="1042.84" y="495.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::insert (121 samples, 0.13%)</title><rect x="761.1" y="453" width="1.6" height="15.0" fill="rgb(232,205,31)" rx="2" ry="2" />
<text  x="764.15" y="463.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, CScript&gt; (279 samples, 0.30%)</title><rect x="1140.8" y="373" width="3.6" height="15.0" fill="rgb(237,101,32)" rx="2" ry="2" />
<text  x="1143.78" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;void*, void*&gt;::pair&lt;void*&amp;, true&gt; (9 samples, 0.01%)</title><rect x="789.5" y="549" width="0.1" height="15.0" fill="rgb(245,154,21)" rx="2" ry="2" />
<text  x="792.50" y="559.5" ></text>
</g>
<g >
<title>base_blob&lt;160u&gt;::Compare (10 samples, 0.01%)</title><rect x="1150.9" y="741" width="0.2" height="15.0" fill="rgb(248,216,31)" rx="2" ry="2" />
<text  x="1153.93" y="751.5" ></text>
</g>
<g >
<title>_int_free (19 samples, 0.02%)</title><rect x="55.2" y="549" width="0.3" height="15.0" fill="rgb(251,204,10)" rx="2" ry="2" />
<text  x="58.22" y="559.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.01%)</title><rect x="571.2" y="421" width="0.1" height="15.0" fill="rgb(214,40,29)" rx="2" ry="2" />
<text  x="574.19" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CBlockIndex*, CBlockIndex*, std::_Identity&lt;CBlockIndex*&gt;, CBlockIndexWorkComparator, std::allocator&lt;CBlockIndex*&gt; &gt;::find (21 samples, 0.02%)</title><rect x="50.8" y="661" width="0.2" height="15.0" fill="rgb(218,143,12)" rx="2" ry="2" />
<text  x="53.76" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (10 samples, 0.01%)</title><rect x="1091.2" y="485" width="0.1" height="15.0" fill="rgb(224,7,16)" rx="2" ry="2" />
<text  x="1094.16" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (11 samples, 0.01%)</title><rect x="1107.3" y="693" width="0.1" height="15.0" fill="rgb(221,73,26)" rx="2" ry="2" />
<text  x="1110.27" y="703.5" ></text>
</g>
<g >
<title>__dbc_iget (67 samples, 0.07%)</title><rect x="93.0" y="453" width="0.9" height="15.0" fill="rgb(254,170,25)" rx="2" ry="2" />
<text  x="96.00" y="463.5" ></text>
</g>
<g >
<title>LoadBlockIndexDB (1,016 samples, 1.10%)</title><rect x="36.2" y="709" width="13.0" height="15.0" fill="rgb(224,179,42)" rx="2" ry="2" />
<text  x="39.16" y="719.5" ></text>
</g>
<g >
<title>__dbc_cleanup (27 samples, 0.03%)</title><rect x="79.9" y="469" width="0.3" height="15.0" fill="rgb(212,12,30)" rx="2" ry="2" />
<text  x="82.89" y="479.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, 28u, unsigned char&gt; (162 samples, 0.18%)</title><rect x="376.8" y="581" width="2.1" height="15.0" fill="rgb(252,37,48)" rx="2" ry="2" />
<text  x="379.85" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::max_size (14 samples, 0.02%)</title><rect x="365.0" y="437" width="0.2" height="15.0" fill="rgb(247,222,42)" rx="2" ry="2" />
<text  x="368.04" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (62 samples, 0.07%)</title><rect x="614.1" y="485" width="0.8" height="15.0" fill="rgb(251,153,34)" rx="2" ry="2" />
<text  x="617.10" y="495.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;CTransaction const&gt;::~shared_ptr (8 samples, 0.01%)</title><rect x="1068.5" y="677" width="0.1" height="15.0" fill="rgb(225,43,2)" rx="2" ry="2" />
<text  x="1071.48" y="687.5" ></text>
</g>
<g >
<title>CHash256::Write (20 samples, 0.02%)</title><rect x="515.7" y="213" width="0.3" height="15.0" fill="rgb(236,192,15)" rx="2" ry="2" />
<text  x="518.73" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_S_value (171 samples, 0.19%)</title><rect x="895.0" y="581" width="2.2" height="15.0" fill="rgb(245,89,6)" rx="2" ry="2" />
<text  x="898.04" y="591.5" ></text>
</g>
<g >
<title>ser_writedata8&lt;CHashWriter&gt; (9 samples, 0.01%)</title><rect x="520.1" y="309" width="0.1" height="15.0" fill="rgb(237,153,1)" rx="2" ry="2" />
<text  x="523.07" y="319.5" ></text>
</g>
<g >
<title>[unknown] (21 samples, 0.02%)</title><rect x="1144.4" y="741" width="0.3" height="15.0" fill="rgb(236,203,26)" rx="2" ry="2" />
<text  x="1147.42" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;CTxIn const*, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt;::operator* (12 samples, 0.01%)</title><rect x="1042.9" y="661" width="0.1" height="15.0" fill="rgb(236,131,41)" rx="2" ry="2" />
<text  x="1045.89" y="671.5" ></text>
</g>
<g >
<title>KeyOriginInfo::SerializationOp&lt;CDataStream, CSerActionUnserialize&gt; (215 samples, 0.23%)</title><rect x="362.8" y="549" width="2.8" height="15.0" fill="rgb(232,121,6)" rx="2" ry="2" />
<text  x="365.82" y="559.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (9 samples, 0.01%)</title><rect x="116.4" y="485" width="0.1" height="15.0" fill="rgb(206,223,21)" rx="2" ry="2" />
<text  x="119.40" y="495.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (19 samples, 0.02%)</title><rect x="357.9" y="581" width="0.2" height="15.0" fill="rgb(226,14,34)" rx="2" ry="2" />
<text  x="360.85" y="591.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt; (760 samples, 0.82%)</title><rect x="484.9" y="341" width="9.7" height="15.0" fill="rgb(252,121,44)" rx="2" ry="2" />
<text  x="487.91" y="351.5" ></text>
</g>
<g >
<title>__dbc_iput (51 samples, 0.06%)</title><rect x="61.4" y="517" width="0.6" height="15.0" fill="rgb(207,122,34)" rx="2" ry="2" />
<text  x="64.35" y="527.5" ></text>
</g>
<g >
<title>std::mutex::unlock (10 samples, 0.01%)</title><rect x="619.7" y="549" width="0.1" height="15.0" fill="rgb(247,167,41)" rx="2" ry="2" />
<text  x="622.71" y="559.5" ></text>
</g>
<g >
<title>CDataStream::read (307 samples, 0.33%)</title><rect x="365.7" y="549" width="3.9" height="15.0" fill="rgb(247,192,48)" rx="2" ry="2" />
<text  x="368.70" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::operator[] (16 samples, 0.02%)</title><rect x="562.1" y="597" width="0.2" height="15.0" fill="rgb(248,215,50)" rx="2" ry="2" />
<text  x="565.05" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Vector_base (37 samples, 0.04%)</title><rect x="1025.4" y="645" width="0.5" height="15.0" fill="rgb(235,54,50)" rx="2" ry="2" />
<text  x="1028.44" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt;::construct&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, char*, std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;&amp;&gt; (34 samples, 0.04%)</title><rect x="807.6" y="293" width="0.5" height="15.0" fill="rgb(244,21,52)" rx="2" ry="2" />
<text  x="810.65" y="303.5" ></text>
</g>
<g >
<title>CScript::Serialize&lt;CHashWriter&gt; (279 samples, 0.30%)</title><rect x="1140.8" y="325" width="3.6" height="15.0" fill="rgb(250,58,16)" rx="2" ry="2" />
<text  x="1143.78" y="335.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (10 samples, 0.01%)</title><rect x="98.5" y="357" width="0.1" height="15.0" fill="rgb(233,72,52)" rx="2" ry="2" />
<text  x="101.48" y="367.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, KeyOriginInfo&amp;&gt; (230 samples, 0.25%)</title><rect x="362.7" y="613" width="2.9" height="15.0" fill="rgb(218,223,23)" rx="2" ry="2" />
<text  x="365.67" y="623.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, zero_after_free_allocator&lt;char&gt; &gt; (13 samples, 0.01%)</title><rect x="1168.3" y="757" width="0.2" height="15.0" fill="rgb(245,174,8)" rx="2" ry="2" />
<text  x="1171.33" y="767.5" ></text>
</g>
<g >
<title>_int_malloc (28 samples, 0.03%)</title><rect x="462.2" y="213" width="0.3" height="15.0" fill="rgb(226,83,18)" rx="2" ry="2" />
<text  x="465.19" y="223.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;1ul&gt;::_Base_bitset (11 samples, 0.01%)</title><rect x="1023.6" y="629" width="0.1" height="15.0" fill="rgb(253,143,28)" rx="2" ry="2" />
<text  x="1026.60" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::size (10 samples, 0.01%)</title><rect x="589.9" y="581" width="0.2" height="15.0" fill="rgb(242,138,43)" rx="2" ry="2" />
<text  x="592.93" y="591.5" ></text>
</g>
<g >
<title>std::multimap&lt;unsigned long, char*, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::end (39 samples, 0.04%)</title><rect x="803.1" y="373" width="0.5" height="15.0" fill="rgb(235,204,27)" rx="2" ry="2" />
<text  x="806.10" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (60 samples, 0.07%)</title><rect x="526.3" y="501" width="0.7" height="15.0" fill="rgb(248,178,18)" rx="2" ry="2" />
<text  x="529.26" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, CKeyID const&amp;&gt;::_Tuple_impl (17 samples, 0.02%)</title><rect x="855.9" y="549" width="0.2" height="15.0" fill="rgb(210,33,23)" rx="2" ry="2" />
<text  x="858.93" y="559.5" ></text>
</g>
<g >
<title>Serialize&lt;CSizeComputer, 28u, unsigned char&gt; (48 samples, 0.05%)</title><rect x="1040.2" y="373" width="0.7" height="15.0" fill="rgb(214,187,27)" rx="2" ry="2" />
<text  x="1043.24" y="383.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTxOut&gt; (169 samples, 0.18%)</title><rect x="162.5" y="405" width="2.2" height="15.0" fill="rgb(213,105,40)" rx="2" ry="2" />
<text  x="165.53" y="415.5" ></text>
</g>
<g >
<title>WriteBE32 (11 samples, 0.01%)</title><rect x="15.9" y="741" width="0.1" height="15.0" fill="rgb(214,89,42)" rx="2" ry="2" />
<text  x="18.90" y="751.5" ></text>
</g>
<g >
<title>__lock_put (12 samples, 0.01%)</title><rect x="139.6" y="469" width="0.2" height="15.0" fill="rgb(245,201,43)" rx="2" ry="2" />
<text  x="142.62" y="479.5" ></text>
</g>
<g >
<title>__GI_strtoll (16 samples, 0.02%)</title><rect x="533.2" y="597" width="0.2" height="15.0" fill="rgb(216,25,26)" rx="2" ry="2" />
<text  x="536.24" y="607.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (11 samples, 0.01%)</title><rect x="1063.3" y="517" width="0.1" height="15.0" fill="rgb(231,200,52)" rx="2" ry="2" />
<text  x="1066.30" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::_S_value (70 samples, 0.08%)</title><rect x="828.3" y="549" width="0.9" height="15.0" fill="rgb(225,215,51)" rx="2" ry="2" />
<text  x="831.32" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_S_key (271 samples, 0.29%)</title><rect x="894.2" y="597" width="3.4" height="15.0" fill="rgb(231,127,14)" rx="2" ry="2" />
<text  x="897.17" y="607.5" ></text>
</g>
<g >
<title>__dbc_close (33 samples, 0.04%)</title><rect x="65.2" y="533" width="0.5" height="15.0" fill="rgb(233,101,17)" rx="2" ry="2" />
<text  x="68.23" y="543.5" ></text>
</g>
<g >
<title>CHash160::Finalize (1,491 samples, 1.62%)</title><rect x="717.4" y="581" width="19.1" height="15.0" fill="rgb(252,23,33)" rx="2" ry="2" />
<text  x="720.44" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (8 samples, 0.01%)</title><rect x="45.5" y="533" width="0.1" height="15.0" fill="rgb(216,216,26)" rx="2" ry="2" />
<text  x="48.51" y="543.5" ></text>
</g>
<g >
<title>[unknown] (25 samples, 0.03%)</title><rect x="101.8" y="325" width="0.3" height="15.0" fill="rgb(213,45,30)" rx="2" ry="2" />
<text  x="104.80" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::_S_construct&lt;char, char const&amp;&gt; (27 samples, 0.03%)</title><rect x="36.5" y="565" width="0.4" height="15.0" fill="rgb(218,13,40)" rx="2" ry="2" />
<text  x="39.55" y="575.5" ></text>
</g>
<g >
<title>__db_lget (42 samples, 0.05%)</title><rect x="135.7" y="469" width="0.6" height="15.0" fill="rgb(242,25,4)" rx="2" ry="2" />
<text  x="138.74" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::__normal_iterator (15 samples, 0.02%)</title><rect x="1056.1" y="581" width="0.2" height="15.0" fill="rgb(221,51,45)" rx="2" ry="2" />
<text  x="1059.08" y="591.5" ></text>
</g>
<g >
<title>__libc_pread (45 samples, 0.05%)</title><rect x="132.0" y="421" width="0.6" height="15.0" fill="rgb(221,74,24)" rx="2" ry="2" />
<text  x="134.98" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::construct&lt;std::pair&lt;long const, CWalletTx*&gt;, std::pair&lt;long, CWalletTx*&gt; &gt; (36 samples, 0.04%)</title><rect x="1002.5" y="581" width="0.4" height="15.0" fill="rgb(208,133,50)" rx="2" ry="2" />
<text  x="1005.46" y="591.5" ></text>
</g>
<g >
<title>std::allocator&lt;CTransaction&gt;::allocator (9 samples, 0.01%)</title><rect x="1063.7" y="581" width="0.1" height="15.0" fill="rgb(233,89,41)" rx="2" ry="2" />
<text  x="1066.65" y="591.5" ></text>
</g>
<g >
<title>UniqueLock&lt;AnnotatedMixin&lt;std::recursive_mutex&gt;, std::unique_lock&lt;std::recursive_mutex&gt; &gt;::~UniqueLock (55 samples, 0.06%)</title><rect x="686.8" y="645" width="0.7" height="15.0" fill="rgb(248,131,2)" rx="2" ry="2" />
<text  x="689.75" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt;::construct&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;char* const&amp;&gt;, std::tuple&lt;&gt; &gt; (63 samples, 0.07%)</title><rect x="1087.5" y="501" width="0.8" height="15.0" fill="rgb(214,76,21)" rx="2" ry="2" />
<text  x="1090.48" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::deallocate (20 samples, 0.02%)</title><rect x="614.3" y="453" width="0.3" height="15.0" fill="rgb(213,165,20)" rx="2" ry="2" />
<text  x="617.34" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;CScriptID, CScript, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::operator[] (1,216 samples, 1.32%)</title><rect x="771.6" y="613" width="15.5" height="15.0" fill="rgb(242,220,5)" rx="2" ry="2" />
<text  x="774.57" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::vector (38 samples, 0.04%)</title><rect x="1062.1" y="517" width="0.5" height="15.0" fill="rgb(253,58,52)" rx="2" ry="2" />
<text  x="1065.07" y="527.5" ></text>
</g>
<g >
<title>__lock_get (25 samples, 0.03%)</title><rect x="144.0" y="469" width="0.3" height="15.0" fill="rgb(246,198,4)" rx="2" ry="2" />
<text  x="146.97" y="479.5" ></text>
</g>
<g >
<title>ser_writedata8&lt;CHashWriter&gt; (33 samples, 0.04%)</title><rect x="515.6" y="245" width="0.4" height="15.0" fill="rgb(236,46,27)" rx="2" ry="2" />
<text  x="518.57" y="255.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::BackgroundCompaction (32 samples, 0.03%)</title><rect x="1147.3" y="661" width="0.4" height="15.0" fill="rgb(214,9,39)" rx="2" ry="2" />
<text  x="1150.32" y="671.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (19 samples, 0.02%)</title><rect x="632.1" y="517" width="0.3" height="15.0" fill="rgb(211,196,6)" rx="2" ry="2" />
<text  x="635.12" y="527.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (21 samples, 0.02%)</title><rect x="439.9" y="149" width="0.3" height="15.0" fill="rgb(234,208,24)" rx="2" ry="2" />
<text  x="442.90" y="159.5" ></text>
</g>
<g >
<title>_mm_add_epi32 (28 samples, 0.03%)</title><rect x="1142.2" y="149" width="0.4" height="15.0" fill="rgb(219,103,1)" rx="2" ry="2" />
<text  x="1145.24" y="159.5" ></text>
</g>
<g >
<title>__mutex_alloc_int (24 samples, 0.03%)</title><rect x="89.3" y="373" width="0.3" height="15.0" fill="rgb(239,120,35)" rx="2" ry="2" />
<text  x="92.32" y="383.5" ></text>
</g>
<g >
<title>[unknown] (25 samples, 0.03%)</title><rect x="123.5" y="373" width="0.3" height="15.0" fill="rgb(241,209,27)" rx="2" ry="2" />
<text  x="126.50" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::_S_construct&lt;char, char const&amp;&gt; (4,903 samples, 5.32%)</title><rect x="219.9" y="581" width="62.8" height="15.0" fill="rgb(218,51,22)" rx="2" ry="2" />
<text  x="222.90" y="591.5" >std::a..</text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (142 samples, 0.15%)</title><rect x="808.8" y="357" width="1.8" height="15.0" fill="rgb(242,178,38)" rx="2" ry="2" />
<text  x="811.76" y="367.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, uint256&amp;&gt; (54 samples, 0.06%)</title><rect x="436.3" y="213" width="0.7" height="15.0" fill="rgb(244,133,38)" rx="2" ry="2" />
<text  x="439.31" y="223.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;CTransaction const&gt;&amp;&gt; (18 samples, 0.02%)</title><rect x="1024.6" y="661" width="0.2" height="15.0" fill="rgb(244,50,20)" rx="2" ry="2" />
<text  x="1027.58" y="671.5" ></text>
</g>
<g >
<title>[unknown] (18 samples, 0.02%)</title><rect x="328.4" y="501" width="0.3" height="15.0" fill="rgb(220,213,1)" rx="2" ry="2" />
<text  x="331.42" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::size (19 samples, 0.02%)</title><rect x="445.7" y="309" width="0.2" height="15.0" fill="rgb(214,4,41)" rx="2" ry="2" />
<text  x="448.68" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::__normal_iterator&lt;unsigned char*&gt; (17 samples, 0.02%)</title><rect x="1064.5" y="677" width="0.2" height="15.0" fill="rgb(216,22,54)" rx="2" ry="2" />
<text  x="1067.51" y="687.5" ></text>
</g>
<g >
<title>uint256::uint256 (23 samples, 0.02%)</title><rect x="30.2" y="565" width="0.3" height="15.0" fill="rgb(223,158,6)" rx="2" ry="2" />
<text  x="33.18" y="575.5" ></text>
</g>
<g >
<title>CTransaction::IsCoinBase (27 samples, 0.03%)</title><rect x="1029.1" y="661" width="0.3" height="15.0" fill="rgb(223,192,22)" rx="2" ry="2" />
<text  x="1032.06" y="671.5" ></text>
</g>
<g >
<title>__db_tas_mutex_readlock (20 samples, 0.02%)</title><rect x="118.8" y="469" width="0.2" height="15.0" fill="rgb(226,79,19)" rx="2" ry="2" />
<text  x="121.77" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_Vector_base (11 samples, 0.01%)</title><rect x="820.8" y="469" width="0.2" height="15.0" fill="rgb(229,183,6)" rx="2" ry="2" />
<text  x="823.85" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::_S_destroy&lt;zero_after_free_allocator&lt;char&gt;, char&gt; (351 samples, 0.38%)</title><rect x="603.4" y="549" width="4.5" height="15.0" fill="rgb(236,87,35)" rx="2" ry="2" />
<text  x="606.42" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;CChainState, std::default_delete&lt;CChainState&gt; &gt;::_M_ptr (53 samples, 0.06%)</title><rect x="959.2" y="597" width="0.7" height="15.0" fill="rgb(205,227,50)" rx="2" ry="2" />
<text  x="962.23" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::allocate (16 samples, 0.02%)</title><rect x="807.4" y="309" width="0.2" height="15.0" fill="rgb(233,148,42)" rx="2" ry="2" />
<text  x="810.38" y="319.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (12 samples, 0.01%)</title><rect x="67.8" y="453" width="0.1" height="15.0" fill="rgb(219,19,21)" rx="2" ry="2" />
<text  x="70.77" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;uint256, std::allocator&lt;uint256&gt; &gt;::resize (52 samples, 0.06%)</title><rect x="29.9" y="661" width="0.6" height="15.0" fill="rgb(210,213,44)" rx="2" ry="2" />
<text  x="32.86" y="671.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, 28u, unsigned char&gt; (183 samples, 0.20%)</title><rect x="164.7" y="245" width="2.3" height="15.0" fill="rgb(247,108,33)" rx="2" ry="2" />
<text  x="167.69" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Rb_tree_iterator (20 samples, 0.02%)</title><rect x="550.0" y="565" width="0.3" height="15.0" fill="rgb(238,134,50)" rx="2" ry="2" />
<text  x="553.00" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CBlockIndex*, std::pair&lt;CBlockIndex* const, CBlockIndex*&gt;, std::_Select1st&lt;std::pair&lt;CBlockIndex* const, CBlockIndex*&gt; &gt;, std::less&lt;CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;CBlockIndex* const, CBlockIndex*&gt; &gt; &gt;::_M_emplace_equal&lt;std::pair&lt;CBlockIndex*, CBlockIndex*&gt; &gt; (36 samples, 0.04%)</title><rect x="50.2" y="661" width="0.5" height="15.0" fill="rgb(211,18,13)" rx="2" ry="2" />
<text  x="53.24" y="671.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (10 samples, 0.01%)</title><rect x="363.1" y="453" width="0.1" height="15.0" fill="rgb(222,1,20)" rx="2" ry="2" />
<text  x="366.10" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;unsigned char const*, unsigned char*&gt; (35 samples, 0.04%)</title><rect x="1100.5" y="597" width="0.4" height="15.0" fill="rgb(222,64,22)" rx="2" ry="2" />
<text  x="1103.48" y="607.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.02%)</title><rect x="161.0" y="357" width="0.1" height="15.0" fill="rgb(236,224,5)" rx="2" ry="2" />
<text  x="163.95" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_S_right (14 samples, 0.02%)</title><rect x="780.1" y="549" width="0.2" height="15.0" fill="rgb(249,215,8)" rx="2" ry="2" />
<text  x="783.07" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (9 samples, 0.01%)</title><rect x="1032.5" y="485" width="0.1" height="15.0" fill="rgb(242,200,6)" rx="2" ry="2" />
<text  x="1035.53" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::~vector (1,012 samples, 1.10%)</title><rect x="626.7" y="661" width="12.9" height="15.0" fill="rgb(235,71,5)" rx="2" ry="2" />
<text  x="629.66" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_emplace_equal&lt;unsigned long&amp;, char*&amp;&gt; (172 samples, 0.19%)</title><rect x="1081.8" y="549" width="2.2" height="15.0" fill="rgb(219,201,22)" rx="2" ry="2" />
<text  x="1084.76" y="559.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.01%)</title><rect x="414.8" y="533" width="0.1" height="15.0" fill="rgb(224,135,22)" rx="2" ry="2" />
<text  x="417.75" y="543.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (421 samples, 0.46%)</title><rect x="97.0" y="453" width="5.4" height="15.0" fill="rgb(247,195,38)" rx="2" ry="2" />
<text  x="100.01" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_Vector_impl::~_Vector_impl (8 samples, 0.01%)</title><rect x="1163.6" y="741" width="0.1" height="15.0" fill="rgb(221,97,25)" rx="2" ry="2" />
<text  x="1166.59" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;char*&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (100 samples, 0.11%)</title><rect x="1088.5" y="533" width="1.3" height="15.0" fill="rgb(228,57,23)" rx="2" ry="2" />
<text  x="1091.49" y="543.5" ></text>
</g>
<g >
<title>std::make_pair&lt;long&amp;, CWalletTx*&gt; (41 samples, 0.04%)</title><rect x="967.7" y="661" width="0.5" height="15.0" fill="rgb(242,153,9)" rx="2" ry="2" />
<text  x="970.66" y="671.5" ></text>
</g>
<g >
<title>std::tuple&lt;CKeyID&amp;&amp;&gt;::tuple (34 samples, 0.04%)</title><rect x="821.1" y="533" width="0.5" height="15.0" fill="rgb(239,122,27)" rx="2" ry="2" />
<text  x="824.14" y="543.5" ></text>
</g>
<g >
<title>interfaces::(anonymous namespace)::WalletClientImpl::start (215 samples, 0.23%)</title><rect x="51.0" y="725" width="2.8" height="15.0" fill="rgb(241,148,6)" rx="2" ry="2" />
<text  x="54.05" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_S_value (12 samples, 0.01%)</title><rect x="847.8" y="533" width="0.1" height="15.0" fill="rgb(250,35,17)" rx="2" ry="2" />
<text  x="850.78" y="543.5" ></text>
</g>
<g >
<title>__gthread_recursive_mutex_lock (25 samples, 0.03%)</title><rect x="850.2" y="581" width="0.3" height="15.0" fill="rgb(233,109,40)" rx="2" ry="2" />
<text  x="853.22" y="591.5" ></text>
</g>
<g >
<title>CScript::Unserialize&lt;CDataStream&gt; (181 samples, 0.20%)</title><rect x="376.6" y="645" width="2.3" height="15.0" fill="rgb(250,70,34)" rx="2" ry="2" />
<text  x="379.63" y="655.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt; &gt;::allocate (57 samples, 0.06%)</title><rect x="975.1" y="597" width="0.7" height="15.0" fill="rgb(225,130,21)" rx="2" ry="2" />
<text  x="978.11" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;char*, unsigned long&amp;&gt; (153 samples, 0.17%)</title><rect x="569.7" y="485" width="2.0" height="15.0" fill="rgb(245,145,1)" rx="2" ry="2" />
<text  x="572.74" y="495.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char const*&gt; (18 samples, 0.02%)</title><rect x="295.6" y="597" width="0.3" height="15.0" fill="rgb(222,40,41)" rx="2" ry="2" />
<text  x="298.64" y="607.5" ></text>
</g>
<g >
<title>boost::detail::thread_data&lt;AppInitMain (28 samples, 0.03%)</title><rect x="1145.8" y="709" width="0.4" height="15.0" fill="rgb(230,28,7)" rx="2" ry="2" />
<text  x="1148.82" y="719.5" ></text>
</g>
<g >
<title>ShiftMessageA (9 samples, 0.01%)</title><rect x="1118.5" y="229" width="0.2" height="15.0" fill="rgb(215,49,31)" rx="2" ry="2" />
<text  x="1121.54" y="239.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CScript&amp;&gt; (261 samples, 0.28%)</title><rect x="438.3" y="277" width="3.4" height="15.0" fill="rgb(209,217,47)" rx="2" ry="2" />
<text  x="441.33" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (20 samples, 0.02%)</title><rect x="527.2" y="485" width="0.3" height="15.0" fill="rgb(242,211,29)" rx="2" ry="2" />
<text  x="530.22" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (25 samples, 0.03%)</title><rect x="638.2" y="485" width="0.3" height="15.0" fill="rgb(228,80,16)" rx="2" ry="2" />
<text  x="641.15" y="495.5" ></text>
</g>
<g >
<title>__memp_alloc (9 samples, 0.01%)</title><rect x="151.2" y="469" width="0.1" height="15.0" fill="rgb(252,55,27)" rx="2" ry="2" />
<text  x="154.18" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::end (11 samples, 0.01%)</title><rect x="1085.1" y="533" width="0.1" height="15.0" fill="rgb(231,152,15)" rx="2" ry="2" />
<text  x="1088.06" y="543.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned char*, unsigned char&gt; (12 samples, 0.01%)</title><rect x="1153.4" y="757" width="0.2" height="15.0" fill="rgb(226,49,42)" rx="2" ry="2" />
<text  x="1156.45" y="767.5" ></text>
</g>
<g >
<title>CSHA256::Finalize (127 samples, 0.14%)</title><rect x="1120.6" y="645" width="1.7" height="15.0" fill="rgb(242,65,22)" rx="2" ry="2" />
<text  x="1123.63" y="655.5" ></text>
</g>
<g >
<title>CRIPEMD160::Finalize (1,320 samples, 1.43%)</title><rect x="641.4" y="629" width="16.9" height="15.0" fill="rgb(223,26,39)" rx="2" ry="2" />
<text  x="644.42" y="639.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;uint256&amp;&gt; (28 samples, 0.03%)</title><rect x="531.0" y="629" width="0.4" height="15.0" fill="rgb(223,180,35)" rx="2" ry="2" />
<text  x="534.00" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (10 samples, 0.01%)</title><rect x="545.3" y="533" width="0.1" height="15.0" fill="rgb(228,158,20)" rx="2" ry="2" />
<text  x="548.25" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_erase_aux (57 samples, 0.06%)</title><rect x="931.4" y="597" width="0.7" height="15.0" fill="rgb(208,220,20)" rx="2" ry="2" />
<text  x="934.37" y="607.5" ></text>
</g>
<g >
<title>CPubKey::size (9 samples, 0.01%)</title><rect x="625.1" y="645" width="0.1" height="15.0" fill="rgb(244,43,53)" rx="2" ry="2" />
<text  x="628.09" y="655.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (27 samples, 0.03%)</title><rect x="88.1" y="373" width="0.4" height="15.0" fill="rgb(223,91,13)" rx="2" ry="2" />
<text  x="91.12" y="383.5" ></text>
</g>
<g >
<title>__bam_defcmp (13 samples, 0.01%)</title><rect x="64.5" y="549" width="0.2" height="15.0" fill="rgb(238,95,42)" rx="2" ry="2" />
<text  x="67.53" y="559.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (9 samples, 0.01%)</title><rect x="794.3" y="549" width="0.2" height="15.0" fill="rgb(228,112,22)" rx="2" ry="2" />
<text  x="797.34" y="559.5" ></text>
</g>
<g >
<title>__memp_fget (59 samples, 0.06%)</title><rect x="140.1" y="469" width="0.7" height="15.0" fill="rgb(238,181,9)" rx="2" ry="2" />
<text  x="143.09" y="479.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (8 samples, 0.01%)</title><rect x="155.5" y="485" width="0.1" height="15.0" fill="rgb(208,185,41)" rx="2" ry="2" />
<text  x="158.51" y="495.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (12 samples, 0.01%)</title><rect x="326.3" y="565" width="0.2" height="15.0" fill="rgb(228,32,9)" rx="2" ry="2" />
<text  x="329.31" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;::allocate (16 samples, 0.02%)</title><rect x="1082.9" y="501" width="0.3" height="15.0" fill="rgb(240,170,37)" rx="2" ry="2" />
<text  x="1085.95" y="511.5" ></text>
</g>
<g >
<title>__memp_fget (68 samples, 0.07%)</title><rect x="150.5" y="485" width="0.8" height="15.0" fill="rgb(215,109,54)" rx="2" ry="2" />
<text  x="153.46" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_deallocate (8 samples, 0.01%)</title><rect x="470.4" y="325" width="0.1" height="15.0" fill="rgb(228,174,17)" rx="2" ry="2" />
<text  x="473.42" y="335.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt;*&gt;::pointer_to (8 samples, 0.01%)</title><rect x="614.6" y="453" width="0.1" height="15.0" fill="rgb(229,207,0)" rx="2" ry="2" />
<text  x="617.60" y="463.5" ></text>
</g>
<g >
<title>CHashWriter::GetHash (97 samples, 0.11%)</title><rect x="500.9" y="405" width="1.3" height="15.0" fill="rgb(220,223,40)" rx="2" ry="2" />
<text  x="503.92" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;char* const, unsigned long&gt; &gt;::_M_v (9 samples, 0.01%)</title><rect x="1093.4" y="469" width="0.1" height="15.0" fill="rgb(211,182,22)" rx="2" ry="2" />
<text  x="1096.36" y="479.5" ></text>
</g>
<g >
<title>std::operator== (13 samples, 0.01%)</title><rect x="548.7" y="581" width="0.1" height="15.0" fill="rgb(213,203,33)" rx="2" ry="2" />
<text  x="551.66" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, CWalletTx*&gt;, std::_Select1st&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::_S_value (10 samples, 0.01%)</title><rect x="1015.7" y="597" width="0.1" height="15.0" fill="rgb(240,41,41)" rx="2" ry="2" />
<text  x="1018.70" y="607.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, unsigned char  (23 samples, 0.02%)</title><rect x="365.3" y="517" width="0.3" height="15.0" fill="rgb(253,199,49)" rx="2" ry="2" />
<text  x="368.28" y="527.5" ></text>
</g>
<g >
<title>__dbc_cleanup (8 samples, 0.01%)</title><rect x="151.7" y="533" width="0.1" height="15.0" fill="rgb(220,50,39)" rx="2" ry="2" />
<text  x="154.68" y="543.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (17 samples, 0.02%)</title><rect x="966.2" y="485" width="0.2" height="15.0" fill="rgb(217,37,31)" rx="2" ry="2" />
<text  x="969.17" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h2 (9 samples, 0.01%)</title><rect x="1092.7" y="501" width="0.1" height="15.0" fill="rgb(225,75,5)" rx="2" ry="2" />
<text  x="1095.72" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_allocate (147 samples, 0.16%)</title><rect x="182.8" y="613" width="1.9" height="15.0" fill="rgb(206,30,44)" rx="2" ry="2" />
<text  x="185.84" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (10 samples, 0.01%)</title><rect x="1086.3" y="517" width="0.1" height="15.0" fill="rgb(251,181,52)" rx="2" ry="2" />
<text  x="1089.28" y="527.5" ></text>
</g>
<g >
<title>__memp_fget (71 samples, 0.08%)</title><rect x="91.9" y="389" width="0.9" height="15.0" fill="rgb(238,90,43)" rx="2" ry="2" />
<text  x="94.87" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::allocate (11 samples, 0.01%)</title><rect x="635.3" y="501" width="0.1" height="15.0" fill="rgb(239,152,7)" rx="2" ry="2" />
<text  x="638.29" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;CTransaction&gt; &gt;::construct&lt;CTransaction const, deserialize_type const&amp;, CDataStream&amp;&gt; (901 samples, 0.98%)</title><rect x="1107.7" y="549" width="11.5" height="15.0" fill="rgb(212,114,17)" rx="2" ry="2" />
<text  x="1110.65" y="559.5" ></text>
</g>
<g >
<title>std::make_pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;char* const, unsigned long&gt;, false, false&gt;, bool&gt; (25 samples, 0.03%)</title><rect x="618.5" y="501" width="0.4" height="15.0" fill="rgb(236,122,37)" rx="2" ry="2" />
<text  x="621.54" y="511.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CPubKey&amp;&gt; (409 samples, 0.44%)</title><rect x="371.3" y="661" width="5.3" height="15.0" fill="rgb(227,91,35)" rx="2" ry="2" />
<text  x="374.33" y="671.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, bool&gt;::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, bool, true&gt; (14 samples, 0.02%)</title><rect x="985.0" y="629" width="0.1" height="15.0" fill="rgb(247,19,7)" rx="2" ry="2" />
<text  x="987.95" y="639.5" ></text>
</g>
<g >
<title>CHash256::Write (61 samples, 0.07%)</title><rect x="514.7" y="245" width="0.8" height="15.0" fill="rgb(233,170,51)" rx="2" ry="2" />
<text  x="517.67" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_M_lower_bound (200 samples, 0.22%)</title><rect x="790.6" y="533" width="2.6" height="15.0" fill="rgb(227,119,21)" rx="2" ry="2" />
<text  x="793.64" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::end (11 samples, 0.01%)</title><rect x="543.2" y="597" width="0.2" height="15.0" fill="rgb(229,35,20)" rx="2" ry="2" />
<text  x="546.22" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (99 samples, 0.11%)</title><rect x="842.1" y="533" width="1.3" height="15.0" fill="rgb(239,229,8)" rx="2" ry="2" />
<text  x="845.10" y="543.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream&gt; (58 samples, 0.06%)</title><rect x="451.0" y="277" width="0.7" height="15.0" fill="rgb(209,197,30)" rx="2" ry="2" />
<text  x="453.96" y="287.5" ></text>
</g>
<g >
<title>__db_lget (10 samples, 0.01%)</title><rect x="91.7" y="389" width="0.2" height="15.0" fill="rgb(217,98,34)" rx="2" ry="2" />
<text  x="94.74" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (27 samples, 0.03%)</title><rect x="787.6" y="565" width="0.4" height="15.0" fill="rgb(237,24,48)" rx="2" ry="2" />
<text  x="790.63" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;char* const, unsigned long&gt; &gt;::_M_valptr (10 samples, 0.01%)</title><rect x="1091.0" y="469" width="0.1" height="15.0" fill="rgb(205,48,22)" rx="2" ry="2" />
<text  x="1093.99" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::operator (11 samples, 0.01%)</title><rect x="934.3" y="645" width="0.1" height="15.0" fill="rgb(242,51,27)" rx="2" ry="2" />
<text  x="937.27" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_Rb_tree_iterator (9 samples, 0.01%)</title><rect x="990.7" y="613" width="0.1" height="15.0" fill="rgb(218,137,52)" rx="2" ry="2" />
<text  x="993.72" y="623.5" ></text>
</g>
<g >
<title>CHash256::Write (19 samples, 0.02%)</title><rect x="491.8" y="53" width="0.2" height="15.0" fill="rgb(230,140,36)" rx="2" ry="2" />
<text  x="494.78" y="63.5" ></text>
</g>
<g >
<title>CHash256::Write (11 samples, 0.01%)</title><rect x="498.3" y="165" width="0.2" height="15.0" fill="rgb(227,67,33)" rx="2" ry="2" />
<text  x="501.34" y="175.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream&gt; (308 samples, 0.33%)</title><rect x="365.7" y="581" width="3.9" height="15.0" fill="rgb(223,97,45)" rx="2" ry="2" />
<text  x="368.69" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (38 samples, 0.04%)</title><rect x="1090.8" y="517" width="0.5" height="15.0" fill="rgb(252,216,10)" rx="2" ry="2" />
<text  x="1093.84" y="527.5" ></text>
</g>
<g >
<title>__os_malloc (22 samples, 0.02%)</title><rect x="73.2" y="453" width="0.3" height="15.0" fill="rgb(222,60,26)" rx="2" ry="2" />
<text  x="76.21" y="463.5" ></text>
</g>
<g >
<title>std::swap&lt;prevector&lt;28u, unsigned char, unsigned int, int&gt;::direct_or_indirect&gt; (26 samples, 0.03%)</title><rect x="737.4" y="565" width="0.3" height="15.0" fill="rgb(222,71,36)" rx="2" ry="2" />
<text  x="740.35" y="575.5" ></text>
</g>
<g >
<title>GetBlockProof (116 samples, 0.13%)</title><rect x="45.9" y="677" width="1.5" height="15.0" fill="rgb(229,72,23)" rx="2" ry="2" />
<text  x="48.92" y="687.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (11 samples, 0.01%)</title><rect x="133.7" y="453" width="0.1" height="15.0" fill="rgb(240,50,53)" rx="2" ry="2" />
<text  x="136.70" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (24 samples, 0.03%)</title><rect x="1106.6" y="693" width="0.3" height="15.0" fill="rgb(236,204,40)" rx="2" ry="2" />
<text  x="1109.63" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_value (30 samples, 0.03%)</title><rect x="425.4" y="549" width="0.4" height="15.0" fill="rgb(219,93,24)" rx="2" ry="2" />
<text  x="428.41" y="559.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter&gt; (26 samples, 0.03%)</title><rect x="505.7" y="133" width="0.3" height="15.0" fill="rgb(214,65,52)" rx="2" ry="2" />
<text  x="508.65" y="143.5" ></text>
</g>
<g >
<title>ShiftMessageC (9 samples, 0.01%)</title><rect x="166.8" y="133" width="0.1" height="15.0" fill="rgb(210,10,19)" rx="2" ry="2" />
<text  x="169.75" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKeyMetadata&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt;::_S_value (62 samples, 0.07%)</title><rect x="860.0" y="581" width="0.8" height="15.0" fill="rgb(224,46,25)" rx="2" ry="2" />
<text  x="863.04" y="591.5" ></text>
</g>
<g >
<title>std::mutex::unlock (9 samples, 0.01%)</title><rect x="681.5" y="565" width="0.1" height="15.0" fill="rgb(221,52,28)" rx="2" ry="2" />
<text  x="684.48" y="575.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (62 samples, 0.07%)</title><rect x="54.4" y="549" width="0.8" height="15.0" fill="rgb(230,146,18)" rx="2" ry="2" />
<text  x="57.43" y="559.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (8 samples, 0.01%)</title><rect x="115.7" y="485" width="0.1" height="15.0" fill="rgb(216,105,12)" rx="2" ry="2" />
<text  x="118.71" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, CWalletTx*&gt;, std::_Select1st&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::_M_get_node (76 samples, 0.08%)</title><rect x="1003.0" y="613" width="1.0" height="15.0" fill="rgb(208,185,27)" rx="2" ry="2" />
<text  x="1005.99" y="623.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (19 samples, 0.02%)</title><rect x="850.3" y="565" width="0.2" height="15.0" fill="rgb(249,137,5)" rx="2" ry="2" />
<text  x="853.29" y="575.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (45 samples, 0.05%)</title><rect x="62.1" y="485" width="0.6" height="15.0" fill="rgb(247,82,32)" rx="2" ry="2" />
<text  x="65.08" y="495.5" ></text>
</g>
<g >
<title>std::forward&lt;COutPoint&gt; (20 samples, 0.02%)</title><rect x="904.9" y="517" width="0.3" height="15.0" fill="rgb(207,156,40)" rx="2" ry="2" />
<text  x="907.90" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (46 samples, 0.05%)</title><rect x="809.9" y="325" width="0.6" height="15.0" fill="rgb(209,159,17)" rx="2" ry="2" />
<text  x="812.94" y="335.5" ></text>
</g>
<g >
<title>std::forward&lt;std::_Rb_tree_iterator&lt;COutPoint&gt; &gt; (11 samples, 0.01%)</title><rect x="932.7" y="565" width="0.1" height="15.0" fill="rgb(209,143,29)" rx="2" ry="2" />
<text  x="935.68" y="575.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (15 samples, 0.02%)</title><rect x="1162.1" y="741" width="0.2" height="15.0" fill="rgb(211,32,39)" rx="2" ry="2" />
<text  x="1165.11" y="751.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream&gt; (2,198 samples, 2.39%)</title><rect x="380.2" y="613" width="28.1" height="15.0" fill="rgb(227,8,21)" rx="2" ry="2" />
<text  x="383.20" y="623.5" >U..</text>
</g>
<g >
<title>std::unique_lock&lt;std::recursive_mutex&gt;::~unique_lock (22 samples, 0.02%)</title><rect x="851.1" y="629" width="0.2" height="15.0" fill="rgb(211,65,43)" rx="2" ry="2" />
<text  x="854.06" y="639.5" ></text>
</g>
<g >
<title>__memp_pgread (34 samples, 0.04%)</title><rect x="123.4" y="485" width="0.5" height="15.0" fill="rgb(243,1,23)" rx="2" ry="2" />
<text  x="126.42" y="495.5" ></text>
</g>
<g >
<title>__gthread_recursive_mutex_unlock (13 samples, 0.01%)</title><rect x="851.2" y="581" width="0.1" height="15.0" fill="rgb(215,48,49)" rx="2" ry="2" />
<text  x="854.18" y="591.5" ></text>
</g>
<g >
<title>__db_fchk (32 samples, 0.03%)</title><rect x="305.4" y="613" width="0.4" height="15.0" fill="rgb(238,130,54)" rx="2" ry="2" />
<text  x="308.37" y="623.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;uint256*, unsigned long, uint256&gt; (54 samples, 0.06%)</title><rect x="30.7" y="629" width="0.7" height="15.0" fill="rgb(216,201,5)" rx="2" ry="2" />
<text  x="33.71" y="639.5" ></text>
</g>
<g >
<title>__lock_put (13 samples, 0.01%)</title><rect x="65.3" y="485" width="0.1" height="15.0" fill="rgb(240,174,6)" rx="2" ry="2" />
<text  x="68.27" y="495.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::shrink_to_fit (12 samples, 0.01%)</title><rect x="454.5" y="213" width="0.1" height="15.0" fill="rgb(228,44,29)" rx="2" ry="2" />
<text  x="457.47" y="223.5" ></text>
</g>
<g >
<title>uint256::uint256 (9 samples, 0.01%)</title><rect x="530.9" y="597" width="0.1" height="15.0" fill="rgb(229,46,10)" rx="2" ry="2" />
<text  x="533.88" y="607.5" ></text>
</g>
<g >
<title>BerkeleyBatch::SafeDbt::get_size (41 samples, 0.04%)</title><rect x="171.0" y="677" width="0.6" height="15.0" fill="rgb(250,18,42)" rx="2" ry="2" />
<text  x="174.03" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_S_nothrow_relocate (10 samples, 0.01%)</title><rect x="473.5" y="309" width="0.2" height="15.0" fill="rgb(246,84,48)" rx="2" ry="2" />
<text  x="476.55" y="319.5" ></text>
</g>
<g >
<title>ReadLE32 (48 samples, 0.05%)</title><rect x="755.3" y="533" width="0.6" height="15.0" fill="rgb(227,79,47)" rx="2" ry="2" />
<text  x="758.33" y="543.5" ></text>
</g>
<g >
<title>std::less&lt;COutPoint&gt;::operator (1,323 samples, 1.44%)</title><rect x="910.3" y="581" width="16.9" height="15.0" fill="rgb(214,146,11)" rx="2" ry="2" />
<text  x="913.25" y="591.5" ></text>
</g>
<g >
<title>CWallet::LoadWallet (73,447 samples, 79.71%)</title><rect x="167.0" y="725" width="940.6" height="15.0" fill="rgb(219,114,40)" rx="2" ry="2" />
<text  x="170.03" y="735.5" >CWallet::LoadWallet</text>
</g>
<g >
<title>__db_tas_mutex_readlock (8 samples, 0.01%)</title><rect x="150.9" y="469" width="0.1" height="15.0" fill="rgb(232,213,13)" rx="2" ry="2" />
<text  x="153.92" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, interfaces::(anonymous namespace)::LockImpl*, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt; (15 samples, 0.02%)</title><rect x="955.3" y="565" width="0.2" height="15.0" fill="rgb(227,196,46)" rx="2" ry="2" />
<text  x="958.34" y="575.5" ></text>
</g>
<g >
<title>__db_cursor_int (38 samples, 0.04%)</title><rect x="80.7" y="469" width="0.5" height="15.0" fill="rgb(207,11,39)" rx="2" ry="2" />
<text  x="83.67" y="479.5" ></text>
</g>
<g >
<title>__env_open (27 samples, 0.03%)</title><rect x="162.0" y="613" width="0.3" height="15.0" fill="rgb(249,36,18)" rx="2" ry="2" />
<text  x="165.00" y="623.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (11 samples, 0.01%)</title><rect x="151.4" y="469" width="0.2" height="15.0" fill="rgb(212,130,52)" rx="2" ry="2" />
<text  x="154.44" y="479.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (8 samples, 0.01%)</title><rect x="80.3" y="437" width="0.1" height="15.0" fill="rgb(220,50,51)" rx="2" ry="2" />
<text  x="83.33" y="447.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, CTxIn, std::allocator&lt;CTxIn&gt;, CTxIn&gt; (271 samples, 0.29%)</title><rect x="1137.3" y="437" width="3.5" height="15.0" fill="rgb(229,59,48)" rx="2" ry="2" />
<text  x="1140.31" y="447.5" ></text>
</g>
<g >
<title>MakeUnique&lt;interfaces::(anonymous namespace)::LockImpl, AnnotatedMixin&lt;std::recursive_mutex&gt;&amp;, char const  (9 samples, 0.01%)</title><rect x="21.1" y="757" width="0.1" height="15.0" fill="rgb(220,69,4)" rx="2" ry="2" />
<text  x="24.08" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (105 samples, 0.11%)</title><rect x="37.5" y="613" width="1.4" height="15.0" fill="rgb(239,167,35)" rx="2" ry="2" />
<text  x="40.53" y="623.5" ></text>
</g>
<g >
<title>Hash160&lt;prevector&lt;28u, unsigned char, unsigned int, int&gt;::const_iterator&gt; (127 samples, 0.14%)</title><rect x="1120.6" y="677" width="1.7" height="15.0" fill="rgb(214,38,33)" rx="2" ry="2" />
<text  x="1123.63" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (33 samples, 0.04%)</title><rect x="474.9" y="373" width="0.4" height="15.0" fill="rgb(233,27,12)" rx="2" ry="2" />
<text  x="477.85" y="383.5" ></text>
</g>
<g >
<title>Serialize&lt;CSizeComputer, CScript&gt; (68 samples, 0.07%)</title><rect x="1040.0" y="453" width="0.9" height="15.0" fill="rgb(246,56,45)" rx="2" ry="2" />
<text  x="1043.01" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_Alloc_node::_Alloc_node (9 samples, 0.01%)</title><rect x="1044.3" y="629" width="0.1" height="15.0" fill="rgb(252,97,38)" rx="2" ry="2" />
<text  x="1047.26" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (24 samples, 0.03%)</title><rect x="570.1" y="437" width="0.3" height="15.0" fill="rgb(224,212,14)" rx="2" ry="2" />
<text  x="573.07" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::size (8 samples, 0.01%)</title><rect x="40.6" y="469" width="0.1" height="15.0" fill="rgb(233,196,50)" rx="2" ry="2" />
<text  x="43.59" y="479.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;int&gt; (79 samples, 0.09%)</title><rect x="483.9" y="341" width="1.0" height="15.0" fill="rgb(250,223,46)" rx="2" ry="2" />
<text  x="486.90" y="351.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (30 samples, 0.03%)</title><rect x="81.7" y="405" width="0.4" height="15.0" fill="rgb(244,58,26)" rx="2" ry="2" />
<text  x="84.73" y="415.5" ></text>
</g>
<g >
<title>__lock_get_internal (15 samples, 0.02%)</title><rect x="138.8" y="437" width="0.2" height="15.0" fill="rgb(250,102,8)" rx="2" ry="2" />
<text  x="141.80" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (18 samples, 0.02%)</title><rect x="1084.6" y="533" width="0.2" height="15.0" fill="rgb(253,79,15)" rx="2" ry="2" />
<text  x="1087.58" y="543.5" ></text>
</g>
<g >
<title>__strlen_avx2 (19 samples, 0.02%)</title><rect x="534.6" y="581" width="0.2" height="15.0" fill="rgb(249,122,24)" rx="2" ry="2" />
<text  x="537.56" y="591.5" ></text>
</g>
<g >
<title>__memp_fget (869 samples, 0.94%)</title><rect x="317.5" y="597" width="11.2" height="15.0" fill="rgb(240,5,14)" rx="2" ry="2" />
<text  x="320.54" y="607.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (15 samples, 0.02%)</title><rect x="154.7" y="469" width="0.2" height="15.0" fill="rgb(231,42,39)" rx="2" ry="2" />
<text  x="157.66" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::deallocate (10 samples, 0.01%)</title><rect x="568.6" y="421" width="0.1" height="15.0" fill="rgb(213,32,21)" rx="2" ry="2" />
<text  x="571.60" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (43 samples, 0.05%)</title><rect x="542.6" y="597" width="0.5" height="15.0" fill="rgb(238,58,29)" rx="2" ry="2" />
<text  x="545.59" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;char*&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (65 samples, 0.07%)</title><rect x="1088.8" y="517" width="0.9" height="15.0" fill="rgb(240,184,45)" rx="2" ry="2" />
<text  x="1091.83" y="527.5" ></text>
</g>
<g >
<title>FillableSigningProvider::AddCScript (127 samples, 0.14%)</title><rect x="1120.6" y="709" width="1.7" height="15.0" fill="rgb(236,74,43)" rx="2" ry="2" />
<text  x="1123.63" y="719.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;CDiskBlockIndex&amp;&gt; (122 samples, 0.13%)</title><rect x="40.1" y="645" width="1.5" height="15.0" fill="rgb(212,223,23)" rx="2" ry="2" />
<text  x="43.07" y="655.5" ></text>
</g>
<g >
<title>ReadCompactSize&lt;CDataStream&gt; (17 samples, 0.02%)</title><rect x="409.0" y="597" width="0.2" height="15.0" fill="rgb(234,166,43)" rx="2" ry="2" />
<text  x="412.00" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;::_Rb_tree_const_iterator (12 samples, 0.01%)</title><rect x="790.3" y="533" width="0.2" height="15.0" fill="rgb(248,104,1)" rx="2" ry="2" />
<text  x="793.31" y="543.5" ></text>
</g>
<g >
<title>CScript::clear (9 samples, 0.01%)</title><rect x="509.7" y="277" width="0.1" height="15.0" fill="rgb(242,117,45)" rx="2" ry="2" />
<text  x="512.66" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (146 samples, 0.16%)</title><rect x="613.1" y="501" width="1.9" height="15.0" fill="rgb(239,132,4)" rx="2" ry="2" />
<text  x="616.11" y="511.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CBlockHeader&gt; (32 samples, 0.03%)</title><rect x="43.3" y="597" width="0.4" height="15.0" fill="rgb(232,135,34)" rx="2" ry="2" />
<text  x="46.27" y="607.5" ></text>
</g>
<g >
<title>std::tuple&lt;char*&amp;&amp;&gt;::tuple (8 samples, 0.01%)</title><rect x="635.8" y="469" width="0.1" height="15.0" fill="rgb(252,2,0)" rx="2" ry="2" />
<text  x="638.83" y="479.5" ></text>
</g>
<g >
<title>std::tuple&lt;CKeyID&amp;&amp;&gt;::tuple&lt;CKeyID, true&gt; (24 samples, 0.03%)</title><rect x="826.1" y="597" width="0.3" height="15.0" fill="rgb(207,217,40)" rx="2" ry="2" />
<text  x="829.06" y="607.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, uint256&gt; (25 samples, 0.03%)</title><rect x="505.2" y="149" width="0.3" height="15.0" fill="rgb(226,106,17)" rx="2" ry="2" />
<text  x="508.22" y="159.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::recursive_mutex&gt;::unique_lock (17 samples, 0.02%)</title><rect x="951.9" y="581" width="0.2" height="15.0" fill="rgb(210,198,10)" rx="2" ry="2" />
<text  x="954.91" y="591.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;&gt; (10 samples, 0.01%)</title><rect x="425.9" y="581" width="0.2" height="15.0" fill="rgb(236,73,0)" rx="2" ry="2" />
<text  x="428.95" y="591.5" ></text>
</g>
<g >
<title>CKeyMetadata::SerializationOp&lt;CDataStream, CSerActionUnserialize&gt; (697 samples, 0.76%)</title><rect x="362.2" y="629" width="8.9" height="15.0" fill="rgb(239,121,25)" rx="2" ry="2" />
<text  x="365.21" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;::_Rb_tree_iterator (8 samples, 0.01%)</title><rect x="826.6" y="581" width="0.1" height="15.0" fill="rgb(212,155,19)" rx="2" ry="2" />
<text  x="829.60" y="591.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;CTransaction const&gt;::operator= (280 samples, 0.30%)</title><rect x="524.8" y="597" width="3.6" height="15.0" fill="rgb(224,123,10)" rx="2" ry="2" />
<text  x="527.80" y="607.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Compare (15 samples, 0.02%)</title><rect x="1064.9" y="661" width="0.2" height="15.0" fill="rgb(210,194,10)" rx="2" ry="2" />
<text  x="1067.91" y="671.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (9 samples, 0.01%)</title><rect x="98.9" y="357" width="0.1" height="15.0" fill="rgb(211,175,18)" rx="2" ry="2" />
<text  x="101.88" y="367.5" ></text>
</g>
<g >
<title>operator== (14 samples, 0.02%)</title><rect x="35.0" y="645" width="0.2" height="15.0" fill="rgb(220,54,45)" rx="2" ry="2" />
<text  x="38.02" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_key (8 samples, 0.01%)</title><rect x="941.0" y="613" width="0.1" height="15.0" fill="rgb(235,147,36)" rx="2" ry="2" />
<text  x="944.01" y="623.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTxOut&gt; (188 samples, 0.20%)</title><rect x="510.1" y="293" width="2.4" height="15.0" fill="rgb(217,145,41)" rx="2" ry="2" />
<text  x="513.11" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;unsigned char*, unsigned long, unsigned char&gt; (115 samples, 0.12%)</title><rect x="463.0" y="293" width="1.4" height="15.0" fill="rgb(239,229,32)" rx="2" ry="2" />
<text  x="465.96" y="303.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.01%)</title><rect x="131.6" y="325" width="0.2" height="15.0" fill="rgb(206,76,4)" rx="2" ry="2" />
<text  x="134.59" y="335.5" ></text>
</g>
<g >
<title>__memp_fget (45 samples, 0.05%)</title><rect x="107.9" y="405" width="0.6" height="15.0" fill="rgb(237,8,26)" rx="2" ry="2" />
<text  x="110.89" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, unsigned long, true&gt;::_S_equals (9 samples, 0.01%)</title><rect x="45.2" y="517" width="0.1" height="15.0" fill="rgb(239,160,23)" rx="2" ry="2" />
<text  x="48.18" y="527.5" ></text>
</g>
<g >
<title>std::mutex::lock (12 samples, 0.01%)</title><rect x="1094.4" y="565" width="0.1" height="15.0" fill="rgb(230,140,5)" rx="2" ry="2" />
<text  x="1097.39" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt;::operator+ (15 samples, 0.02%)</title><rect x="694.0" y="549" width="0.2" height="15.0" fill="rgb(241,127,44)" rx="2" ry="2" />
<text  x="696.96" y="559.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; (361 samples, 0.39%)</title><rect x="1114.6" y="389" width="4.6" height="15.0" fill="rgb(213,223,1)" rx="2" ry="2" />
<text  x="1117.57" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::data (9 samples, 0.01%)</title><rect x="626.3" y="661" width="0.2" height="15.0" fill="rgb(235,12,26)" rx="2" ry="2" />
<text  x="629.34" y="671.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;false&gt;::__uninit_default_n&lt;CTxIn*, unsigned long&gt; (70 samples, 0.08%)</title><rect x="443.9" y="293" width="0.9" height="15.0" fill="rgb(219,183,18)" rx="2" ry="2" />
<text  x="446.94" y="303.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (8 samples, 0.01%)</title><rect x="24.9" y="757" width="0.1" height="15.0" fill="rgb(221,87,43)" rx="2" ry="2" />
<text  x="27.86" y="767.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 0.04%)</title><rect x="122.7" y="373" width="0.5" height="15.0" fill="rgb(254,92,11)" rx="2" ry="2" />
<text  x="125.74" y="383.5" ></text>
</g>
<g >
<title>__db_tas_mutex_trylock (9 samples, 0.01%)</title><rect x="88.0" y="373" width="0.1" height="15.0" fill="rgb(218,7,32)" rx="2" ry="2" />
<text  x="91.00" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::clear (330 samples, 0.36%)</title><rect x="371.8" y="613" width="4.3" height="15.0" fill="rgb(224,49,32)" rx="2" ry="2" />
<text  x="374.82" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;CChainState, std::default_delete&lt;CChainState&gt; &gt;::operator bool (10 samples, 0.01%)</title><rect x="53.4" y="597" width="0.2" height="15.0" fill="rgb(240,8,44)" rx="2" ry="2" />
<text  x="56.44" y="607.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (22 samples, 0.02%)</title><rect x="40.4" y="501" width="0.3" height="15.0" fill="rgb(252,209,28)" rx="2" ry="2" />
<text  x="43.42" y="511.5" ></text>
</g>
<g >
<title>CHashWriter::write (10 samples, 0.01%)</title><rect x="500.0" y="293" width="0.1" height="15.0" fill="rgb(225,21,26)" rx="2" ry="2" />
<text  x="502.97" y="303.5" ></text>
</g>
<g >
<title>UniqueLock&lt;AnnotatedMixin&lt;std::recursive_mutex&gt;, std::unique_lock&lt;std::recursive_mutex&gt; &gt;::Enter (8 samples, 0.01%)</title><rect x="25.2" y="757" width="0.1" height="15.0" fill="rgb(249,10,37)" rx="2" ry="2" />
<text  x="28.20" y="767.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (10 samples, 0.01%)</title><rect x="109.6" y="421" width="0.1" height="15.0" fill="rgb(232,125,53)" rx="2" ry="2" />
<text  x="112.56" y="431.5" ></text>
</g>
<g >
<title>__memp_fget (77 samples, 0.08%)</title><rect x="136.3" y="469" width="1.0" height="15.0" fill="rgb(235,144,30)" rx="2" ry="2" />
<text  x="139.27" y="479.5" ></text>
</g>
<g >
<title>__db_vrfy_inpitem (23 samples, 0.02%)</title><rect x="62.8" y="549" width="0.3" height="15.0" fill="rgb(228,152,30)" rx="2" ry="2" />
<text  x="65.80" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (13 samples, 0.01%)</title><rect x="965.9" y="533" width="0.2" height="15.0" fill="rgb(240,187,48)" rx="2" ry="2" />
<text  x="968.92" y="543.5" ></text>
</g>
<g >
<title>ReadCompactSize&lt;CDataStream&gt; (14 samples, 0.02%)</title><rect x="528.7" y="581" width="0.2" height="15.0" fill="rgb(247,173,30)" rx="2" ry="2" />
<text  x="531.71" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_M_begin (8 samples, 0.01%)</title><rect x="778.0" y="565" width="0.1" height="15.0" fill="rgb(230,220,32)" rx="2" ry="2" />
<text  x="781.02" y="575.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (13 samples, 0.01%)</title><rect x="122.4" y="437" width="0.2" height="15.0" fill="rgb(223,35,35)" rx="2" ry="2" />
<text  x="125.39" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (35 samples, 0.04%)</title><rect x="810.1" y="309" width="0.4" height="15.0" fill="rgb(245,138,14)" rx="2" ry="2" />
<text  x="813.08" y="319.5" ></text>
</g>
<g >
<title>push_lock (455 samples, 0.49%)</title><rect x="788.4" y="581" width="5.8" height="15.0" fill="rgb(225,15,48)" rx="2" ry="2" />
<text  x="791.40" y="591.5" ></text>
</g>
<g >
<title>CSHA256::Write (37 samples, 0.04%)</title><rect x="42.7" y="565" width="0.4" height="15.0" fill="rgb(214,110,40)" rx="2" ry="2" />
<text  x="45.67" y="575.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::resize_uninitialized (12 samples, 0.01%)</title><rect x="378.8" y="549" width="0.1" height="15.0" fill="rgb(243,106,26)" rx="2" ry="2" />
<text  x="381.77" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::begin (11 samples, 0.01%)</title><rect x="508.8" y="293" width="0.1" height="15.0" fill="rgb(213,157,23)" rx="2" ry="2" />
<text  x="511.77" y="303.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;CTransaction const&gt;::~shared_ptr (10 samples, 0.01%)</title><rect x="528.4" y="597" width="0.1" height="15.0" fill="rgb(248,95,17)" rx="2" ry="2" />
<text  x="531.39" y="607.5" ></text>
</g>
<g >
<title>__memp_fput (18 samples, 0.02%)</title><rect x="67.7" y="469" width="0.2" height="15.0" fill="rgb(230,18,31)" rx="2" ry="2" />
<text  x="70.69" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;interfaces::(anonymous namespace)::LockImpl, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt;::get (25 samples, 0.03%)</title><rect x="955.2" y="597" width="0.3" height="15.0" fill="rgb(246,142,40)" rx="2" ry="2" />
<text  x="958.22" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::resize (107 samples, 0.12%)</title><rect x="363.9" y="469" width="1.4" height="15.0" fill="rgb(216,174,44)" rx="2" ry="2" />
<text  x="366.88" y="479.5" ></text>
</g>
<g >
<title>__lock_put (22 samples, 0.02%)</title><rect x="106.0" y="421" width="0.3" height="15.0" fill="rgb(219,80,29)" rx="2" ry="2" />
<text  x="109.05" y="431.5" ></text>
</g>
<g >
<title>__mutex_free_int (28 samples, 0.03%)</title><rect x="121.7" y="453" width="0.4" height="15.0" fill="rgb(243,57,5)" rx="2" ry="2" />
<text  x="124.74" y="463.5" ></text>
</g>
<g >
<title>__memp_fget (27 samples, 0.03%)</title><rect x="149.7" y="469" width="0.3" height="15.0" fill="rgb(245,182,43)" rx="2" ry="2" />
<text  x="152.67" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::deallocate (8 samples, 0.01%)</title><rect x="804.0" y="277" width="0.1" height="15.0" fill="rgb(246,42,43)" rx="2" ry="2" />
<text  x="806.98" y="287.5" ></text>
</g>
<g >
<title>AppInitSanityChecks (32 samples, 0.03%)</title><rect x="1149.5" y="693" width="0.4" height="15.0" fill="rgb(254,135,2)" rx="2" ry="2" />
<text  x="1152.48" y="703.5" ></text>
</g>
<g >
<title>__bam_split (257 samples, 0.28%)</title><rect x="138.3" y="501" width="3.3" height="15.0" fill="rgb(240,130,3)" rx="2" ry="2" />
<text  x="141.35" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;uint256, std::allocator&lt;uint256&gt; &gt;::_M_default_append (52 samples, 0.06%)</title><rect x="29.9" y="645" width="0.6" height="15.0" fill="rgb(215,222,44)" rx="2" ry="2" />
<text  x="32.86" y="655.5" ></text>
</g>
<g >
<title>std::pair&lt;CKeyID const, CKey&gt;::pair&lt;CKeyID&amp;&amp;, 0ul&gt; (1,839 samples, 2.00%)</title><rect x="797.6" y="517" width="23.5" height="15.0" fill="rgb(235,54,1)" rx="2" ry="2" />
<text  x="800.59" y="527.5" >s..</text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::vector (9 samples, 0.01%)</title><rect x="16.8" y="741" width="0.1" height="15.0" fill="rgb(223,116,39)" rx="2" ry="2" />
<text  x="19.76" y="751.5" ></text>
</g>
<g >
<title>__dbc_close (525 samples, 0.57%)</title><rect x="334.0" y="613" width="6.7" height="15.0" fill="rgb(250,27,34)" rx="2" ry="2" />
<text  x="337.01" y="623.5" ></text>
</g>
<g >
<title>QuadRound (213 samples, 0.23%)</title><rect x="1128.7" y="645" width="2.8" height="15.0" fill="rgb(253,51,24)" rx="2" ry="2" />
<text  x="1131.75" y="655.5" ></text>
</g>
<g >
<title>tinyformat::format&lt;int&gt; (21 samples, 0.02%)</title><rect x="1145.9" y="661" width="0.2" height="15.0" fill="rgb(208,122,32)" rx="2" ry="2" />
<text  x="1148.87" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_M_begin (9 samples, 0.01%)</title><rect x="907.1" y="581" width="0.1" height="15.0" fill="rgb(247,202,2)" rx="2" ry="2" />
<text  x="910.09" y="591.5" ></text>
</g>
<g >
<title>__bam_search (412 samples, 0.45%)</title><rect x="74.6" y="437" width="5.3" height="15.0" fill="rgb(227,45,19)" rx="2" ry="2" />
<text  x="77.61" y="447.5" ></text>
</g>
<g >
<title>CScript::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (271 samples, 0.29%)</title><rect x="1137.3" y="309" width="3.5" height="15.0" fill="rgb(219,26,36)" rx="2" ry="2" />
<text  x="1140.31" y="319.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;LockedPool::LockedPageArena&gt;::operator* (11 samples, 0.01%)</title><rect x="619.0" y="565" width="0.2" height="15.0" fill="rgb(226,150,36)" rx="2" ry="2" />
<text  x="622.04" y="575.5" ></text>
</g>
<g >
<title>CHash256::Finalize (299 samples, 0.32%)</title><rect x="1128.3" y="709" width="3.8" height="15.0" fill="rgb(236,148,17)" rx="2" ry="2" />
<text  x="1131.29" y="719.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.02%)</title><rect x="906.0" y="533" width="0.2" height="15.0" fill="rgb(242,73,34)" rx="2" ry="2" />
<text  x="908.98" y="543.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, CTxIn, std::allocator&lt;CTxIn&gt;, CTxIn&gt; (391 samples, 0.42%)</title><rect x="504.3" y="309" width="5.1" height="15.0" fill="rgb(234,71,36)" rx="2" ry="2" />
<text  x="507.35" y="319.5" ></text>
</g>
<g >
<title>__lock_put (16 samples, 0.02%)</title><rect x="148.2" y="501" width="0.2" height="15.0" fill="rgb(243,174,49)" rx="2" ry="2" />
<text  x="151.23" y="511.5" ></text>
</g>
<g >
<title>__memp_alloc (14 samples, 0.02%)</title><rect x="62.4" y="437" width="0.2" height="15.0" fill="rgb(205,102,48)" rx="2" ry="2" />
<text  x="65.42" y="447.5" ></text>
</g>
<g >
<title>__mutex_free_int (17 samples, 0.02%)</title><rect x="160.1" y="533" width="0.2" height="15.0" fill="rgb(206,197,43)" rx="2" ry="2" />
<text  x="163.05" y="543.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (21 samples, 0.02%)</title><rect x="1021.4" y="517" width="0.3" height="15.0" fill="rgb(206,123,32)" rx="2" ry="2" />
<text  x="1024.44" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CMerkleTx, std::allocator&lt;CMerkleTx&gt; &gt;::_Vector_impl::~_Vector_impl (17 samples, 0.02%)</title><rect x="557.1" y="597" width="0.2" height="15.0" fill="rgb(215,121,51)" rx="2" ry="2" />
<text  x="560.11" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_check_len (369 samples, 0.40%)</title><rect x="295.9" y="613" width="4.7" height="15.0" fill="rgb(227,159,44)" rx="2" ry="2" />
<text  x="298.87" y="623.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (17 samples, 0.02%)</title><rect x="1094.3" y="581" width="0.2" height="15.0" fill="rgb(211,39,48)" rx="2" ry="2" />
<text  x="1097.32" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::clear (1,166 samples, 1.27%)</title><rect x="593.1" y="613" width="14.9" height="15.0" fill="rgb(215,54,20)" rx="2" ry="2" />
<text  x="596.07" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::end (21 samples, 0.02%)</title><rect x="516.8" y="245" width="0.3" height="15.0" fill="rgb(240,89,12)" rx="2" ry="2" />
<text  x="519.85" y="255.5" ></text>
</g>
<g >
<title>CScriptWitness::CScriptWitness (14 samples, 0.02%)</title><rect x="1031.7" y="533" width="0.2" height="15.0" fill="rgb(209,88,51)" rx="2" ry="2" />
<text  x="1034.74" y="543.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::clear (12 samples, 0.01%)</title><rect x="450.0" y="165" width="0.1" height="15.0" fill="rgb(249,5,50)" rx="2" ry="2" />
<text  x="452.96" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::construct&lt;char, char const&amp;&gt; (6,202 samples, 6.73%)</title><rect x="211.8" y="597" width="79.5" height="15.0" fill="rgb(250,147,5)" rx="2" ry="2" />
<text  x="214.83" y="607.5" >std::allo..</text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_value (138 samples, 0.15%)</title><rect x="936.1" y="581" width="1.8" height="15.0" fill="rgb(207,21,17)" rx="2" ry="2" />
<text  x="939.12" y="591.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Compare (128 samples, 0.14%)</title><rect x="939.4" y="565" width="1.6" height="15.0" fill="rgb(247,139,9)" rx="2" ry="2" />
<text  x="942.37" y="575.5" ></text>
</g>
<g >
<title>AssertLockHeldInternal (24 samples, 0.03%)</title><rect x="961.0" y="629" width="0.3" height="15.0" fill="rgb(217,117,36)" rx="2" ry="2" />
<text  x="964.03" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_S_left (13 samples, 0.01%)</title><rect x="689.5" y="581" width="0.1" height="15.0" fill="rgb(231,227,15)" rx="2" ry="2" />
<text  x="692.47" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt; &gt;::_M_deallocate_node (40 samples, 0.04%)</title><rect x="1091.9" y="501" width="0.5" height="15.0" fill="rgb(234,6,54)" rx="2" ry="2" />
<text  x="1094.91" y="511.5" ></text>
</g>
<g >
<title>_int_malloc (19 samples, 0.02%)</title><rect x="73.8" y="437" width="0.3" height="15.0" fill="rgb(225,91,17)" rx="2" ry="2" />
<text  x="76.84" y="447.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt; &gt;::erase (13 samples, 0.01%)</title><rect x="630.9" y="549" width="0.1" height="15.0" fill="rgb(208,36,30)" rx="2" ry="2" />
<text  x="633.88" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::_M_valptr (14 samples, 0.02%)</title><rect x="930.3" y="565" width="0.2" height="15.0" fill="rgb(224,218,1)" rx="2" ry="2" />
<text  x="933.28" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, CKeyID&amp;&amp;&gt;::_Tuple_impl (28 samples, 0.03%)</title><rect x="821.2" y="517" width="0.4" height="15.0" fill="rgb(240,173,0)" rx="2" ry="2" />
<text  x="824.22" y="527.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::item_ptr (15 samples, 0.02%)</title><rect x="760.7" y="437" width="0.2" height="15.0" fill="rgb(246,220,36)" rx="2" ry="2" />
<text  x="763.72" y="447.5" ></text>
</g>
<g >
<title>_int_malloc (14 samples, 0.02%)</title><rect x="453.3" y="245" width="0.2" height="15.0" fill="rgb(227,139,14)" rx="2" ry="2" />
<text  x="456.33" y="255.5" ></text>
</g>
<g >
<title>_mm_add_epi32 (12 samples, 0.01%)</title><rect x="1119.7" y="613" width="0.1" height="15.0" fill="rgb(240,72,9)" rx="2" ry="2" />
<text  x="1122.69" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::operator[] (11 samples, 0.01%)</title><rect x="468.5" y="357" width="0.1" height="15.0" fill="rgb(222,112,16)" rx="2" ry="2" />
<text  x="471.48" y="367.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned char const*, unsigned char*&gt; (8 samples, 0.01%)</title><rect x="1100.7" y="549" width="0.1" height="15.0" fill="rgb(212,30,21)" rx="2" ry="2" />
<text  x="1103.69" y="559.5" ></text>
</g>
<g >
<title>__db_vrfy_pgset_inc (126 samples, 0.14%)</title><rect x="93.9" y="485" width="1.6" height="15.0" fill="rgb(232,65,19)" rx="2" ry="2" />
<text  x="96.86" y="495.5" ></text>
</g>
<g >
<title>CDataStream::Init (14 samples, 0.02%)</title><rect x="351.1" y="677" width="0.2" height="15.0" fill="rgb(212,37,52)" rx="2" ry="2" />
<text  x="354.14" y="687.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::end (20 samples, 0.02%)</title><rect x="757.6" y="597" width="0.2" height="15.0" fill="rgb(232,150,48)" rx="2" ry="2" />
<text  x="760.56" y="607.5" ></text>
</g>
<g >
<title>__env_alloc (10 samples, 0.01%)</title><rect x="1107.4" y="597" width="0.2" height="15.0" fill="rgb(244,28,7)" rx="2" ry="2" />
<text  x="1110.45" y="607.5" ></text>
</g>
<g >
<title>sha256_shani::Transform (112 samples, 0.12%)</title><rect x="1119.2" y="645" width="1.4" height="15.0" fill="rgb(248,37,16)" rx="2" ry="2" />
<text  x="1122.19" y="655.5" ></text>
</g>
<g >
<title>__db_ret (67 samples, 0.07%)</title><rect x="329.9" y="629" width="0.9" height="15.0" fill="rgb(212,121,45)" rx="2" ry="2" />
<text  x="332.92" y="639.5" ></text>
</g>
<g >
<title>_int_malloc (11 samples, 0.01%)</title><rect x="64.0" y="501" width="0.1" height="15.0" fill="rgb(211,71,51)" rx="2" ry="2" />
<text  x="66.97" y="511.5" ></text>
</g>
<g >
<title>__db_vrfy_getpageinfo (379 samples, 0.41%)</title><rect x="141.8" y="581" width="4.9" height="15.0" fill="rgb(237,219,39)" rx="2" ry="2" />
<text  x="144.83" y="591.5" ></text>
</g>
<g >
<title>__memp_fput (8 samples, 0.01%)</title><rect x="110.1" y="437" width="0.1" height="15.0" fill="rgb(222,133,3)" rx="2" ry="2" />
<text  x="113.10" y="447.5" ></text>
</g>
<g >
<title>__bam_defcmp (10 samples, 0.01%)</title><rect x="83.4" y="389" width="0.1" height="15.0" fill="rgb(244,8,11)" rx="2" ry="2" />
<text  x="86.36" y="399.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::base_blob (21 samples, 0.02%)</title><rect x="1106.3" y="661" width="0.3" height="15.0" fill="rgb(241,145,17)" rx="2" ry="2" />
<text  x="1109.35" y="671.5" ></text>
</g>
<g >
<title>CLockLocation::~CLockLocation (9 samples, 0.01%)</title><rect x="788.3" y="581" width="0.1" height="15.0" fill="rgb(237,151,1)" rx="2" ry="2" />
<text  x="791.28" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::~_Rb_tree (131 samples, 0.14%)</title><rect x="1051.1" y="645" width="1.7" height="15.0" fill="rgb(246,121,53)" rx="2" ry="2" />
<text  x="1054.09" y="655.5" ></text>
</g>
<g >
<title>LoadChainTip (27 samples, 0.03%)</title><rect x="32.0" y="709" width="0.3" height="15.0" fill="rgb(249,60,47)" rx="2" ry="2" />
<text  x="34.95" y="719.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (23 samples, 0.02%)</title><rect x="45.0" y="565" width="0.3" height="15.0" fill="rgb(222,80,52)" rx="2" ry="2" />
<text  x="48.00" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;char*, unsigned long&amp;&gt; (59 samples, 0.06%)</title><rect x="570.7" y="469" width="0.8" height="15.0" fill="rgb(233,216,6)" rx="2" ry="2" />
<text  x="573.71" y="479.5" ></text>
</g>
<g >
<title>LockAssertion::LockAssertion&lt;AnnotatedMixin&lt;std::recursive_mutex&gt; &gt; (12 samples, 0.01%)</title><rect x="53.6" y="613" width="0.2" height="15.0" fill="rgb(205,200,46)" rx="2" ry="2" />
<text  x="56.64" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (72 samples, 0.08%)</title><rect x="1084.4" y="549" width="0.9" height="15.0" fill="rgb(227,55,23)" rx="2" ry="2" />
<text  x="1087.42" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::empty (18 samples, 0.02%)</title><rect x="520.4" y="309" width="0.3" height="15.0" fill="rgb(243,27,52)" rx="2" ry="2" />
<text  x="523.45" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt;::destroy&lt;std::pair&lt;void*, CLockLocation&gt; &gt; (21 samples, 0.02%)</title><rect x="795.1" y="549" width="0.2" height="15.0" fill="rgb(210,204,51)" rx="2" ry="2" />
<text  x="798.07" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_value (28 samples, 0.03%)</title><rect x="1160.4" y="757" width="0.4" height="15.0" fill="rgb(213,135,2)" rx="2" ry="2" />
<text  x="1163.42" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_S_key (11 samples, 0.01%)</title><rect x="630.2" y="501" width="0.1" height="15.0" fill="rgb(242,202,39)" rx="2" ry="2" />
<text  x="633.16" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (38 samples, 0.04%)</title><rect x="1063.0" y="565" width="0.4" height="15.0" fill="rgb(207,171,39)" rx="2" ry="2" />
<text  x="1065.96" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;::_M_v (9 samples, 0.01%)</title><rect x="807.0" y="325" width="0.1" height="15.0" fill="rgb(225,109,37)" rx="2" ry="2" />
<text  x="809.98" y="335.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.01%)</title><rect x="328.5" y="485" width="0.2" height="15.0" fill="rgb(227,154,49)" rx="2" ry="2" />
<text  x="331.53" y="495.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (48 samples, 0.05%)</title><rect x="61.4" y="501" width="0.6" height="15.0" fill="rgb(254,172,42)" rx="2" ry="2" />
<text  x="64.35" y="511.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (10 samples, 0.01%)</title><rect x="142.6" y="533" width="0.2" height="15.0" fill="rgb(252,169,33)" rx="2" ry="2" />
<text  x="145.64" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (39 samples, 0.04%)</title><rect x="633.5" y="469" width="0.5" height="15.0" fill="rgb(208,43,12)" rx="2" ry="2" />
<text  x="636.49" y="479.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (20 samples, 0.02%)</title><rect x="534.1" y="597" width="0.3" height="15.0" fill="rgb(216,94,18)" rx="2" ry="2" />
<text  x="537.10" y="607.5" ></text>
</g>
<g >
<title>__strlen_avx2 (18 samples, 0.02%)</title><rect x="788.0" y="533" width="0.2" height="15.0" fill="rgb(224,227,35)" rx="2" ry="2" />
<text  x="791.01" y="543.5" ></text>
</g>
<g >
<title>CHash256::Write (15 samples, 0.02%)</title><rect x="493.1" y="165" width="0.2" height="15.0" fill="rgb(224,195,44)" rx="2" ry="2" />
<text  x="496.12" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_const_cast (18 samples, 0.02%)</title><rect x="422.1" y="549" width="0.2" height="15.0" fill="rgb(220,3,46)" rx="2" ry="2" />
<text  x="425.10" y="559.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (288 samples, 0.31%)</title><rect x="409.2" y="597" width="3.7" height="15.0" fill="rgb(236,23,43)" rx="2" ry="2" />
<text  x="412.22" y="607.5" ></text>
</g>
<g >
<title>QuadRound (107 samples, 0.12%)</title><rect x="1122.6" y="581" width="1.3" height="15.0" fill="rgb(213,81,38)" rx="2" ry="2" />
<text  x="1125.57" y="591.5" ></text>
</g>
<g >
<title>boost::detail::variant::cast_storage&lt;WitnessV0KeyHash&gt; (10 samples, 0.01%)</title><rect x="758.9" y="485" width="0.2" height="15.0" fill="rgb(223,217,31)" rx="2" ry="2" />
<text  x="761.93" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (28 samples, 0.03%)</title><rect x="838.9" y="581" width="0.4" height="15.0" fill="rgb(221,35,12)" rx="2" ry="2" />
<text  x="841.93" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (12 samples, 0.01%)</title><rect x="812.4" y="261" width="0.2" height="15.0" fill="rgb(253,183,33)" rx="2" ry="2" />
<text  x="815.40" y="271.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt; &gt; (279 samples, 0.30%)</title><rect x="1140.8" y="293" width="3.6" height="15.0" fill="rgb(225,163,22)" rx="2" ry="2" />
<text  x="1143.78" y="303.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (153 samples, 0.17%)</title><rect x="106.8" y="437" width="2.0" height="15.0" fill="rgb(236,186,54)" rx="2" ry="2" />
<text  x="109.81" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;CTxIn const*, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt; (25 samples, 0.03%)</title><rect x="933.9" y="645" width="0.4" height="15.0" fill="rgb(206,83,2)" rx="2" ry="2" />
<text  x="936.94" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_get_Tp_allocator (23 samples, 0.02%)</title><rect x="462.7" y="293" width="0.3" height="15.0" fill="rgb(216,212,50)" rx="2" ry="2" />
<text  x="465.66" y="303.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 0.02%)</title><rect x="1146.2" y="709" width="0.3" height="15.0" fill="rgb(210,11,52)" rx="2" ry="2" />
<text  x="1149.23" y="719.5" ></text>
</g>
<g >
<title>__bam_iitem (54 samples, 0.06%)</title><rect x="114.6" y="437" width="0.7" height="15.0" fill="rgb(218,203,50)" rx="2" ry="2" />
<text  x="117.63" y="447.5" ></text>
</g>
<g >
<title>CSHA256::Write (12 samples, 0.01%)</title><rect x="493.2" y="149" width="0.1" height="15.0" fill="rgb(238,113,3)" rx="2" ry="2" />
<text  x="496.15" y="159.5" ></text>
</g>
<g >
<title>BlockManager::LoadBlockIndex (30 samples, 0.03%)</title><rect x="31.5" y="677" width="0.4" height="15.0" fill="rgb(213,162,43)" rx="2" ry="2" />
<text  x="34.48" y="687.5" ></text>
</g>
<g >
<title>BerkeleyDatabase::~BerkeleyDatabase (13 samples, 0.01%)</title><rect x="162.4" y="645" width="0.1" height="15.0" fill="rgb(221,210,2)" rx="2" ry="2" />
<text  x="165.36" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::size (9 samples, 0.01%)</title><rect x="459.4" y="277" width="0.2" height="15.0" fill="rgb(217,34,53)" rx="2" ry="2" />
<text  x="462.45" y="287.5" ></text>
</g>
<g >
<title>[unknown] (26 samples, 0.03%)</title><rect x="101.8" y="341" width="0.3" height="15.0" fill="rgb(215,73,38)" rx="2" ry="2" />
<text  x="104.78" y="351.5" ></text>
</g>
<g >
<title>sha256_shani::Transform (146 samples, 0.16%)</title><rect x="1122.3" y="597" width="1.8" height="15.0" fill="rgb(219,109,0)" rx="2" ry="2" />
<text  x="1125.25" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (10 samples, 0.01%)</title><rect x="473.9" y="309" width="0.1" height="15.0" fill="rgb(214,126,31)" rx="2" ry="2" />
<text  x="476.88" y="319.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::item_ptr (25 samples, 0.03%)</title><rect x="440.6" y="149" width="0.3" height="15.0" fill="rgb(207,116,39)" rx="2" ry="2" />
<text  x="443.58" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;::_Rb_tree_iterator (15 samples, 0.02%)</title><rect x="803.4" y="341" width="0.2" height="15.0" fill="rgb(230,74,32)" rx="2" ry="2" />
<text  x="806.41" y="351.5" ></text>
</g>
<g >
<title>CTxOut::Serialize&lt;CHashWriter&gt; (169 samples, 0.18%)</title><rect x="162.5" y="389" width="2.2" height="15.0" fill="rgb(250,64,21)" rx="2" ry="2" />
<text  x="165.53" y="399.5" ></text>
</g>
<g >
<title>CuckooCache::cache&lt;uint256, SignatureCacheHasher&gt;::setup (66 samples, 0.07%)</title><rect x="29.7" y="677" width="0.8" height="15.0" fill="rgb(252,87,4)" rx="2" ry="2" />
<text  x="32.68" y="687.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (13 samples, 0.01%)</title><rect x="74.1" y="453" width="0.2" height="15.0" fill="rgb(247,64,13)" rx="2" ry="2" />
<text  x="77.10" y="463.5" ></text>
</g>
<g >
<title>operator&lt; (508 samples, 0.55%)</title><rect x="830.2" y="549" width="6.6" height="15.0" fill="rgb(206,54,24)" rx="2" ry="2" />
<text  x="833.25" y="559.5" ></text>
</g>
<g >
<title>CSHA256::CSHA256 (13 samples, 0.01%)</title><rect x="1056.9" y="645" width="0.2" height="15.0" fill="rgb(208,37,39)" rx="2" ry="2" />
<text  x="1059.90" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CBlockIndex*, CBlockIndex*, std::_Identity&lt;CBlockIndex*&gt;, CBlockIndexWorkComparator, std::allocator&lt;CBlockIndex*&gt; &gt;::_M_erase_aux (9 samples, 0.01%)</title><rect x="32.2" y="645" width="0.1" height="15.0" fill="rgb(246,41,20)" rx="2" ry="2" />
<text  x="35.18" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;CKeyID&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (2,288 samples, 2.48%)</title><rect x="796.2" y="613" width="29.3" height="15.0" fill="rgb(215,71,16)" rx="2" ry="2" />
<text  x="799.20" y="623.5" >st..</text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::end (9 samples, 0.01%)</title><rect x="520.6" y="293" width="0.1" height="15.0" fill="rgb(217,94,51)" rx="2" ry="2" />
<text  x="523.56" y="303.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;char*&gt;::base (29 samples, 0.03%)</title><rect x="294.9" y="549" width="0.4" height="15.0" fill="rgb(206,18,45)" rx="2" ry="2" />
<text  x="297.91" y="559.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~map (40 samples, 0.04%)</title><rect x="1026.5" y="661" width="0.5" height="15.0" fill="rgb(236,44,16)" rx="2" ry="2" />
<text  x="1029.46" y="671.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, prevector&lt;28u, unsigned char, unsigned int, int&gt;&amp;&gt; (110 samples, 0.12%)</title><rect x="449.2" y="213" width="1.4" height="15.0" fill="rgb(221,229,1)" rx="2" ry="2" />
<text  x="452.22" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::vector (15 samples, 0.02%)</title><rect x="640.0" y="645" width="0.2" height="15.0" fill="rgb(233,1,23)" rx="2" ry="2" />
<text  x="643.05" y="655.5" ></text>
</g>
<g >
<title>CScript::clear (17 samples, 0.02%)</title><rect x="1039.0" y="517" width="0.2" height="15.0" fill="rgb(235,132,5)" rx="2" ry="2" />
<text  x="1041.97" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_key (205 samples, 0.22%)</title><rect x="935.7" y="597" width="2.6" height="15.0" fill="rgb(249,141,32)" rx="2" ry="2" />
<text  x="938.66" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;CTxIn const*, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt;::operator* (9 samples, 0.01%)</title><rect x="508.4" y="293" width="0.2" height="15.0" fill="rgb(228,107,35)" rx="2" ry="2" />
<text  x="511.45" y="303.5" ></text>
</g>
<g >
<title>CDataStream::read (8 samples, 0.01%)</title><rect x="378.6" y="517" width="0.1" height="15.0" fill="rgb(223,218,32)" rx="2" ry="2" />
<text  x="381.59" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;CBlockIndex*&gt;::operator (9 samples, 0.01%)</title><rect x="50.1" y="645" width="0.1" height="15.0" fill="rgb(233,200,6)" rx="2" ry="2" />
<text  x="53.12" y="655.5" ></text>
</g>
<g >
<title>__lock_get (20 samples, 0.02%)</title><rect x="66.7" y="453" width="0.3" height="15.0" fill="rgb(225,18,21)" rx="2" ry="2" />
<text  x="69.71" y="463.5" ></text>
</g>
<g >
<title>sha256_shani::Transform (169 samples, 0.18%)</title><rect x="162.5" y="165" width="2.2" height="15.0" fill="rgb(235,204,47)" rx="2" ry="2" />
<text  x="165.53" y="175.5" ></text>
</g>
<g >
<title>__db_get (125 samples, 0.14%)</title><rect x="91.2" y="469" width="1.6" height="15.0" fill="rgb(240,168,35)" rx="2" ry="2" />
<text  x="94.22" y="479.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (17 samples, 0.02%)</title><rect x="317.1" y="549" width="0.2" height="15.0" fill="rgb(212,44,52)" rx="2" ry="2" />
<text  x="320.13" y="559.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.02%)</title><rect x="765.1" y="421" width="0.3" height="15.0" fill="rgb(207,116,25)" rx="2" ry="2" />
<text  x="768.09" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;CTxOut const*, CTxOut*, CTxOut&gt; (20 samples, 0.02%)</title><rect x="454.9" y="309" width="0.2" height="15.0" fill="rgb(244,151,2)" rx="2" ry="2" />
<text  x="457.85" y="319.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (8 samples, 0.01%)</title><rect x="135.6" y="437" width="0.1" height="15.0" fill="rgb(241,106,17)" rx="2" ry="2" />
<text  x="138.63" y="447.5" ></text>
</g>
<g >
<title>CSHA256::Write (28 samples, 0.03%)</title><rect x="496.5" y="69" width="0.4" height="15.0" fill="rgb(216,217,30)" rx="2" ry="2" />
<text  x="499.54" y="79.5" ></text>
</g>
<g >
<title>CSHA256::CSHA256 (8 samples, 0.01%)</title><rect x="641.3" y="629" width="0.1" height="15.0" fill="rgb(205,104,42)" rx="2" ry="2" />
<text  x="644.28" y="639.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::data (13 samples, 0.01%)</title><rect x="1036.6" y="341" width="0.2" height="15.0" fill="rgb(234,86,20)" rx="2" ry="2" />
<text  x="1039.63" y="351.5" ></text>
</g>
<g >
<title>__os_calloc (79 samples, 0.09%)</title><rect x="63.1" y="549" width="1.0" height="15.0" fill="rgb(242,114,44)" rx="2" ry="2" />
<text  x="66.10" y="559.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (19 samples, 0.02%)</title><rect x="572.3" y="533" width="0.3" height="15.0" fill="rgb(213,229,7)" rx="2" ry="2" />
<text  x="575.31" y="543.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.01%)</title><rect x="560.4" y="629" width="0.1" height="15.0" fill="rgb(246,1,37)" rx="2" ry="2" />
<text  x="563.38" y="639.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (14 samples, 0.02%)</title><rect x="65.3" y="517" width="0.1" height="15.0" fill="rgb(214,225,26)" rx="2" ry="2" />
<text  x="68.26" y="527.5" ></text>
</g>
<g >
<title>CTransaction::Serialize&lt;CHashWriter&gt; (1,514 samples, 1.64%)</title><rect x="502.3" y="373" width="19.4" height="15.0" fill="rgb(218,175,39)" rx="2" ry="2" />
<text  x="505.30" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;COutPoint&gt;, bool&gt;::pair&lt;std::_Rb_tree_iterator&lt;COutPoint&gt;, bool, true&gt; (18 samples, 0.02%)</title><rect x="1049.8" y="629" width="0.2" height="15.0" fill="rgb(244,203,42)" rx="2" ry="2" />
<text  x="1052.75" y="639.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::empty (25 samples, 0.03%)</title><rect x="492.3" y="101" width="0.3" height="15.0" fill="rgb(224,224,10)" rx="2" ry="2" />
<text  x="495.27" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (72 samples, 0.08%)</title><rect x="948.0" y="485" width="0.9" height="15.0" fill="rgb(212,45,37)" rx="2" ry="2" />
<text  x="951.02" y="495.5" ></text>
</g>
<g >
<title>__memp_bhfree (44 samples, 0.05%)</title><rect x="327.5" y="565" width="0.6" height="15.0" fill="rgb(207,147,6)" rx="2" ry="2" />
<text  x="330.53" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;secure_allocator&lt;unsigned char&gt; &gt;::allocate (863 samples, 0.94%)</title><rect x="609.1" y="613" width="11.1" height="15.0" fill="rgb(212,14,7)" rx="2" ry="2" />
<text  x="612.11" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;CTransaction const,  (8 samples, 0.01%)</title><rect x="1168.1" y="757" width="0.1" height="15.0" fill="rgb(245,105,15)" rx="2" ry="2" />
<text  x="1171.13" y="767.5" ></text>
</g>
<g >
<title>CSHA256::Finalize (97 samples, 0.11%)</title><rect x="1057.1" y="645" width="1.3" height="15.0" fill="rgb(221,32,9)" rx="2" ry="2" />
<text  x="1060.13" y="655.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned char*, secure_allocator&lt;unsigned char&gt; &gt; (831 samples, 0.90%)</title><rect x="1069.3" y="661" width="10.7" height="15.0" fill="rgb(212,207,40)" rx="2" ry="2" />
<text  x="1072.35" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_S_do_relocate (23 samples, 0.02%)</title><rect x="1104.2" y="645" width="0.3" height="15.0" fill="rgb(205,11,54)" rx="2" ry="2" />
<text  x="1107.25" y="655.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned (13 samples, 0.01%)</title><rect x="331.3" y="613" width="0.1" height="15.0" fill="rgb(223,40,46)" rx="2" ry="2" />
<text  x="334.28" y="623.5" ></text>
</g>
<g >
<title>uint160::uint160 (13 samples, 0.01%)</title><rect x="736.7" y="581" width="0.2" height="15.0" fill="rgb(227,122,47)" rx="2" ry="2" />
<text  x="739.68" y="591.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned char&gt;::allocator (10 samples, 0.01%)</title><rect x="624.5" y="597" width="0.1" height="15.0" fill="rgb(232,45,31)" rx="2" ry="2" />
<text  x="627.49" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;interfaces::Chain::Lock, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt;::operator (8 samples, 0.01%)</title><rect x="1017.7" y="661" width="0.1" height="15.0" fill="rgb(248,114,31)" rx="2" ry="2" />
<text  x="1020.66" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;CTransaction&gt;::new_allocator (12 samples, 0.01%)</title><rect x="1064.3" y="629" width="0.1" height="15.0" fill="rgb(207,38,6)" rx="2" ry="2" />
<text  x="1067.29" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;void*, CLockLocation&gt; &gt; (12 samples, 0.01%)</title><rect x="1181.0" y="757" width="0.2" height="15.0" fill="rgb(219,157,50)" rx="2" ry="2" />
<text  x="1184.00" y="767.5" ></text>
</g>
<g >
<title>std::forward&lt;void*&amp;&gt; (11 samples, 0.01%)</title><rect x="841.9" y="565" width="0.1" height="15.0" fill="rgb(219,182,42)" rx="2" ry="2" />
<text  x="844.85" y="575.5" ></text>
</g>
<g >
<title>__db_lget (30 samples, 0.03%)</title><rect x="70.0" y="469" width="0.4" height="15.0" fill="rgb(247,227,36)" rx="2" ry="2" />
<text  x="72.99" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_S_left (30 samples, 0.03%)</title><rect x="909.5" y="581" width="0.4" height="15.0" fill="rgb(227,128,46)" rx="2" ry="2" />
<text  x="912.51" y="591.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTransaction&gt; (169 samples, 0.18%)</title><rect x="162.5" y="501" width="2.2" height="15.0" fill="rgb(213,93,41)" rx="2" ry="2" />
<text  x="165.53" y="511.5" ></text>
</g>
<g >
<title>__db_lget (9 samples, 0.01%)</title><rect x="94.2" y="389" width="0.1" height="15.0" fill="rgb(226,107,31)" rx="2" ry="2" />
<text  x="97.15" y="399.5" ></text>
</g>
<g >
<title>AssertLockHeldInternal (9 samples, 0.01%)</title><rect x="44.5" y="597" width="0.1" height="15.0" fill="rgb(212,207,44)" rx="2" ry="2" />
<text  x="47.50" y="607.5" ></text>
</g>
<g >
<title>COutPoint::SerializationOp&lt;CDataStream, CSerActionUnserialize&gt; (172 samples, 0.19%)</title><rect x="435.7" y="245" width="2.2" height="15.0" fill="rgb(250,34,11)" rx="2" ry="2" />
<text  x="438.73" y="255.5" ></text>
</g>
<g >
<title>operator new (59 samples, 0.06%)</title><rect x="419.3" y="501" width="0.8" height="15.0" fill="rgb(248,85,48)" rx="2" ry="2" />
<text  x="422.30" y="511.5" ></text>
</g>
<g >
<title>operator&lt; (9 samples, 0.01%)</title><rect x="775.6" y="549" width="0.2" height="15.0" fill="rgb(224,45,47)" rx="2" ry="2" />
<text  x="778.64" y="559.5" ></text>
</g>
<g >
<title>CTxIn::Serialize&lt;CHashWriter&gt; (279 samples, 0.30%)</title><rect x="1140.8" y="405" width="3.6" height="15.0" fill="rgb(243,75,20)" rx="2" ry="2" />
<text  x="1143.78" y="415.5" ></text>
</g>
<g >
<title>__dbc_iget (479 samples, 0.52%)</title><rect x="74.4" y="485" width="6.2" height="15.0" fill="rgb(238,192,32)" rx="2" ry="2" />
<text  x="77.43" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;interfaces::Chain::Lock*, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt;::tuple&lt;interfaces::Chain::Lock*&amp;, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt;, true&gt; (51 samples, 0.06%)</title><rect x="953.9" y="597" width="0.7" height="15.0" fill="rgb(231,190,12)" rx="2" ry="2" />
<text  x="956.90" y="607.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Serialize&lt;CHashWriter&gt; (18 samples, 0.02%)</title><rect x="43.4" y="501" width="0.2" height="15.0" fill="rgb(230,223,50)" rx="2" ry="2" />
<text  x="46.39" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::pair&lt;char*&amp;&amp;&gt; (13 samples, 0.01%)</title><rect x="635.7" y="469" width="0.1" height="15.0" fill="rgb(244,159,4)" rx="2" ry="2" />
<text  x="638.67" y="479.5" ></text>
</g>
<g >
<title>CSHA256::Write (10 samples, 0.01%)</title><rect x="736.5" y="565" width="0.2" height="15.0" fill="rgb(247,0,20)" rx="2" ry="2" />
<text  x="739.54" y="575.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CScript&gt; (103 samples, 0.11%)</title><rect x="510.6" y="213" width="1.3" height="15.0" fill="rgb(214,140,3)" rx="2" ry="2" />
<text  x="513.60" y="223.5" ></text>
</g>
<g >
<title>CSHA256::Write (112 samples, 0.12%)</title><rect x="1119.2" y="661" width="1.4" height="15.0" fill="rgb(214,181,9)" rx="2" ry="2" />
<text  x="1122.19" y="671.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_deallocate (22 samples, 0.02%)</title><rect x="184.7" y="613" width="0.3" height="15.0" fill="rgb(234,123,25)" rx="2" ry="2" />
<text  x="187.72" y="623.5" ></text>
</g>
<g >
<title>__dbc_close (42 samples, 0.05%)</title><rect x="142.2" y="549" width="0.6" height="15.0" fill="rgb(214,127,30)" rx="2" ry="2" />
<text  x="145.23" y="559.5" ></text>
</g>
<g >
<title>__memp_fget (8 samples, 0.01%)</title><rect x="95.0" y="389" width="0.1" height="15.0" fill="rgb(253,28,40)" rx="2" ry="2" />
<text  x="98.01" y="399.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned char*, unsigned char*, std::allocator&lt;unsigned char&gt; &gt; (44 samples, 0.05%)</title><rect x="466.2" y="261" width="0.5" height="15.0" fill="rgb(253,159,17)" rx="2" ry="2" />
<text  x="469.17" y="271.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.01%)</title><rect x="132.4" y="293" width="0.2" height="15.0" fill="rgb(225,52,41)" rx="2" ry="2" />
<text  x="135.44" y="303.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::iterator::iterator (12 samples, 0.01%)</title><rect x="762.0" y="421" width="0.2" height="15.0" fill="rgb(219,178,37)" rx="2" ry="2" />
<text  x="765.04" y="431.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (8 samples, 0.01%)</title><rect x="145.8" y="453" width="0.1" height="15.0" fill="rgb(246,177,10)" rx="2" ry="2" />
<text  x="148.79" y="463.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (27 samples, 0.03%)</title><rect x="152.1" y="533" width="0.3" height="15.0" fill="rgb(229,57,8)" rx="2" ry="2" />
<text  x="155.08" y="543.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.02%)</title><rect x="774.1" y="517" width="0.1" height="15.0" fill="rgb(217,45,53)" rx="2" ry="2" />
<text  x="777.05" y="527.5" ></text>
</g>
<g >
<title>Hash160&lt;prevector&lt;28u, unsigned char, unsigned int, int&gt;::const_iterator&gt; (153 samples, 0.17%)</title><rect x="1126.2" y="645" width="1.9" height="15.0" fill="rgb(216,105,16)" rx="2" ry="2" />
<text  x="1129.18" y="655.5" ></text>
</g>
<g >
<title>local_Rb_tree_increment (16 samples, 0.02%)</title><rect x="869.5" y="565" width="0.2" height="15.0" fill="rgb(246,222,5)" rx="2" ry="2" />
<text  x="872.51" y="575.5" ></text>
</g>
<g >
<title>__dbc_iget (306 samples, 0.33%)</title><rect x="142.8" y="549" width="3.9" height="15.0" fill="rgb(226,191,28)" rx="2" ry="2" />
<text  x="145.77" y="559.5" ></text>
</g>
<g >
<title>__db_lget (40 samples, 0.04%)</title><rect x="98.2" y="405" width="0.5" height="15.0" fill="rgb(239,15,15)" rx="2" ry="2" />
<text  x="101.24" y="415.5" ></text>
</g>
<g >
<title>Hash160&lt;unsigned char const*&gt; (1,528 samples, 1.66%)</title><rect x="717.3" y="597" width="19.6" height="15.0" fill="rgb(238,154,15)" rx="2" ry="2" />
<text  x="720.28" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (13 samples, 0.01%)</title><rect x="417.4" y="469" width="0.2" height="15.0" fill="rgb(246,119,29)" rx="2" ry="2" />
<text  x="420.39" y="479.5" ></text>
</g>
<g >
<title>ReadCompactSize&lt;CDataStream&gt; (34 samples, 0.04%)</title><rect x="376.1" y="629" width="0.5" height="15.0" fill="rgb(214,92,17)" rx="2" ry="2" />
<text  x="379.13" y="639.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::data (19 samples, 0.02%)</title><rect x="492.0" y="101" width="0.3" height="15.0" fill="rgb(254,67,28)" rx="2" ry="2" />
<text  x="495.03" y="111.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, unsigned char*, unsigned char*&gt; (8 samples, 0.01%)</title><rect x="1097.5" y="549" width="0.2" height="15.0" fill="rgb(207,226,54)" rx="2" ry="2" />
<text  x="1100.55" y="559.5" ></text>
</g>
<g >
<title>ReadCompactSize&lt;CDataStream&gt; (20 samples, 0.02%)</title><rect x="530.3" y="581" width="0.2" height="15.0" fill="rgb(238,67,33)" rx="2" ry="2" />
<text  x="533.28" y="591.5" ></text>
</g>
<g >
<title>CDataStream::read (17 samples, 0.02%)</title><rect x="434.8" y="325" width="0.2" height="15.0" fill="rgb(227,64,31)" rx="2" ry="2" />
<text  x="437.78" y="335.5" ></text>
</g>
<g >
<title>CDataStream::read (16 samples, 0.02%)</title><rect x="442.0" y="245" width="0.2" height="15.0" fill="rgb(214,8,43)" rx="2" ry="2" />
<text  x="445.00" y="255.5" ></text>
</g>
<g >
<title>__lock_get_internal (10 samples, 0.01%)</title><rect x="91.7" y="357" width="0.2" height="15.0" fill="rgb(228,188,48)" rx="2" ry="2" />
<text  x="94.74" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;CKeyID, CKeyMetadata, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt;::operator[] (9 samples, 0.01%)</title><rect x="866.6" y="661" width="0.1" height="15.0" fill="rgb(231,107,13)" rx="2" ry="2" />
<text  x="869.57" y="671.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (15 samples, 0.02%)</title><rect x="529.5" y="565" width="0.2" height="15.0" fill="rgb(237,228,32)" rx="2" ry="2" />
<text  x="532.47" y="575.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, bool&amp;&gt; (316 samples, 0.34%)</title><rect x="365.6" y="613" width="4.1" height="15.0" fill="rgb(237,11,19)" rx="2" ry="2" />
<text  x="368.61" y="623.5" ></text>
</g>
<g >
<title>__dbc_get_pp (3,764 samples, 4.09%)</title><rect x="302.6" y="661" width="48.2" height="15.0" fill="rgb(226,53,29)" rx="2" ry="2" />
<text  x="305.58" y="671.5" >__db..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (11 samples, 0.01%)</title><rect x="838.7" y="565" width="0.1" height="15.0" fill="rgb(218,121,18)" rx="2" ry="2" />
<text  x="841.65" y="575.5" ></text>
</g>
<g >
<title>CWallet::AddToSpends (5,758 samples, 6.25%)</title><rect x="867.9" y="661" width="73.7" height="15.0" fill="rgb(210,104,22)" rx="2" ry="2" />
<text  x="870.85" y="671.5" >CWallet:..</text>
</g>
<g >
<title>CHash160::Write (14 samples, 0.02%)</title><rect x="679.1" y="613" width="0.2" height="15.0" fill="rgb(217,17,2)" rx="2" ry="2" />
<text  x="682.08" y="623.5" ></text>
</g>
<g >
<title>__bam_iitem (37 samples, 0.04%)</title><rect x="155.3" y="517" width="0.4" height="15.0" fill="rgb(214,209,31)" rx="2" ry="2" />
<text  x="158.27" y="527.5" ></text>
</g>
<g >
<title>std::make_pair&lt;void* const&amp;, void*&amp;&gt; (21 samples, 0.02%)</title><rect x="681.6" y="581" width="0.3" height="15.0" fill="rgb(243,66,26)" rx="2" ry="2" />
<text  x="684.59" y="591.5" ></text>
</g>
<g >
<title>__db_lput (24 samples, 0.03%)</title><rect x="106.0" y="437" width="0.3" height="15.0" fill="rgb(251,201,34)" rx="2" ry="2" />
<text  x="109.02" y="447.5" ></text>
</g>
<g >
<title>CTxIn::Serialize&lt;CHashWriter&gt; (274 samples, 0.30%)</title><rect x="504.7" y="277" width="3.5" height="15.0" fill="rgb(227,194,27)" rx="2" ry="2" />
<text  x="507.69" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;::_Rb_tree_const_iterator (15 samples, 0.02%)</title><rect x="1023.8" y="661" width="0.2" height="15.0" fill="rgb(231,88,42)" rx="2" ry="2" />
<text  x="1026.82" y="671.5" ></text>
</g>
<g >
<title>__os_io (46 samples, 0.05%)</title><rect x="122.7" y="437" width="0.6" height="15.0" fill="rgb(233,198,6)" rx="2" ry="2" />
<text  x="125.67" y="447.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.01%)</title><rect x="161.8" y="437" width="0.1" height="15.0" fill="rgb(209,52,17)" rx="2" ry="2" />
<text  x="164.78" y="447.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, COutPoint&gt; (205 samples, 0.22%)</title><rect x="487.0" y="229" width="2.6" height="15.0" fill="rgb(210,60,15)" rx="2" ry="2" />
<text  x="490.01" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::operator-- (9 samples, 0.01%)</title><rect x="1055.6" y="597" width="0.1" height="15.0" fill="rgb(242,158,23)" rx="2" ry="2" />
<text  x="1058.62" y="607.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.01%)</title><rect x="89.1" y="261" width="0.1" height="15.0" fill="rgb(229,31,40)" rx="2" ry="2" />
<text  x="92.09" y="271.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (18 samples, 0.02%)</title><rect x="148.2" y="533" width="0.2" height="15.0" fill="rgb(208,37,8)" rx="2" ry="2" />
<text  x="151.21" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::deallocate (188 samples, 0.20%)</title><rect x="355.7" y="629" width="2.4" height="15.0" fill="rgb(254,146,49)" rx="2" ry="2" />
<text  x="358.69" y="639.5" ></text>
</g>
<g >
<title>std::less&lt;CScriptID&gt;::operator (147 samples, 0.16%)</title><rect x="689.9" y="581" width="1.8" height="15.0" fill="rgb(247,65,20)" rx="2" ry="2" />
<text  x="692.85" y="591.5" ></text>
</g>
<g >
<title>uint256::uint256 (14 samples, 0.02%)</title><rect x="1062.6" y="517" width="0.1" height="15.0" fill="rgb(244,209,9)" rx="2" ry="2" />
<text  x="1065.56" y="527.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, unsigned int&amp;&gt; (59 samples, 0.06%)</title><rect x="437.2" y="213" width="0.7" height="15.0" fill="rgb(231,121,6)" rx="2" ry="2" />
<text  x="440.18" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;COutPoint&gt;::_Rb_tree_iterator (9 samples, 0.01%)</title><rect x="931.9" y="565" width="0.1" height="15.0" fill="rgb(250,132,38)" rx="2" ry="2" />
<text  x="934.86" y="575.5" ></text>
</g>
<g >
<title>CTxOut::~CTxOut (9 samples, 0.01%)</title><rect x="1039.2" y="549" width="0.1" height="15.0" fill="rgb(250,127,31)" rx="2" ry="2" />
<text  x="1042.19" y="559.5" ></text>
</g>
<g >
<title>__lock_get (380 samples, 0.41%)</title><rect x="310.7" y="581" width="4.9" height="15.0" fill="rgb(252,67,10)" rx="2" ry="2" />
<text  x="313.71" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;char* const, unsigned long&gt; &gt;::_M_v (8 samples, 0.01%)</title><rect x="617.1" y="501" width="0.1" height="15.0" fill="rgb(231,51,15)" rx="2" ry="2" />
<text  x="620.06" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (50 samples, 0.05%)</title><rect x="555.3" y="581" width="0.6" height="15.0" fill="rgb(249,15,34)" rx="2" ry="2" />
<text  x="558.27" y="591.5" ></text>
</g>
<g >
<title>__strlen_avx2 (14 samples, 0.02%)</title><rect x="839.1" y="549" width="0.2" height="15.0" fill="rgb(246,37,50)" rx="2" ry="2" />
<text  x="842.11" y="559.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::base (10 samples, 0.01%)</title><rect x="1055.0" y="581" width="0.1" height="15.0" fill="rgb(248,189,51)" rx="2" ry="2" />
<text  x="1057.98" y="591.5" ></text>
</g>
<g >
<title>LeaveCritical (36 samples, 0.04%)</title><rect x="686.8" y="629" width="0.4" height="15.0" fill="rgb(243,46,20)" rx="2" ry="2" />
<text  x="689.78" y="639.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, interfaces::Chain::Lock*, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt; (23 samples, 0.02%)</title><rect x="1019.3" y="613" width="0.3" height="15.0" fill="rgb(230,65,31)" rx="2" ry="2" />
<text  x="1022.33" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, char*&gt; &gt;::_M_valptr (16 samples, 0.02%)</title><rect x="800.2" y="357" width="0.2" height="15.0" fill="rgb(225,70,52)" rx="2" ry="2" />
<text  x="803.18" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, CWalletTx*&gt;, std::_Select1st&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::_S_value (37 samples, 0.04%)</title><rect x="1017.0" y="613" width="0.5" height="15.0" fill="rgb(231,61,25)" rx="2" ry="2" />
<text  x="1020.00" y="623.5" ></text>
</g>
<g >
<title>_int_malloc (22 samples, 0.02%)</title><rect x="822.5" y="501" width="0.2" height="15.0" fill="rgb(234,101,51)" rx="2" ry="2" />
<text  x="825.46" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (8 samples, 0.01%)</title><rect x="1096.6" y="629" width="0.1" height="15.0" fill="rgb(243,133,8)" rx="2" ry="2" />
<text  x="1099.56" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::vector (12 samples, 0.01%)</title><rect x="485.7" y="277" width="0.1" height="15.0" fill="rgb(230,185,1)" rx="2" ry="2" />
<text  x="488.69" y="287.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.01%)</title><rect x="89.1" y="277" width="0.1" height="15.0" fill="rgb(241,2,25)" rx="2" ry="2" />
<text  x="92.08" y="287.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (9 samples, 0.01%)</title><rect x="21.2" y="741" width="0.1" height="15.0" fill="rgb(228,229,17)" rx="2" ry="2" />
<text  x="24.19" y="751.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;CTransaction const,  (352 samples, 0.38%)</title><rect x="162.5" y="661" width="4.5" height="15.0" fill="rgb(232,226,5)" rx="2" ry="2" />
<text  x="165.53" y="671.5" ></text>
</g>
<g >
<title>__dbc_iget (188 samples, 0.20%)</title><rect x="65.7" y="533" width="2.4" height="15.0" fill="rgb(241,9,37)" rx="2" ry="2" />
<text  x="68.67" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (68 samples, 0.07%)</title><rect x="631.1" y="533" width="0.8" height="15.0" fill="rgb(207,0,24)" rx="2" ry="2" />
<text  x="634.07" y="543.5" ></text>
</g>
<g >
<title>std::map&lt;CScriptID, CScript, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::operator[] (336 samples, 0.36%)</title><rect x="687.5" y="645" width="4.3" height="15.0" fill="rgb(224,30,35)" rx="2" ry="2" />
<text  x="690.48" y="655.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (13 samples, 0.01%)</title><rect x="871.0" y="549" width="0.2" height="15.0" fill="rgb(227,92,44)" rx="2" ry="2" />
<text  x="873.99" y="559.5" ></text>
</g>
<g >
<title>CScript::~CScript (19 samples, 0.02%)</title><rect x="432.7" y="357" width="0.3" height="15.0" fill="rgb(239,147,10)" rx="2" ry="2" />
<text  x="435.73" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (16 samples, 0.02%)</title><rect x="1084.6" y="517" width="0.2" height="15.0" fill="rgb(225,165,10)" rx="2" ry="2" />
<text  x="1087.60" y="527.5" ></text>
</g>
<g >
<title>GetRandBytes (399 samples, 0.43%)</title><rect x="1184.5" y="677" width="5.1" height="15.0" fill="rgb(219,122,18)" rx="2" ry="2" />
<text  x="1187.48" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::vector (60 samples, 0.07%)</title><rect x="521.9" y="437" width="0.8" height="15.0" fill="rgb(243,137,41)" rx="2" ry="2" />
<text  x="524.91" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::destroy&lt;char&gt; (583 samples, 0.63%)</title><rect x="600.4" y="565" width="7.5" height="15.0" fill="rgb(223,178,21)" rx="2" ry="2" />
<text  x="603.45" y="575.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, 28u, unsigned char&gt; (183 samples, 0.20%)</title><rect x="164.7" y="229" width="2.3" height="15.0" fill="rgb(225,148,8)" rx="2" ry="2" />
<text  x="167.69" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;uint256, std::allocator&lt;uint256&gt; &gt;::~vector (87 samples, 0.09%)</title><rect x="558.0" y="629" width="1.1" height="15.0" fill="rgb(223,54,32)" rx="2" ry="2" />
<text  x="561.02" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (8 samples, 0.01%)</title><rect x="1026.7" y="629" width="0.1" height="15.0" fill="rgb(212,45,10)" rx="2" ry="2" />
<text  x="1029.72" y="639.5" ></text>
</g>
<g >
<title>CWallet::IsCrypted (18 samples, 0.02%)</title><rect x="692.2" y="645" width="0.2" height="15.0" fill="rgb(208,18,47)" rx="2" ry="2" />
<text  x="695.21" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::end (8 samples, 0.01%)</title><rect x="826.6" y="597" width="0.1" height="15.0" fill="rgb(236,81,30)" rx="2" ry="2" />
<text  x="829.60" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::__detail::_Select1st, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h1 (18 samples, 0.02%)</title><rect x="967.0" y="581" width="0.2" height="15.0" fill="rgb(207,163,18)" rx="2" ry="2" />
<text  x="969.96" y="591.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;&amp;&gt; (1,412 samples, 1.53%)</title><rect x="408.6" y="629" width="18.1" height="15.0" fill="rgb(225,167,39)" rx="2" ry="2" />
<text  x="411.59" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::~vector (2,042 samples, 2.22%)</title><rect x="1069.2" y="677" width="26.2" height="15.0" fill="rgb(222,220,0)" rx="2" ry="2" />
<text  x="1072.22" y="687.5" >s..</text>
</g>
<g >
<title>CDBIterator::Next (56 samples, 0.06%)</title><rect x="41.7" y="661" width="0.7" height="15.0" fill="rgb(211,35,30)" rx="2" ry="2" />
<text  x="44.72" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::_M_valptr (19 samples, 0.02%)</title><rect x="904.3" y="565" width="0.2" height="15.0" fill="rgb(230,13,43)" rx="2" ry="2" />
<text  x="907.27" y="575.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned int const*, unsigned int*&gt; (9 samples, 0.01%)</title><rect x="853.1" y="517" width="0.1" height="15.0" fill="rgb(218,220,12)" rx="2" ry="2" />
<text  x="856.07" y="527.5" ></text>
</g>
<g >
<title>ShiftMessageC (10 samples, 0.01%)</title><rect x="1125.9" y="549" width="0.2" height="15.0" fill="rgb(208,64,53)" rx="2" ry="2" />
<text  x="1128.94" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;void*, CLockLocation&gt;*, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;::__normal_iterator (8 samples, 0.01%)</title><rect x="686.1" y="565" width="0.1" height="15.0" fill="rgb(223,189,29)" rx="2" ry="2" />
<text  x="689.11" y="575.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::data (16 samples, 0.02%)</title><rect x="507.0" y="101" width="0.2" height="15.0" fill="rgb(250,37,3)" rx="2" ry="2" />
<text  x="510.02" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;CTxIn const*, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt;::operator* (9 samples, 0.01%)</title><rect x="933.7" y="645" width="0.1" height="15.0" fill="rgb(237,196,30)" rx="2" ry="2" />
<text  x="936.65" y="655.5" ></text>
</g>
<g >
<title>__db_vrfy_pgset_get (81 samples, 0.09%)</title><rect x="92.8" y="485" width="1.1" height="15.0" fill="rgb(233,44,21)" rx="2" ry="2" />
<text  x="95.82" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_value (9 samples, 0.01%)</title><rect x="1158.9" y="757" width="0.1" height="15.0" fill="rgb(205,46,45)" rx="2" ry="2" />
<text  x="1161.92" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;CBlockIndex* const, CBlockIndex*&gt; &gt;::_M_valptr (11 samples, 0.01%)</title><rect x="49.9" y="613" width="0.1" height="15.0" fill="rgb(221,176,43)" rx="2" ry="2" />
<text  x="52.91" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CBlockIndex*, CBlockIndex*, std::_Identity&lt;CBlockIndex*&gt;, CBlockIndexWorkComparator, std::allocator&lt;CBlockIndex*&gt; &gt;::_S_value (12 samples, 0.01%)</title><rect x="48.4" y="613" width="0.1" height="15.0" fill="rgb(205,82,16)" rx="2" ry="2" />
<text  x="51.38" y="623.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (12 samples, 0.01%)</title><rect x="429.0" y="501" width="0.2" height="15.0" fill="rgb(229,41,39)" rx="2" ry="2" />
<text  x="432.01" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::_M_addr (28 samples, 0.03%)</title><rect x="908.8" y="517" width="0.4" height="15.0" fill="rgb(217,98,8)" rx="2" ry="2" />
<text  x="911.81" y="527.5" ></text>
</g>
<g >
<title>__lock_get (30 samples, 0.03%)</title><rect x="150.1" y="469" width="0.4" height="15.0" fill="rgb(238,20,37)" rx="2" ry="2" />
<text  x="153.08" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_allocate (8 samples, 0.01%)</title><rect x="364.2" y="437" width="0.1" height="15.0" fill="rgb(217,9,49)" rx="2" ry="2" />
<text  x="367.18" y="447.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, CScript&gt; (122 samples, 0.13%)</title><rect x="510.4" y="245" width="1.6" height="15.0" fill="rgb(236,1,14)" rx="2" ry="2" />
<text  x="513.42" y="255.5" ></text>
</g>
<g >
<title>std::__advance&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt;, long&gt; (12 samples, 0.01%)</title><rect x="1097.9" y="613" width="0.2" height="15.0" fill="rgb(212,67,1)" rx="2" ry="2" />
<text  x="1100.92" y="623.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (651 samples, 0.71%)</title><rect x="82.4" y="453" width="8.3" height="15.0" fill="rgb(234,52,43)" rx="2" ry="2" />
<text  x="85.38" y="463.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;std::pair&lt;char, uint256&gt;&amp;&gt; (27 samples, 0.03%)</title><rect x="37.0" y="645" width="0.4" height="15.0" fill="rgb(250,129,35)" rx="2" ry="2" />
<text  x="40.02" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::end (25 samples, 0.03%)</title><rect x="499.4" y="293" width="0.3" height="15.0" fill="rgb(218,15,5)" rx="2" ry="2" />
<text  x="502.37" y="303.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (9 samples, 0.01%)</title><rect x="157.9" y="549" width="0.1" height="15.0" fill="rgb(246,106,7)" rx="2" ry="2" />
<text  x="160.93" y="559.5" ></text>
</g>
<g >
<title>QuadRound (125 samples, 0.14%)</title><rect x="162.8" y="149" width="1.6" height="15.0" fill="rgb(212,59,31)" rx="2" ry="2" />
<text  x="165.82" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Rb_tree_const_iterator (9 samples, 0.01%)</title><rect x="537.1" y="565" width="0.1" height="15.0" fill="rgb(212,195,19)" rx="2" ry="2" />
<text  x="540.07" y="575.5" ></text>
</g>
<g >
<title>__db_tas_mutex_readlock (8 samples, 0.01%)</title><rect x="154.6" y="469" width="0.1" height="15.0" fill="rgb(209,23,7)" rx="2" ry="2" />
<text  x="157.56" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (293 samples, 0.32%)</title><rect x="962.7" y="581" width="3.8" height="15.0" fill="rgb(251,93,28)" rx="2" ry="2" />
<text  x="965.73" y="591.5" ></text>
</g>
<g >
<title>BlockManager::LoadBlockIndex (1,015 samples, 1.10%)</title><rect x="36.2" y="693" width="13.0" height="15.0" fill="rgb(208,60,28)" rx="2" ry="2" />
<text  x="39.16" y="703.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;unsigned char*, unsigned char*, std::allocator&lt;unsigned char&gt; &gt; (31 samples, 0.03%)</title><rect x="1097.4" y="629" width="0.4" height="15.0" fill="rgb(232,30,16)" rx="2" ry="2" />
<text  x="1100.43" y="639.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (37 samples, 0.04%)</title><rect x="459.1" y="309" width="0.5" height="15.0" fill="rgb(254,73,40)" rx="2" ry="2" />
<text  x="462.09" y="319.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter&gt; (10 samples, 0.01%)</title><rect x="489.3" y="133" width="0.2" height="15.0" fill="rgb(213,109,3)" rx="2" ry="2" />
<text  x="492.34" y="143.5" ></text>
</g>
<g >
<title>__bam_search (37 samples, 0.04%)</title><rect x="94.0" y="405" width="0.5" height="15.0" fill="rgb(227,168,15)" rx="2" ry="2" />
<text  x="97.00" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::~_Rb_tree_impl (12 samples, 0.01%)</title><rect x="1026.8" y="629" width="0.2" height="15.0" fill="rgb(230,22,14)" rx="2" ry="2" />
<text  x="1029.82" y="639.5" ></text>
</g>
<g >
<title>__db_cursor (24 samples, 0.03%)</title><rect x="81.2" y="469" width="0.3" height="15.0" fill="rgb(253,203,32)" rx="2" ry="2" />
<text  x="84.23" y="479.5" ></text>
</g>
<g >
<title>__db_pitem_nolog (11 samples, 0.01%)</title><rect x="138.2" y="485" width="0.1" height="15.0" fill="rgb(245,111,16)" rx="2" ry="2" />
<text  x="141.21" y="495.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (11 samples, 0.01%)</title><rect x="35.1" y="613" width="0.1" height="15.0" fill="rgb(241,137,30)" rx="2" ry="2" />
<text  x="38.06" y="623.5" ></text>
</g>
<g >
<title>std::fill_n&lt;unsigned char*, unsigned long, unsigned char&gt; (10 samples, 0.01%)</title><rect x="1173.5" y="757" width="0.1" height="15.0" fill="rgb(212,64,13)" rx="2" ry="2" />
<text  x="1176.48" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (9 samples, 0.01%)</title><rect x="424.2" y="501" width="0.1" height="15.0" fill="rgb(208,36,40)" rx="2" ry="2" />
<text  x="427.17" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt;::destroy&lt;std::pair&lt;void*, CLockLocation&gt; &gt; (18 samples, 0.02%)</title><rect x="687.0" y="565" width="0.2" height="15.0" fill="rgb(239,67,37)" rx="2" ry="2" />
<text  x="690.01" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char* const&amp;&gt;::_Tuple_impl (8 samples, 0.01%)</title><rect x="1090.4" y="517" width="0.1" height="15.0" fill="rgb(238,145,30)" rx="2" ry="2" />
<text  x="1093.38" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::equal_range (56 samples, 0.06%)</title><rect x="932.1" y="597" width="0.7" height="15.0" fill="rgb(222,54,20)" rx="2" ry="2" />
<text  x="935.10" y="607.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;int&amp;&gt; (50 samples, 0.05%)</title><rect x="430.9" y="405" width="0.7" height="15.0" fill="rgb(216,68,23)" rx="2" ry="2" />
<text  x="433.94" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_lower_bound (21 samples, 0.02%)</title><rect x="567.2" y="485" width="0.3" height="15.0" fill="rgb(233,206,5)" rx="2" ry="2" />
<text  x="570.24" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_node (118 samples, 0.13%)</title><rect x="418.5" y="549" width="1.6" height="15.0" fill="rgb(226,99,3)" rx="2" ry="2" />
<text  x="421.54" y="559.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Compare (13 samples, 0.01%)</title><rect x="35.0" y="629" width="0.2" height="15.0" fill="rgb(233,85,42)" rx="2" ry="2" />
<text  x="38.04" y="639.5" ></text>
</g>
<g >
<title>std::allocator&lt;CTransaction&gt;::allocator (25 samples, 0.03%)</title><rect x="1064.1" y="645" width="0.3" height="15.0" fill="rgb(218,32,26)" rx="2" ry="2" />
<text  x="1067.12" y="655.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (11 samples, 0.01%)</title><rect x="96.4" y="437" width="0.2" height="15.0" fill="rgb(205,222,10)" rx="2" ry="2" />
<text  x="99.43" y="447.5" ></text>
</g>
<g >
<title>WriteBE32 (37 samples, 0.04%)</title><rect x="1057.7" y="629" width="0.5" height="15.0" fill="rgb(209,40,0)" rx="2" ry="2" />
<text  x="1060.75" y="639.5" ></text>
</g>
<g >
<title>operator&lt; (1,276 samples, 1.38%)</title><rect x="910.9" y="565" width="16.3" height="15.0" fill="rgb(244,1,38)" rx="2" ry="2" />
<text  x="913.85" y="575.5" ></text>
</g>
<g >
<title>__bswap_64 (10 samples, 0.01%)</title><rect x="1189.3" y="549" width="0.1" height="15.0" fill="rgb(227,229,8)" rx="2" ry="2" />
<text  x="1192.32" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt;::allocate (14 samples, 0.02%)</title><rect x="813.9" y="293" width="0.2" height="15.0" fill="rgb(219,113,35)" rx="2" ry="2" />
<text  x="816.88" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;CChainState, std::default_delete&lt;CChainState&gt; &gt;::operator (10 samples, 0.01%)</title><rect x="958.8" y="629" width="0.2" height="15.0" fill="rgb(233,206,21)" rx="2" ry="2" />
<text  x="961.84" y="639.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, interfaces::(anonymous namespace)::LockImpl*, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt;::_Tuple_impl (21 samples, 0.02%)</title><rect x="953.2" y="565" width="0.3" height="15.0" fill="rgb(213,27,34)" rx="2" ry="2" />
<text  x="956.19" y="575.5" ></text>
</g>
<g >
<title>__lock_open (25 samples, 0.03%)</title><rect x="162.0" y="581" width="0.3" height="15.0" fill="rgb(221,43,13)" rx="2" ry="2" />
<text  x="165.01" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;char const*, std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt; &gt; (68 samples, 0.07%)</title><rect x="179.0" y="645" width="0.8" height="15.0" fill="rgb(225,108,21)" rx="2" ry="2" />
<text  x="181.96" y="655.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, zero_after_free_allocator&lt;char&gt; &gt; (24 samples, 0.03%)</title><rect x="182.5" y="613" width="0.3" height="15.0" fill="rgb(239,38,3)" rx="2" ry="2" />
<text  x="185.53" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;COutPoint&gt;::_M_valptr (15 samples, 0.02%)</title><rect x="1047.3" y="565" width="0.2" height="15.0" fill="rgb(213,215,53)" rx="2" ry="2" />
<text  x="1050.33" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;char* const, unsigned long&gt;, char*, unsigned long&amp;&gt; (9 samples, 0.01%)</title><rect x="571.3" y="453" width="0.1" height="15.0" fill="rgb(237,214,44)" rx="2" ry="2" />
<text  x="574.31" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_M_check_len (54 samples, 0.06%)</title><rect x="445.2" y="325" width="0.7" height="15.0" fill="rgb(205,10,16)" rx="2" ry="2" />
<text  x="448.23" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;::_Rb_tree_const_iterator (15 samples, 0.02%)</title><rect x="843.7" y="549" width="0.2" height="15.0" fill="rgb(249,116,51)" rx="2" ry="2" />
<text  x="846.70" y="559.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (36 samples, 0.04%)</title><rect x="316.7" y="549" width="0.4" height="15.0" fill="rgb(220,117,32)" rx="2" ry="2" />
<text  x="319.67" y="559.5" ></text>
</g>
<g >
<title>CWallet::ReacceptWalletTransactions (266 samples, 0.29%)</title><rect x="32.6" y="661" width="3.4" height="15.0" fill="rgb(254,98,51)" rx="2" ry="2" />
<text  x="35.62" y="671.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::begin (12 samples, 0.01%)</title><rect x="662.5" y="613" width="0.1" height="15.0" fill="rgb(243,120,49)" rx="2" ry="2" />
<text  x="665.50" y="623.5" ></text>
</g>
<g >
<title>CTransaction::ComputeHash (169 samples, 0.18%)</title><rect x="162.5" y="549" width="2.2" height="15.0" fill="rgb(246,38,54)" rx="2" ry="2" />
<text  x="165.53" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::end (62 samples, 0.07%)</title><rect x="176.5" y="661" width="0.8" height="15.0" fill="rgb(216,58,17)" rx="2" ry="2" />
<text  x="179.50" y="671.5" ></text>
</g>
<g >
<title>CScriptWitness::IsNull (55 samples, 0.06%)</title><rect x="477.0" y="389" width="0.7" height="15.0" fill="rgb(230,226,36)" rx="2" ry="2" />
<text  x="479.98" y="399.5" ></text>
</g>
<g >
<title>CDataStream::~CDataStream (449 samples, 0.49%)</title><rect x="353.1" y="693" width="5.7" height="15.0" fill="rgb(217,183,32)" rx="2" ry="2" />
<text  x="356.08" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned long const, char*&gt;, unsigned long&amp;, char*&amp;&gt; (23 samples, 0.02%)</title><rect x="1082.4" y="485" width="0.3" height="15.0" fill="rgb(248,75,36)" rx="2" ry="2" />
<text  x="1085.41" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;BerkeleyEnvironment&gt;::destroy&lt;BerkeleyEnvironment&gt; (13 samples, 0.01%)</title><rect x="162.4" y="533" width="0.1" height="15.0" fill="rgb(235,200,25)" rx="2" ry="2" />
<text  x="165.36" y="543.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (222 samples, 0.24%)</title><rect x="148.7" y="517" width="2.9" height="15.0" fill="rgb(214,196,41)" rx="2" ry="2" />
<text  x="151.73" y="527.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (18 samples, 0.02%)</title><rect x="841.1" y="581" width="0.3" height="15.0" fill="rgb(232,222,6)" rx="2" ry="2" />
<text  x="844.12" y="591.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Compare (35 samples, 0.04%)</title><rect x="1151.1" y="741" width="0.4" height="15.0" fill="rgb(218,195,40)" rx="2" ry="2" />
<text  x="1154.06" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::_M_begin (10 samples, 0.01%)</title><rect x="827.0" y="581" width="0.1" height="15.0" fill="rgb(214,130,0)" rx="2" ry="2" />
<text  x="829.96" y="591.5" ></text>
</g>
<g >
<title>CWalletTx::BindWallet (63 samples, 0.07%)</title><rect x="955.5" y="661" width="0.8" height="15.0" fill="rgb(210,18,15)" rx="2" ry="2" />
<text  x="958.54" y="671.5" ></text>
</g>
<g >
<title>std::operator== (9 samples, 0.01%)</title><rect x="836.9" y="613" width="0.1" height="15.0" fill="rgb(239,136,35)" rx="2" ry="2" />
<text  x="839.86" y="623.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, char, uint256&gt; (25 samples, 0.03%)</title><rect x="37.0" y="629" width="0.4" height="15.0" fill="rgb(235,115,27)" rx="2" ry="2" />
<text  x="40.05" y="639.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (51 samples, 0.06%)</title><rect x="529.3" y="613" width="0.6" height="15.0" fill="rgb(229,54,32)" rx="2" ry="2" />
<text  x="532.29" y="623.5" ></text>
</g>
<g >
<title>__dbc_idup (26 samples, 0.03%)</title><rect x="80.2" y="469" width="0.4" height="15.0" fill="rgb(236,13,13)" rx="2" ry="2" />
<text  x="83.23" y="479.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (9 samples, 0.01%)</title><rect x="128.7" y="453" width="0.1" height="15.0" fill="rgb(221,10,14)" rx="2" ry="2" />
<text  x="131.69" y="463.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (8 samples, 0.01%)</title><rect x="81.8" y="389" width="0.1" height="15.0" fill="rgb(234,30,17)" rx="2" ry="2" />
<text  x="84.78" y="399.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (8 samples, 0.01%)</title><rect x="109.0" y="405" width="0.1" height="15.0" fill="rgb(224,119,32)" rx="2" ry="2" />
<text  x="111.96" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl::_Vector_impl (8 samples, 0.01%)</title><rect x="1164.9" y="741" width="0.1" height="15.0" fill="rgb(209,105,2)" rx="2" ry="2" />
<text  x="1167.92" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_insert_unique&lt;COutPoint const&amp;&gt; (474 samples, 0.51%)</title><rect x="1043.9" y="645" width="6.1" height="15.0" fill="rgb(205,38,8)" rx="2" ry="2" />
<text  x="1046.92" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::vector (10 samples, 0.01%)</title><rect x="478.5" y="437" width="0.2" height="15.0" fill="rgb(245,139,9)" rx="2" ry="2" />
<text  x="481.54" y="447.5" ></text>
</g>
<g >
<title>base_blob&lt;160u&gt;::Compare (10 samples, 0.01%)</title><rect x="857.7" y="581" width="0.1" height="15.0" fill="rgb(205,64,1)" rx="2" ry="2" />
<text  x="860.66" y="591.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (38 samples, 0.04%)</title><rect x="130.3" y="437" width="0.5" height="15.0" fill="rgb(232,157,40)" rx="2" ry="2" />
<text  x="133.34" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;::deallocate (11 samples, 0.01%)</title><rect x="803.9" y="293" width="0.2" height="15.0" fill="rgb(209,131,37)" rx="2" ry="2" />
<text  x="806.95" y="303.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (13 samples, 0.01%)</title><rect x="127.0" y="421" width="0.1" height="15.0" fill="rgb(223,45,1)" rx="2" ry="2" />
<text  x="129.96" y="431.5" ></text>
</g>
<g >
<title>ser_writedata64&lt;CHashWriter&gt; (20 samples, 0.02%)</title><rect x="512.2" y="197" width="0.2" height="15.0" fill="rgb(252,106,12)" rx="2" ry="2" />
<text  x="515.17" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Rb_tree_iterator (11 samples, 0.01%)</title><rect x="546.8" y="565" width="0.1" height="15.0" fill="rgb(207,60,29)" rx="2" ry="2" />
<text  x="549.75" y="575.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (9 samples, 0.01%)</title><rect x="543.0" y="565" width="0.1" height="15.0" fill="rgb(220,146,19)" rx="2" ry="2" />
<text  x="546.02" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (48 samples, 0.05%)</title><rect x="568.3" y="453" width="0.6" height="15.0" fill="rgb(230,119,26)" rx="2" ry="2" />
<text  x="571.29" y="463.5" ></text>
</g>
<g >
<title>__GI_____strtoll_l_internal (33 samples, 0.04%)</title><rect x="532.8" y="597" width="0.4" height="15.0" fill="rgb(213,190,39)" rx="2" ry="2" />
<text  x="535.82" y="607.5" ></text>
</g>
<g >
<title>EnterCritical (533 samples, 0.58%)</title><rect x="679.7" y="613" width="6.8" height="15.0" fill="rgb(225,28,1)" rx="2" ry="2" />
<text  x="682.70" y="623.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, unsigned int, std::allocator&lt;unsigned int&gt; &gt; (180 samples, 0.20%)</title><rect x="362.9" y="501" width="2.4" height="15.0" fill="rgb(208,51,31)" rx="2" ry="2" />
<text  x="365.95" y="511.5" ></text>
</g>
<g >
<title>_mm_add_epi32 (14 samples, 0.02%)</title><rect x="163.4" y="133" width="0.2" height="15.0" fill="rgb(207,187,33)" rx="2" ry="2" />
<text  x="166.41" y="143.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;*&amp;, std::_Rb_tree_node_base*&amp;, true&gt; (16 samples, 0.02%)</title><rect x="1015.2" y="613" width="0.2" height="15.0" fill="rgb(241,2,27)" rx="2" ry="2" />
<text  x="1018.23" y="623.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;::operator (18 samples, 0.02%)</title><rect x="1006.3" y="597" width="0.3" height="15.0" fill="rgb(237,113,48)" rx="2" ry="2" />
<text  x="1009.34" y="607.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (8 samples, 0.01%)</title><rect x="504.0" y="261" width="0.1" height="15.0" fill="rgb(248,150,2)" rx="2" ry="2" />
<text  x="506.98" y="271.5" ></text>
</g>
<g >
<title>__bam_search (593 samples, 0.64%)</title><rect x="125.3" y="485" width="7.6" height="15.0" fill="rgb(217,72,4)" rx="2" ry="2" />
<text  x="128.30" y="495.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, 28u, unsigned char&gt; (94 samples, 0.10%)</title><rect x="496.4" y="133" width="1.2" height="15.0" fill="rgb(210,16,18)" rx="2" ry="2" />
<text  x="499.37" y="143.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (9 samples, 0.01%)</title><rect x="1021.6" y="501" width="0.1" height="15.0" fill="rgb(241,27,40)" rx="2" ry="2" />
<text  x="1024.59" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_key (14 samples, 0.02%)</title><rect x="983.8" y="613" width="0.2" height="15.0" fill="rgb(250,62,28)" rx="2" ry="2" />
<text  x="986.78" y="623.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CSizeComputer, CScript&gt; (140 samples, 0.15%)</title><rect x="1035.5" y="485" width="1.8" height="15.0" fill="rgb(232,20,51)" rx="2" ry="2" />
<text  x="1038.54" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (105 samples, 0.11%)</title><rect x="37.5" y="629" width="1.4" height="15.0" fill="rgb(212,214,52)" rx="2" ry="2" />
<text  x="40.53" y="639.5" ></text>
</g>
<g >
<title>base_blob&lt;160u&gt;::Compare (477 samples, 0.52%)</title><rect x="780.8" y="517" width="6.1" height="15.0" fill="rgb(238,143,9)" rx="2" ry="2" />
<text  x="783.78" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::max_size (25 samples, 0.03%)</title><rect x="590.3" y="597" width="0.3" height="15.0" fill="rgb(236,111,39)" rx="2" ry="2" />
<text  x="593.28" y="607.5" ></text>
</g>
<g >
<title>CDataStream::read (23 samples, 0.02%)</title><rect x="437.6" y="165" width="0.3" height="15.0" fill="rgb(210,56,5)" rx="2" ry="2" />
<text  x="440.57" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_ptr (207 samples, 0.22%)</title><rect x="878.1" y="501" width="2.6" height="15.0" fill="rgb(226,54,21)" rx="2" ry="2" />
<text  x="881.06" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_S_nothrow_relocate (10 samples, 0.01%)</title><rect x="466.9" y="277" width="0.2" height="15.0" fill="rgb(227,126,1)" rx="2" ry="2" />
<text  x="469.93" y="287.5" ></text>
</g>
<g >
<title>CDataStream::read (12 samples, 0.01%)</title><rect x="370.9" y="533" width="0.1" height="15.0" fill="rgb(238,186,34)" rx="2" ry="2" />
<text  x="373.86" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::allocator (16 samples, 0.02%)</title><rect x="1025.7" y="613" width="0.2" height="15.0" fill="rgb(243,35,17)" rx="2" ry="2" />
<text  x="1028.70" y="623.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_Vector_base (10 samples, 0.01%)</title><rect x="855.6" y="485" width="0.1" height="15.0" fill="rgb(248,170,4)" rx="2" ry="2" />
<text  x="858.59" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;void*, CLockLocation&gt;::~pair (22 samples, 0.02%)</title><rect x="1020.7" y="501" width="0.3" height="15.0" fill="rgb(231,157,29)" rx="2" ry="2" />
<text  x="1023.74" y="511.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8 samples, 0.01%)</title><rect x="317.0" y="533" width="0.1" height="15.0" fill="rgb(245,74,15)" rx="2" ry="2" />
<text  x="320.03" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (11 samples, 0.01%)</title><rect x="470.5" y="325" width="0.2" height="15.0" fill="rgb(244,194,33)" rx="2" ry="2" />
<text  x="473.53" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;unsigned int*, unsigned long, unsigned int&gt; (15 samples, 0.02%)</title><rect x="364.4" y="437" width="0.2" height="15.0" fill="rgb(241,107,40)" rx="2" ry="2" />
<text  x="367.42" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, unsigned long, false&gt;::_S_equals (32 samples, 0.03%)</title><rect x="1093.3" y="485" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1096.26" y="495.5" ></text>
</g>
<g >
<title>Load (8 samples, 0.01%)</title><rect x="1122.5" y="581" width="0.1" height="15.0" fill="rgb(254,8,19)" rx="2" ry="2" />
<text  x="1125.47" y="591.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.01%)</title><rect x="89.1" y="245" width="0.1" height="15.0" fill="rgb(245,77,20)" rx="2" ry="2" />
<text  x="92.12" y="255.5" ></text>
</g>
<g >
<title>_int_free (30 samples, 0.03%)</title><rect x="54.8" y="533" width="0.4" height="15.0" fill="rgb(248,209,17)" rx="2" ry="2" />
<text  x="57.84" y="543.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::size (13 samples, 0.01%)</title><rect x="507.3" y="101" width="0.2" height="15.0" fill="rgb(247,145,53)" rx="2" ry="2" />
<text  x="510.32" y="111.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CSizeComputer, uint256&gt; (50 samples, 0.05%)</title><rect x="1034.3" y="405" width="0.6" height="15.0" fill="rgb(250,65,40)" rx="2" ry="2" />
<text  x="1037.27" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (14 samples, 0.02%)</title><rect x="416.9" y="469" width="0.2" height="15.0" fill="rgb(241,213,23)" rx="2" ry="2" />
<text  x="419.93" y="479.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, prevector&lt;28u, unsigned char, unsigned int, int&gt;&amp;&gt; (221 samples, 0.24%)</title><rect x="438.8" y="213" width="2.9" height="15.0" fill="rgb(246,75,11)" rx="2" ry="2" />
<text  x="441.84" y="223.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::recursive_mutex&gt;::unlock (10 samples, 0.01%)</title><rect x="687.3" y="613" width="0.2" height="15.0" fill="rgb(224,166,36)" rx="2" ry="2" />
<text  x="690.33" y="623.5" ></text>
</g>
<g >
<title>__db_lput (12 samples, 0.01%)</title><rect x="139.2" y="469" width="0.2" height="15.0" fill="rgb(254,55,19)" rx="2" ry="2" />
<text  x="142.23" y="479.5" ></text>
</g>
<g >
<title>__db_put (355 samples, 0.39%)</title><rect x="105.7" y="485" width="4.5" height="15.0" fill="rgb(244,206,29)" rx="2" ry="2" />
<text  x="108.69" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::resize (353 samples, 0.38%)</title><rect x="452.0" y="357" width="4.5" height="15.0" fill="rgb(218,77,6)" rx="2" ry="2" />
<text  x="454.96" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (21 samples, 0.02%)</title><rect x="1105.1" y="661" width="0.2" height="15.0" fill="rgb(229,200,54)" rx="2" ry="2" />
<text  x="1108.08" y="671.5" ></text>
</g>
<g >
<title>Hash&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (221 samples, 0.24%)</title><rect x="1056.4" y="677" width="2.9" height="15.0" fill="rgb(210,1,4)" rx="2" ry="2" />
<text  x="1059.43" y="687.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl::_Vector_impl (19 samples, 0.02%)</title><rect x="475.0" y="341" width="0.3" height="15.0" fill="rgb(232,83,34)" rx="2" ry="2" />
<text  x="478.03" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_remove_bucket_begin (12 samples, 0.01%)</title><rect x="568.1" y="453" width="0.2" height="15.0" fill="rgb(246,56,20)" rx="2" ry="2" />
<text  x="571.11" y="463.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::size (10 samples, 0.01%)</title><rect x="759.7" y="421" width="0.1" height="15.0" fill="rgb(230,45,32)" rx="2" ry="2" />
<text  x="762.71" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl::_Vector_impl (16 samples, 0.02%)</title><rect x="1105.1" y="645" width="0.2" height="15.0" fill="rgb(215,57,47)" rx="2" ry="2" />
<text  x="1108.14" y="655.5" ></text>
</g>
<g >
<title>std::map&lt;uint256, CWalletTx, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::emplace&lt;uint256&amp;, CWalletTx&amp;&gt; (1,345 samples, 1.46%)</title><rect x="968.2" y="661" width="17.2" height="15.0" fill="rgb(237,117,9)" rx="2" ry="2" />
<text  x="971.19" y="671.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (43 samples, 0.05%)</title><rect x="616.2" y="485" width="0.6" height="15.0" fill="rgb(243,54,11)" rx="2" ry="2" />
<text  x="619.23" y="495.5" ></text>
</g>
<g >
<title>CLockLocation::~CLockLocation (10 samples, 0.01%)</title><rect x="949.1" y="517" width="0.1" height="15.0" fill="rgb(205,151,15)" rx="2" ry="2" />
<text  x="952.10" y="527.5" ></text>
</g>
<g >
<title>std::multimap&lt;unsigned long, char*, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::erase[abi:cxx11] (64 samples, 0.07%)</title><rect x="803.6" y="373" width="0.8" height="15.0" fill="rgb(233,86,16)" rx="2" ry="2" />
<text  x="806.60" y="383.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, CKeyID&amp;&gt; (22 samples, 0.02%)</title><rect x="362.4" y="613" width="0.3" height="15.0" fill="rgb(215,118,42)" rx="2" ry="2" />
<text  x="365.39" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::allocate (83 samples, 0.09%)</title><rect x="469.4" y="309" width="1.0" height="15.0" fill="rgb(232,179,11)" rx="2" ry="2" />
<text  x="472.36" y="319.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (312 samples, 0.34%)</title><rect x="861.7" y="549" width="4.0" height="15.0" fill="rgb(234,190,43)" rx="2" ry="2" />
<text  x="864.66" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_S_key (21 samples, 0.02%)</title><rect x="847.7" y="549" width="0.3" height="15.0" fill="rgb(243,109,46)" rx="2" ry="2" />
<text  x="850.72" y="559.5" ></text>
</g>
<g >
<title>BerkeleyBatch::SafeDbt::SafeDbt (81 samples, 0.09%)</title><rect x="169.1" y="677" width="1.0" height="15.0" fill="rgb(221,140,12)" rx="2" ry="2" />
<text  x="172.07" y="687.5" ></text>
</g>
<g >
<title>CSHA256::Finalize (39 samples, 0.04%)</title><rect x="658.4" y="629" width="0.5" height="15.0" fill="rgb(246,90,39)" rx="2" ry="2" />
<text  x="661.39" y="639.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MergingIterator::Next (13 samples, 0.01%)</title><rect x="1147.3" y="629" width="0.2" height="15.0" fill="rgb(227,191,36)" rx="2" ry="2" />
<text  x="1150.32" y="639.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;uint256*, unsigned long, uint256&gt; (52 samples, 0.06%)</title><rect x="29.9" y="629" width="0.6" height="15.0" fill="rgb(246,194,5)" rx="2" ry="2" />
<text  x="32.86" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::end (9 samples, 0.01%)</title><rect x="960.4" y="613" width="0.2" height="15.0" fill="rgb(252,123,12)" rx="2" ry="2" />
<text  x="963.44" y="623.5" ></text>
</g>
<g >
<title>operator== (11 samples, 0.01%)</title><rect x="53.1" y="485" width="0.1" height="15.0" fill="rgb(248,108,22)" rx="2" ry="2" />
<text  x="56.07" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::_M_valptr (127 samples, 0.14%)</title><rect x="895.6" y="565" width="1.6" height="15.0" fill="rgb(253,210,7)" rx="2" ry="2" />
<text  x="898.60" y="575.5" ></text>
</g>
<g >
<title>std::less&lt;uint256&gt;::operator (290 samples, 0.31%)</title><rect x="979.7" y="613" width="3.7" height="15.0" fill="rgb(250,62,5)" rx="2" ry="2" />
<text  x="982.70" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (12 samples, 0.01%)</title><rect x="569.8" y="469" width="0.2" height="15.0" fill="rgb(242,188,23)" rx="2" ry="2" />
<text  x="572.80" y="479.5" ></text>
</g>
<g >
<title>__bam_iitem (56 samples, 0.06%)</title><rect x="137.6" y="501" width="0.7" height="15.0" fill="rgb(240,9,17)" rx="2" ry="2" />
<text  x="140.63" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_begin (9 samples, 0.01%)</title><rect x="932.3" y="581" width="0.1" height="15.0" fill="rgb(209,161,19)" rx="2" ry="2" />
<text  x="935.27" y="591.5" ></text>
</g>
<g >
<title>boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt;::internal_apply_visitor_impl&lt;boost::detail::variant::invoke_visitor&lt;(anonymous namespace)::CScriptVisitor const, false&gt;, void const*&gt; (854 samples, 0.93%)</title><rect x="758.6" y="549" width="10.9" height="15.0" fill="rgb(244,175,54)" rx="2" ry="2" />
<text  x="761.56" y="559.5" ></text>
</g>
<g >
<title>ec_privkey_import_der (89 samples, 0.10%)</title><rect x="625.2" y="661" width="1.1" height="15.0" fill="rgb(237,172,44)" rx="2" ry="2" />
<text  x="628.20" y="671.5" ></text>
</g>
<g >
<title>ser_writedata8&lt;CHashWriter&gt; (10 samples, 0.01%)</title><rect x="498.8" y="277" width="0.1" height="15.0" fill="rgb(214,121,23)" rx="2" ry="2" />
<text  x="501.79" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_range_insert&lt;char const*&gt; (9,395 samples, 10.20%)</title><rect x="180.3" y="629" width="120.3" height="15.0" fill="rgb(222,221,33)" rx="2" ry="2" />
<text  x="183.28" y="639.5" >std::vector&lt;ch..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (34 samples, 0.04%)</title><rect x="1063.0" y="549" width="0.4" height="15.0" fill="rgb(243,52,47)" rx="2" ry="2" />
<text  x="1066.01" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_M_default_append (1,216 samples, 1.32%)</title><rect x="608.5" y="645" width="15.6" height="15.0" fill="rgb(223,213,37)" rx="2" ry="2" />
<text  x="611.52" y="655.5" ></text>
</g>
<g >
<title>CScript::CScript (12 samples, 0.01%)</title><rect x="432.1" y="357" width="0.1" height="15.0" fill="rgb(233,89,45)" rx="2" ry="2" />
<text  x="435.09" y="367.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (11 samples, 0.01%)</title><rect x="80.1" y="437" width="0.1" height="15.0" fill="rgb(244,124,3)" rx="2" ry="2" />
<text  x="83.05" y="447.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (19 samples, 0.02%)</title><rect x="142.3" y="533" width="0.2" height="15.0" fill="rgb(247,132,52)" rx="2" ry="2" />
<text  x="145.28" y="543.5" ></text>
</g>
<g >
<title>__memp_fget (9 samples, 0.01%)</title><rect x="147.7" y="469" width="0.1" height="15.0" fill="rgb(237,11,31)" rx="2" ry="2" />
<text  x="150.71" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (11 samples, 0.01%)</title><rect x="814.3" y="325" width="0.2" height="15.0" fill="rgb(245,97,25)" rx="2" ry="2" />
<text  x="817.32" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_Vector_impl::_Vector_impl (38 samples, 0.04%)</title><rect x="522.2" y="405" width="0.5" height="15.0" fill="rgb(217,105,52)" rx="2" ry="2" />
<text  x="525.19" y="415.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;unsigned char*, unsigned long, secure_allocator&lt;unsigned char&gt; &gt; (242 samples, 0.26%)</title><rect x="816.7" y="453" width="3.1" height="15.0" fill="rgb(217,205,13)" rx="2" ry="2" />
<text  x="819.69" y="463.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CScript&amp;&gt; (185 samples, 0.20%)</title><rect x="376.6" y="661" width="2.3" height="15.0" fill="rgb(233,19,27)" rx="2" ry="2" />
<text  x="379.58" y="671.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, COutPoint&gt; (89 samples, 0.10%)</title><rect x="504.9" y="245" width="1.2" height="15.0" fill="rgb(222,22,11)" rx="2" ry="2" />
<text  x="507.94" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;long const, CWalletTx*&gt;::pair&lt;long, CWalletTx*, true&gt; (20 samples, 0.02%)</title><rect x="1002.7" y="565" width="0.2" height="15.0" fill="rgb(253,23,44)" rx="2" ry="2" />
<text  x="1005.67" y="575.5" ></text>
</g>
<g >
<title>operator!= (20 samples, 0.02%)</title><rect x="1064.8" y="677" width="0.3" height="15.0" fill="rgb(225,48,52)" rx="2" ry="2" />
<text  x="1067.84" y="687.5" ></text>
</g>
<g >
<title>COutPoint::COutPoint (10 samples, 0.01%)</title><rect x="485.4" y="293" width="0.2" height="15.0" fill="rgb(219,83,29)" rx="2" ry="2" />
<text  x="488.44" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;uint256, std::allocator&lt;uint256&gt; &gt;::_Vector_impl::~_Vector_impl (14 samples, 0.02%)</title><rect x="559.0" y="597" width="0.1" height="15.0" fill="rgb(253,197,12)" rx="2" ry="2" />
<text  x="561.95" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;::_M_valptr (9 samples, 0.01%)</title><rect x="568.4" y="437" width="0.1" height="15.0" fill="rgb(216,70,32)" rx="2" ry="2" />
<text  x="571.38" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (18 samples, 0.02%)</title><rect x="972.3" y="485" width="0.2" height="15.0" fill="rgb(216,205,25)" rx="2" ry="2" />
<text  x="975.28" y="495.5" ></text>
</g>
<g >
<title>_int_malloc (24 samples, 0.03%)</title><rect x="419.7" y="469" width="0.4" height="15.0" fill="rgb(234,77,36)" rx="2" ry="2" />
<text  x="422.75" y="479.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (12 samples, 0.01%)</title><rect x="81.0" y="453" width="0.2" height="15.0" fill="rgb(243,158,14)" rx="2" ry="2" />
<text  x="84.00" y="463.5" ></text>
</g>
<g >
<title>QuadRound (261 samples, 0.28%)</title><rect x="1115.2" y="245" width="3.3" height="15.0" fill="rgb(233,186,40)" rx="2" ry="2" />
<text  x="1118.20" y="255.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::recursive_mutex&gt;::~unique_lock (16 samples, 0.02%)</title><rect x="687.3" y="629" width="0.2" height="15.0" fill="rgb(211,150,2)" rx="2" ry="2" />
<text  x="690.25" y="639.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;CTransaction&gt; (183 samples, 0.20%)</title><rect x="164.7" y="517" width="2.3" height="15.0" fill="rgb(245,16,31)" rx="2" ry="2" />
<text  x="167.69" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_S_key (173 samples, 0.19%)</title><rect x="907.3" y="581" width="2.2" height="15.0" fill="rgb(222,96,15)" rx="2" ry="2" />
<text  x="910.29" y="591.5" ></text>
</g>
<g >
<title>__libc_pwrite64 (53 samples, 0.06%)</title><rect x="160.5" y="501" width="0.7" height="15.0" fill="rgb(249,29,45)" rx="2" ry="2" />
<text  x="163.48" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::_Vector_impl::_Vector_impl (39 samples, 0.04%)</title><rect x="522.8" y="405" width="0.5" height="15.0" fill="rgb(228,152,6)" rx="2" ry="2" />
<text  x="525.80" y="415.5" ></text>
</g>
<g >
<title>boost::optional&lt;int&gt;::operator bool (8 samples, 0.01%)</title><rect x="32.8" y="613" width="0.1" height="15.0" fill="rgb(241,27,50)" rx="2" ry="2" />
<text  x="35.78" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::size (8 samples, 0.01%)</title><rect x="520.8" y="341" width="0.1" height="15.0" fill="rgb(241,24,12)" rx="2" ry="2" />
<text  x="523.77" y="351.5" ></text>
</g>
<g >
<title>CDataStream::SetType (31 samples, 0.03%)</title><rect x="174.3" y="677" width="0.4" height="15.0" fill="rgb(207,29,40)" rx="2" ry="2" />
<text  x="177.31" y="687.5" ></text>
</g>
<g >
<title>__memp_fget (35 samples, 0.04%)</title><rect x="93.4" y="389" width="0.4" height="15.0" fill="rgb(236,184,7)" rx="2" ry="2" />
<text  x="96.37" y="399.5" ></text>
</g>
<g >
<title>Load (8 samples, 0.01%)</title><rect x="1111.4" y="373" width="0.1" height="15.0" fill="rgb(211,162,48)" rx="2" ry="2" />
<text  x="1114.38" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_value (22 samples, 0.02%)</title><rect x="424.0" y="533" width="0.3" height="15.0" fill="rgb(241,102,42)" rx="2" ry="2" />
<text  x="427.00" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, unsigned long, false&gt;::_S_equals (32 samples, 0.03%)</title><rect x="615.2" y="469" width="0.4" height="15.0" fill="rgb(233,172,45)" rx="2" ry="2" />
<text  x="618.19" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;CKeyID, CKey, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::end (14 samples, 0.02%)</title><rect x="826.5" y="613" width="0.2" height="15.0" fill="rgb(211,197,8)" rx="2" ry="2" />
<text  x="829.52" y="623.5" ></text>
</g>
<g >
<title>CWalletTx::~CWalletTx (10 samples, 0.01%)</title><rect x="19.3" y="757" width="0.1" height="15.0" fill="rgb(229,180,48)" rx="2" ry="2" />
<text  x="22.30" y="767.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt; &gt;::allocate (18 samples, 0.02%)</title><rect x="571.1" y="453" width="0.2" height="15.0" fill="rgb(235,47,32)" rx="2" ry="2" />
<text  x="574.08" y="463.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (11 samples, 0.01%)</title><rect x="73.1" y="453" width="0.1" height="15.0" fill="rgb(239,79,47)" rx="2" ry="2" />
<text  x="76.07" y="463.5" ></text>
</g>
<g >
<title>operator== (18 samples, 0.02%)</title><rect x="1065.1" y="677" width="0.2" height="15.0" fill="rgb(220,167,51)" rx="2" ry="2" />
<text  x="1068.10" y="687.5" ></text>
</g>
<g >
<title>CDataStream::read (85 samples, 0.09%)</title><rect x="561.4" y="613" width="1.1" height="15.0" fill="rgb(212,40,34)" rx="2" ry="2" />
<text  x="564.40" y="623.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;1ul&gt;::_M_do_reset (13 samples, 0.01%)</title><rect x="956.2" y="597" width="0.1" height="15.0" fill="rgb(207,112,35)" rx="2" ry="2" />
<text  x="959.18" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_destroy_node (30 samples, 0.03%)</title><rect x="1051.4" y="597" width="0.4" height="15.0" fill="rgb(234,92,26)" rx="2" ry="2" />
<text  x="1054.39" y="607.5" ></text>
</g>
<g >
<title>__db_get (480 samples, 0.52%)</title><rect x="96.3" y="485" width="6.1" height="15.0" fill="rgb(221,85,26)" rx="2" ry="2" />
<text  x="99.29" y="495.5" ></text>
</g>
<g >
<title>CTransaction::~CTransaction (23 samples, 0.02%)</title><rect x="527.7" y="469" width="0.3" height="15.0" fill="rgb(219,10,12)" rx="2" ry="2" />
<text  x="530.68" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;char*&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (43 samples, 0.05%)</title><rect x="635.4" y="501" width="0.6" height="15.0" fill="rgb(241,50,25)" rx="2" ry="2" />
<text  x="638.44" y="511.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (19 samples, 0.02%)</title><rect x="76.4" y="373" width="0.2" height="15.0" fill="rgb(251,143,6)" rx="2" ry="2" />
<text  x="79.35" y="383.5" ></text>
</g>
<g >
<title>AssertLockHeldInternal (12 samples, 0.01%)</title><rect x="53.6" y="597" width="0.2" height="15.0" fill="rgb(236,227,23)" rx="2" ry="2" />
<text  x="56.64" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt; &gt;::allocate (48 samples, 0.05%)</title><rect x="905.6" y="565" width="0.6" height="15.0" fill="rgb(217,95,7)" rx="2" ry="2" />
<text  x="908.59" y="575.5" ></text>
</g>
<g >
<title>__db_tas_mutex_readlock (16 samples, 0.02%)</title><rect x="100.0" y="389" width="0.2" height="15.0" fill="rgb(254,217,33)" rx="2" ry="2" />
<text  x="102.98" y="399.5" ></text>
</g>
<g >
<title>__memp_bhfree (29 samples, 0.03%)</title><rect x="131.1" y="437" width="0.4" height="15.0" fill="rgb(207,210,19)" rx="2" ry="2" />
<text  x="134.12" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::pair&lt;char* const&amp;&gt; (12 samples, 0.01%)</title><rect x="634.8" y="469" width="0.2" height="15.0" fill="rgb(218,227,47)" rx="2" ry="2" />
<text  x="637.82" y="479.5" ></text>
</g>
<g >
<title>ShiftMessageB (14 samples, 0.02%)</title><rect x="1125.9" y="565" width="0.2" height="15.0" fill="rgb(254,200,12)" rx="2" ry="2" />
<text  x="1128.89" y="575.5" ></text>
</g>
<g >
<title>__db_close (130 samples, 0.14%)</title><rect x="53.8" y="597" width="1.7" height="15.0" fill="rgb(238,150,48)" rx="2" ry="2" />
<text  x="56.80" y="607.5" ></text>
</g>
<g >
<title>SerializeTransaction&lt;CSizeComputer, CTransaction&gt; (12 samples, 0.01%)</title><rect x="24.4" y="757" width="0.2" height="15.0" fill="rgb(251,144,49)" rx="2" ry="2" />
<text  x="27.41" y="767.5" ></text>
</g>
<g >
<title>std::__addressof&lt;unsigned char&gt; (22 samples, 0.02%)</title><rect x="627.1" y="629" width="0.3" height="15.0" fill="rgb(248,30,39)" rx="2" ry="2" />
<text  x="630.09" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_erase (14 samples, 0.02%)</title><rect x="1052.3" y="597" width="0.2" height="15.0" fill="rgb(227,114,54)" rx="2" ry="2" />
<text  x="1055.28" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::_M_ptr (8 samples, 0.01%)</title><rect x="930.4" y="549" width="0.1" height="15.0" fill="rgb(233,23,13)" rx="2" ry="2" />
<text  x="933.36" y="559.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, COutPoint&gt; (75 samples, 0.08%)</title><rect x="505.1" y="213" width="0.9" height="15.0" fill="rgb(245,4,0)" rx="2" ry="2" />
<text  x="508.06" y="223.5" ></text>
</g>
<g >
<title>CScript::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (207 samples, 0.22%)</title><rect x="490.1" y="181" width="2.7" height="15.0" fill="rgb(216,24,43)" rx="2" ry="2" />
<text  x="493.12" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;*&gt; (16 samples, 0.02%)</title><rect x="433.4" y="309" width="0.2" height="15.0" fill="rgb(251,69,12)" rx="2" ry="2" />
<text  x="436.39" y="319.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::begin (21 samples, 0.02%)</title><rect x="413.1" y="597" width="0.3" height="15.0" fill="rgb(206,74,27)" rx="2" ry="2" />
<text  x="416.13" y="607.5" ></text>
</g>
<g >
<title>std::map&lt;std::pair&lt;void*, void*&gt;, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::count (282 samples, 0.31%)</title><rect x="790.1" y="565" width="3.7" height="15.0" fill="rgb(222,53,36)" rx="2" ry="2" />
<text  x="793.14" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;unsigned char const*, unsigned char*, unsigned char&gt; (50 samples, 0.05%)</title><rect x="767.8" y="421" width="0.6" height="15.0" fill="rgb(243,111,2)" rx="2" ry="2" />
<text  x="770.77" y="431.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned char*, unsigned char&gt; (12 samples, 0.01%)</title><rect x="1105.4" y="661" width="0.2" height="15.0" fill="rgb(225,4,20)" rx="2" ry="2" />
<text  x="1108.44" y="671.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (27 samples, 0.03%)</title><rect x="433.2" y="325" width="0.4" height="15.0" fill="rgb(241,6,16)" rx="2" ry="2" />
<text  x="436.25" y="335.5" ></text>
</g>
<g >
<title>CTxIn::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (266 samples, 0.29%)</title><rect x="504.8" y="261" width="3.4" height="15.0" fill="rgb(224,90,1)" rx="2" ry="2" />
<text  x="507.77" y="271.5" ></text>
</g>
<g >
<title>CHash256::Write (16 samples, 0.02%)</title><rect x="510.9" y="85" width="0.2" height="15.0" fill="rgb(225,111,39)" rx="2" ry="2" />
<text  x="513.89" y="95.5" ></text>
</g>
<g >
<title>__bam_defcmp (10 samples, 0.01%)</title><rect x="112.2" y="389" width="0.2" height="15.0" fill="rgb(240,112,25)" rx="2" ry="2" />
<text  x="115.25" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (30 samples, 0.03%)</title><rect x="789.7" y="517" width="0.4" height="15.0" fill="rgb(242,127,21)" rx="2" ry="2" />
<text  x="792.73" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;CKeyID const, CKeyMetadata&gt;::pair&lt;CKeyID const&amp;&gt; (72 samples, 0.08%)</title><rect x="855.0" y="565" width="0.9" height="15.0" fill="rgb(209,27,25)" rx="2" ry="2" />
<text  x="857.99" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt; &gt;::_M_node_allocator (10 samples, 0.01%)</title><rect x="813.7" y="309" width="0.1" height="15.0" fill="rgb(230,65,16)" rx="2" ry="2" />
<text  x="816.67" y="319.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;unsigned int&amp;&gt; (24 samples, 0.03%)</title><rect x="476.6" y="405" width="0.3" height="15.0" fill="rgb(225,4,39)" rx="2" ry="2" />
<text  x="479.57" y="415.5" ></text>
</g>
<g >
<title>_mm_sha256rnds2_epu32 (46 samples, 0.05%)</title><rect x="1127.3" y="549" width="0.6" height="15.0" fill="rgb(218,108,40)" rx="2" ry="2" />
<text  x="1130.27" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_Vector_base (19 samples, 0.02%)</title><rect x="1061.8" y="501" width="0.3" height="15.0" fill="rgb(208,116,37)" rx="2" ry="2" />
<text  x="1064.83" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::emplace&lt;char*, std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;&amp;&gt; (215 samples, 0.23%)</title><rect x="805.9" y="357" width="2.7" height="15.0" fill="rgb(211,170,16)" rx="2" ry="2" />
<text  x="808.89" y="367.5" ></text>
</g>
<g >
<title>operator new (53 samples, 0.06%)</title><rect x="461.9" y="245" width="0.6" height="15.0" fill="rgb(246,107,16)" rx="2" ry="2" />
<text  x="464.87" y="255.5" ></text>
</g>
<g >
<title>__db_vrfy_ccnext (22 samples, 0.02%)</title><rect x="74.1" y="501" width="0.3" height="15.0" fill="rgb(206,192,15)" rx="2" ry="2" />
<text  x="77.08" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;::operator++ (8 samples, 0.01%)</title><rect x="804.3" y="341" width="0.1" height="15.0" fill="rgb(244,181,1)" rx="2" ry="2" />
<text  x="807.32" y="351.5" ></text>
</g>
<g >
<title>__lock_open (15 samples, 0.02%)</title><rect x="1107.4" y="613" width="0.2" height="15.0" fill="rgb(246,118,15)" rx="2" ry="2" />
<text  x="1110.42" y="623.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.02%)</title><rect x="90.3" y="245" width="0.2" height="15.0" fill="rgb(225,114,5)" rx="2" ry="2" />
<text  x="93.31" y="255.5" ></text>
</g>
<g >
<title>__db_lput (8 samples, 0.01%)</title><rect x="95.6" y="421" width="0.1" height="15.0" fill="rgb(206,192,24)" rx="2" ry="2" />
<text  x="98.59" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_S_max_size (53 samples, 0.06%)</title><rect x="467.4" y="277" width="0.7" height="15.0" fill="rgb(250,145,11)" rx="2" ry="2" />
<text  x="470.40" y="287.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (658 samples, 0.71%)</title><rect x="55.7" y="565" width="8.5" height="15.0" fill="rgb(254,104,54)" rx="2" ry="2" />
<text  x="58.75" y="575.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (16 samples, 0.02%)</title><rect x="555.7" y="565" width="0.2" height="15.0" fill="rgb(245,26,0)" rx="2" ry="2" />
<text  x="558.70" y="575.5" ></text>
</g>
<g >
<title>__os_malloc (12 samples, 0.01%)</title><rect x="64.0" y="533" width="0.1" height="15.0" fill="rgb(231,82,35)" rx="2" ry="2" />
<text  x="66.95" y="543.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (17 samples, 0.02%)</title><rect x="1189.8" y="725" width="0.2" height="15.0" fill="rgb(247,143,47)" rx="2" ry="2" />
<text  x="1192.78" y="735.5" ></text>
</g>
<g >
<title>UniqueLock&lt;AnnotatedMixin&lt;std::recursive_mutex&gt;, std::unique_lock&lt;std::recursive_mutex&gt; &gt;::UniqueLock (558 samples, 0.61%)</title><rect x="787.3" y="629" width="7.2" height="15.0" fill="rgb(212,61,20)" rx="2" ry="2" />
<text  x="790.32" y="639.5" ></text>
</g>
<g >
<title>CHashWriter::write (183 samples, 0.20%)</title><rect x="164.7" y="213" width="2.3" height="15.0" fill="rgb(218,70,14)" rx="2" ry="2" />
<text  x="167.69" y="223.5" ></text>
</g>
<g >
<title>__GI___clone (227 samples, 0.25%)</title><rect x="1144.8" y="757" width="2.9" height="15.0" fill="rgb(238,19,28)" rx="2" ry="2" />
<text  x="1147.83" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (25 samples, 0.03%)</title><rect x="611.2" y="501" width="0.3" height="15.0" fill="rgb(241,110,6)" rx="2" ry="2" />
<text  x="614.18" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node_ptr (24 samples, 0.03%)</title><rect x="809.5" y="293" width="0.3" height="15.0" fill="rgb(206,167,27)" rx="2" ry="2" />
<text  x="812.46" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::size (23 samples, 0.02%)</title><rect x="410.4" y="549" width="0.3" height="15.0" fill="rgb(246,30,41)" rx="2" ry="2" />
<text  x="413.39" y="559.5" ></text>
</g>
<g >
<title>__dbc_iget (3,478 samples, 3.77%)</title><rect x="305.8" y="645" width="44.5" height="15.0" fill="rgb(238,25,26)" rx="2" ry="2" />
<text  x="308.78" y="655.5" >__db..</text>
</g>
<g >
<title>CTransaction::Serialize&lt;CHashWriter&gt; (1,323 samples, 1.44%)</title><rect x="483.2" y="373" width="16.9" height="15.0" fill="rgb(220,218,6)" rx="2" ry="2" />
<text  x="486.17" y="383.5" ></text>
</g>
<g >
<title>Hash160&lt;prevector&lt;28u, unsigned char, unsigned int, int&gt;::const_iterator&gt; (1,297 samples, 1.41%)</title><rect x="662.8" y="629" width="16.6" height="15.0" fill="rgb(216,58,38)" rx="2" ry="2" />
<text  x="665.80" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_value (25 samples, 0.03%)</title><rect x="421.6" y="533" width="0.4" height="15.0" fill="rgb(246,58,21)" rx="2" ry="2" />
<text  x="424.64" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::destroy&lt;std::pair&lt;void*, CLockLocation&gt; &gt; (31 samples, 0.03%)</title><rect x="794.9" y="565" width="0.4" height="15.0" fill="rgb(234,74,30)" rx="2" ry="2" />
<text  x="797.94" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node_ptr (38 samples, 0.04%)</title><rect x="614.2" y="469" width="0.5" height="15.0" fill="rgb(232,191,17)" rx="2" ry="2" />
<text  x="617.22" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;::operator* (29 samples, 0.03%)</title><rect x="777.0" y="597" width="0.3" height="15.0" fill="rgb(253,180,12)" rx="2" ry="2" />
<text  x="779.97" y="607.5" ></text>
</g>
<g >
<title>std::less&lt;CKeyID&gt;::operator (528 samples, 0.57%)</title><rect x="830.0" y="565" width="6.8" height="15.0" fill="rgb(254,32,43)" rx="2" ry="2" />
<text  x="832.99" y="575.5" ></text>
</g>
<g >
<title>CSHA256::Finalize (153 samples, 0.17%)</title><rect x="1126.2" y="613" width="1.9" height="15.0" fill="rgb(232,91,10)" rx="2" ry="2" />
<text  x="1129.18" y="623.5" ></text>
</g>
<g >
<title>__db_get (48 samples, 0.05%)</title><rect x="146.7" y="549" width="0.6" height="15.0" fill="rgb(221,218,49)" rx="2" ry="2" />
<text  x="149.68" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_S_value (50 samples, 0.05%)</title><rect x="683.7" y="517" width="0.7" height="15.0" fill="rgb(214,202,32)" rx="2" ry="2" />
<text  x="686.72" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_erase_at_end (9 samples, 0.01%)</title><rect x="468.4" y="341" width="0.1" height="15.0" fill="rgb(217,13,6)" rx="2" ry="2" />
<text  x="471.36" y="351.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;unsigned char*&gt;, unsigned char*&gt; (13 samples, 0.01%)</title><rect x="1097.5" y="565" width="0.2" height="15.0" fill="rgb(243,98,30)" rx="2" ry="2" />
<text  x="1100.52" y="575.5" ></text>
</g>
<g >
<title>CHash256::Write (18 samples, 0.02%)</title><rect x="43.4" y="469" width="0.2" height="15.0" fill="rgb(236,92,24)" rx="2" ry="2" />
<text  x="46.39" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (53 samples, 0.06%)</title><rect x="1067.8" y="661" width="0.7" height="15.0" fill="rgb(239,124,14)" rx="2" ry="2" />
<text  x="1070.80" y="671.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator (14 samples, 0.02%)</title><rect x="552.2" y="565" width="0.2" height="15.0" fill="rgb(245,82,24)" rx="2" ry="2" />
<text  x="555.21" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::destroy&lt;char&gt; (112 samples, 0.12%)</title><rect x="606.5" y="533" width="1.4" height="15.0" fill="rgb(211,144,14)" rx="2" ry="2" />
<text  x="609.48" y="543.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, unsigned long, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt; &gt;::emplace&lt;char*, unsigned long&amp;&gt; (164 samples, 0.18%)</title><rect x="569.7" y="517" width="2.1" height="15.0" fill="rgb(242,41,4)" rx="2" ry="2" />
<text  x="572.69" y="527.5" ></text>
</g>
<g >
<title>boost::detail::variant::visitation_impl_invoke&lt;boost::detail::variant::invoke_visitor&lt;(anonymous namespace)::CScriptVisitor const, false&gt;, void const*, WitnessV0KeyHash, boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt;::has_fallback_type_&gt; (838 samples, 0.91%)</title><rect x="758.8" y="517" width="10.7" height="15.0" fill="rgb(228,120,4)" rx="2" ry="2" />
<text  x="761.76" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (39 samples, 0.04%)</title><rect x="415.0" y="533" width="0.5" height="15.0" fill="rgb(239,5,0)" rx="2" ry="2" />
<text  x="417.96" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (45 samples, 0.05%)</title><rect x="812.0" y="277" width="0.6" height="15.0" fill="rgb(226,223,38)" rx="2" ry="2" />
<text  x="815.01" y="287.5" ></text>
</g>
<g >
<title>CTxOut::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (169 samples, 0.18%)</title><rect x="162.5" y="373" width="2.2" height="15.0" fill="rgb(218,172,10)" rx="2" ry="2" />
<text  x="165.53" y="383.5" ></text>
</g>
<g >
<title>__gthread_recursive_mutex_unlock (9 samples, 0.01%)</title><rect x="687.3" y="581" width="0.2" height="15.0" fill="rgb(250,61,13)" rx="2" ry="2" />
<text  x="690.34" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::construct&lt;std::pair&lt;COutPoint const, uint256&gt;, std::pair&lt;COutPoint, uint256&gt; &gt; (57 samples, 0.06%)</title><rect x="904.6" y="549" width="0.7" height="15.0" fill="rgb(251,217,51)" rx="2" ry="2" />
<text  x="907.59" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (13 samples, 0.01%)</title><rect x="637.9" y="517" width="0.2" height="15.0" fill="rgb(215,116,20)" rx="2" ry="2" />
<text  x="640.92" y="527.5" ></text>
</g>
<g >
<title>CDataStream::read (10 samples, 0.01%)</title><rect x="530.4" y="549" width="0.1" height="15.0" fill="rgb(247,20,21)" rx="2" ry="2" />
<text  x="533.41" y="559.5" ></text>
</g>
<g >
<title>CPubKey::GetID (1,536 samples, 1.67%)</title><rect x="717.2" y="613" width="19.7" height="15.0" fill="rgb(237,9,12)" rx="2" ry="2" />
<text  x="720.18" y="623.5" ></text>
</g>
<g >
<title>QuadRound (194 samples, 0.21%)</title><rect x="1137.9" y="165" width="2.4" height="15.0" fill="rgb(208,85,6)" rx="2" ry="2" />
<text  x="1140.85" y="175.5" ></text>
</g>
<g >
<title>CSHA256::Write (279 samples, 0.30%)</title><rect x="1140.8" y="197" width="3.6" height="15.0" fill="rgb(250,46,35)" rx="2" ry="2" />
<text  x="1143.78" y="207.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter&gt; (17 samples, 0.02%)</title><rect x="520.0" y="325" width="0.2" height="15.0" fill="rgb(223,143,43)" rx="2" ry="2" />
<text  x="522.97" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_get_node (24 samples, 0.03%)</title><rect x="801.3" y="325" width="0.4" height="15.0" fill="rgb(238,55,13)" rx="2" ry="2" />
<text  x="804.35" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_key (39 samples, 0.04%)</title><rect x="984.4" y="629" width="0.5" height="15.0" fill="rgb(254,130,44)" rx="2" ry="2" />
<text  x="987.39" y="639.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::~_Vector_base (324 samples, 0.35%)</title><rect x="354.7" y="661" width="4.1" height="15.0" fill="rgb(210,138,8)" rx="2" ry="2" />
<text  x="357.68" y="671.5" ></text>
</g>
<g >
<title>__memp_fget (22 samples, 0.02%)</title><rect x="112.4" y="389" width="0.3" height="15.0" fill="rgb(220,126,48)" rx="2" ry="2" />
<text  x="115.39" y="399.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (36 samples, 0.04%)</title><rect x="1097.0" y="581" width="0.4" height="15.0" fill="rgb(251,6,44)" rx="2" ry="2" />
<text  x="1099.97" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;CTransaction&gt;::destroy&lt;CTransaction const&gt; (29 samples, 0.03%)</title><rect x="527.6" y="485" width="0.4" height="15.0" fill="rgb(240,143,5)" rx="2" ry="2" />
<text  x="530.60" y="495.5" ></text>
</g>
<g >
<title>LeaveCritical (58 samples, 0.06%)</title><rect x="794.6" y="613" width="0.7" height="15.0" fill="rgb(254,183,45)" rx="2" ry="2" />
<text  x="797.60" y="623.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::resize_uninitialized (45 samples, 0.05%)</title><rect x="440.9" y="165" width="0.6" height="15.0" fill="rgb(215,71,14)" rx="2" ry="2" />
<text  x="443.90" y="175.5" ></text>
</g>
<g >
<title>CTxOut::SetNull (17 samples, 0.02%)</title><rect x="494.9" y="293" width="0.2" height="15.0" fill="rgb(228,228,10)" rx="2" ry="2" />
<text  x="497.90" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::begin (8 samples, 0.01%)</title><rect x="1045.5" y="613" width="0.1" height="15.0" fill="rgb(241,132,5)" rx="2" ry="2" />
<text  x="1048.46" y="623.5" ></text>
</g>
<g >
<title>__bam_search (166 samples, 0.18%)</title><rect x="65.8" y="485" width="2.1" height="15.0" fill="rgb(238,118,37)" rx="2" ry="2" />
<text  x="68.80" y="495.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.01%)</title><rect x="770.4" y="565" width="0.2" height="15.0" fill="rgb(248,135,17)" rx="2" ry="2" />
<text  x="773.44" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::begin (13 samples, 0.01%)</title><rect x="477.3" y="357" width="0.2" height="15.0" fill="rgb(220,60,20)" rx="2" ry="2" />
<text  x="480.30" y="367.5" ></text>
</g>
<g >
<title>ChainActive (10 samples, 0.01%)</title><rect x="33.4" y="597" width="0.2" height="15.0" fill="rgb(249,115,14)" rx="2" ry="2" />
<text  x="36.45" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::_Vector_impl_data::_Vector_impl_data (13 samples, 0.01%)</title><rect x="523.0" y="389" width="0.2" height="15.0" fill="rgb(205,84,47)" rx="2" ry="2" />
<text  x="526.01" y="399.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (126 samples, 0.14%)</title><rect x="901.4" y="549" width="1.6" height="15.0" fill="rgb(205,211,13)" rx="2" ry="2" />
<text  x="904.40" y="559.5" ></text>
</g>
<g >
<title>std::tuple&lt;char*&amp;&amp;&gt;::tuple&lt;char*, true&gt; (8 samples, 0.01%)</title><rect x="636.2" y="501" width="0.1" height="15.0" fill="rgb(218,191,15)" rx="2" ry="2" />
<text  x="639.20" y="511.5" ></text>
</g>
<g >
<title>__lock_get_internal (17 samples, 0.02%)</title><rect x="104.4" y="373" width="0.3" height="15.0" fill="rgb(250,194,30)" rx="2" ry="2" />
<text  x="107.45" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;unsigned char*, unsigned long&gt; (104 samples, 0.11%)</title><rect x="463.1" y="277" width="1.3" height="15.0" fill="rgb(250,159,37)" rx="2" ry="2" />
<text  x="466.10" y="287.5" ></text>
</g>
<g >
<title>CSHA256::Write (11 samples, 0.01%)</title><rect x="502.0" y="373" width="0.1" height="15.0" fill="rgb(205,22,52)" rx="2" ry="2" />
<text  x="504.95" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_value (9 samples, 0.01%)</title><rect x="542.8" y="565" width="0.1" height="15.0" fill="rgb(212,157,39)" rx="2" ry="2" />
<text  x="545.77" y="575.5" ></text>
</g>
<g >
<title>__dbc_close (13 samples, 0.01%)</title><rect x="91.3" y="453" width="0.2" height="15.0" fill="rgb(226,143,37)" rx="2" ry="2" />
<text  x="94.31" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_addr (30 samples, 0.03%)</title><rect x="937.5" y="533" width="0.4" height="15.0" fill="rgb(240,158,13)" rx="2" ry="2" />
<text  x="940.51" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;CChainState, std::default_delete&lt;CChainState&gt; &gt;::get (8 samples, 0.01%)</title><rect x="51.1" y="581" width="0.1" height="15.0" fill="rgb(205,83,32)" rx="2" ry="2" />
<text  x="54.08" y="591.5" ></text>
</g>
<g >
<title>CTransaction::Serialize&lt;CHashWriter&gt; (361 samples, 0.39%)</title><rect x="1114.6" y="421" width="4.6" height="15.0" fill="rgb(243,115,19)" rx="2" ry="2" />
<text  x="1117.57" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;::_M_ptr (30 samples, 0.03%)</title><rect x="791.6" y="469" width="0.4" height="15.0" fill="rgb(236,64,7)" rx="2" ry="2" />
<text  x="794.59" y="479.5" ></text>
</g>
<g >
<title>Arena::alloc (1,249 samples, 1.36%)</title><rect x="798.7" y="389" width="16.0" height="15.0" fill="rgb(219,223,34)" rx="2" ry="2" />
<text  x="801.75" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::destroy&lt;char&gt; (31 samples, 0.03%)</title><rect x="375.6" y="533" width="0.4" height="15.0" fill="rgb(212,196,47)" rx="2" ry="2" />
<text  x="378.63" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;CTransaction&gt;::construct&lt;CTransaction const, deserialize_type const&amp;, CDataStream&amp;&gt; (901 samples, 0.98%)</title><rect x="1107.7" y="533" width="11.5" height="15.0" fill="rgb(207,128,14)" rx="2" ry="2" />
<text  x="1110.65" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_put_node (15 samples, 0.02%)</title><rect x="803.9" y="309" width="0.2" height="15.0" fill="rgb(219,117,12)" rx="2" ry="2" />
<text  x="806.89" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (26 samples, 0.03%)</title><rect x="471.2" y="261" width="0.4" height="15.0" fill="rgb(214,196,54)" rx="2" ry="2" />
<text  x="474.23" y="271.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (14 samples, 0.02%)</title><rect x="120.6" y="453" width="0.2" height="15.0" fill="rgb(212,188,23)" rx="2" ry="2" />
<text  x="123.62" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::allocate (13 samples, 0.01%)</title><rect x="634.5" y="501" width="0.2" height="15.0" fill="rgb(236,123,11)" rx="2" ry="2" />
<text  x="637.53" y="511.5" ></text>
</g>
<g >
<title>QuadRound (316 samples, 0.34%)</title><rect x="1132.7" y="661" width="4.0" height="15.0" fill="rgb(239,0,15)" rx="2" ry="2" />
<text  x="1135.66" y="671.5" ></text>
</g>
<g >
<title>CHash256::Write (183 samples, 0.20%)</title><rect x="164.7" y="197" width="2.3" height="15.0" fill="rgb(228,211,39)" rx="2" ry="2" />
<text  x="167.69" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (22 samples, 0.02%)</title><rect x="1091.5" y="501" width="0.3" height="15.0" fill="rgb(230,148,0)" rx="2" ry="2" />
<text  x="1094.53" y="511.5" ></text>
</g>
<g >
<title>std::tuple&lt;char* const&amp;&gt;::tuple&lt;void, true&gt; (10 samples, 0.01%)</title><rect x="1090.4" y="533" width="0.1" height="15.0" fill="rgb(205,213,11)" rx="2" ry="2" />
<text  x="1093.35" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;void*, CLockLocation&gt; &gt; (82 samples, 0.09%)</title><rect x="949.6" y="517" width="1.0" height="15.0" fill="rgb(227,72,50)" rx="2" ry="2" />
<text  x="952.59" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (10 samples, 0.01%)</title><rect x="547.2" y="533" width="0.1" height="15.0" fill="rgb(219,97,30)" rx="2" ry="2" />
<text  x="550.17" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (10 samples, 0.01%)</title><rect x="563.3" y="645" width="0.1" height="15.0" fill="rgb(253,9,1)" rx="2" ry="2" />
<text  x="566.28" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::__detail::_Select1st, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (31 samples, 0.03%)</title><rect x="962.2" y="581" width="0.4" height="15.0" fill="rgb(222,43,6)" rx="2" ry="2" />
<text  x="965.25" y="591.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Unserialize&lt;CDataStream&gt; (1,204 samples, 1.31%)</title><rect x="592.8" y="645" width="15.4" height="15.0" fill="rgb(212,48,14)" rx="2" ry="2" />
<text  x="595.75" y="655.5" ></text>
</g>
<g >
<title>CTxOut::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (227 samples, 0.25%)</title><rect x="495.7" y="261" width="2.9" height="15.0" fill="rgb(229,181,9)" rx="2" ry="2" />
<text  x="498.73" y="271.5" ></text>
</g>
<g >
<title>Serialize&lt;CSizeComputer, CTxIn&gt; (382 samples, 0.41%)</title><rect x="1032.9" y="533" width="4.8" height="15.0" fill="rgb(209,121,2)" rx="2" ry="2" />
<text  x="1035.85" y="543.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (29 samples, 0.03%)</title><rect x="327.7" y="549" width="0.4" height="15.0" fill="rgb(206,25,27)" rx="2" ry="2" />
<text  x="330.72" y="559.5" ></text>
</g>
<g >
<title>__memp_fget (36 samples, 0.04%)</title><rect x="135.3" y="453" width="0.4" height="15.0" fill="rgb(240,50,49)" rx="2" ry="2" />
<text  x="138.27" y="463.5" ></text>
</g>
<g >
<title>__db_get (254 samples, 0.28%)</title><rect x="102.4" y="485" width="3.3" height="15.0" fill="rgb(210,185,3)" rx="2" ry="2" />
<text  x="105.44" y="495.5" ></text>
</g>
<g >
<title>__env_alloc (21 samples, 0.02%)</title><rect x="162.1" y="565" width="0.2" height="15.0" fill="rgb(251,107,50)" rx="2" ry="2" />
<text  x="165.05" y="575.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (11 samples, 0.01%)</title><rect x="133.9" y="517" width="0.1" height="15.0" fill="rgb(213,31,45)" rx="2" ry="2" />
<text  x="136.89" y="527.5" ></text>
</g>
<g >
<title>__bam_get_root (34 samples, 0.04%)</title><rect x="103.9" y="405" width="0.5" height="15.0" fill="rgb(248,209,43)" rx="2" ry="2" />
<text  x="106.92" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator++ (44 samples, 0.05%)</title><rect x="547.9" y="581" width="0.6" height="15.0" fill="rgb(223,1,40)" rx="2" ry="2" />
<text  x="550.90" y="591.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (14 samples, 0.02%)</title><rect x="90.5" y="389" width="0.2" height="15.0" fill="rgb(230,66,52)" rx="2" ry="2" />
<text  x="93.54" y="399.5" ></text>
</g>
<g >
<title>std::make_shared&lt;CTransaction const, deserialize_type const&amp;, CDataStream&amp;&gt; (352 samples, 0.38%)</title><rect x="162.5" y="709" width="4.5" height="15.0" fill="rgb(214,213,21)" rx="2" ry="2" />
<text  x="165.53" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (76 samples, 0.08%)</title><rect x="419.1" y="517" width="1.0" height="15.0" fill="rgb(219,124,7)" rx="2" ry="2" />
<text  x="422.08" y="527.5" ></text>
</g>
<g >
<title>std::_Construct&lt;uint256&gt; (40 samples, 0.04%)</title><rect x="30.0" y="581" width="0.5" height="15.0" fill="rgb(253,224,1)" rx="2" ry="2" />
<text  x="32.97" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::clear (9 samples, 0.01%)</title><rect x="478.3" y="405" width="0.1" height="15.0" fill="rgb(214,126,47)" rx="2" ry="2" />
<text  x="481.29" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::vector&lt;char const*, void&gt; (54 samples, 0.06%)</title><rect x="36.3" y="629" width="0.7" height="15.0" fill="rgb(240,217,15)" rx="2" ry="2" />
<text  x="39.30" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::_M_valptr (21 samples, 0.02%)</title><rect x="927.8" y="549" width="0.3" height="15.0" fill="rgb(237,15,47)" rx="2" ry="2" />
<text  x="930.84" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;CTransaction&gt;::construct&lt;CTransaction const, deserialize_type const&amp;, CDataStream&amp;&gt; (550 samples, 0.60%)</title><rect x="1137.3" y="613" width="7.1" height="15.0" fill="rgb(224,158,0)" rx="2" ry="2" />
<text  x="1140.31" y="623.5" ></text>
</g>
<g >
<title>EnterCritical (530 samples, 0.58%)</title><rect x="787.5" y="597" width="6.8" height="15.0" fill="rgb(224,52,41)" rx="2" ry="2" />
<text  x="790.48" y="607.5" ></text>
</g>
<g >
<title>CTransaction::Serialize&lt;CSizeComputer&gt; (1,002 samples, 1.09%)</title><rect x="1029.9" y="613" width="12.8" height="15.0" fill="rgb(221,94,7)" rx="2" ry="2" />
<text  x="1032.90" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;interfaces::Chain::Lock, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt;::_M_ptr (12 samples, 0.01%)</title><rect x="1169.4" y="757" width="0.1" height="15.0" fill="rgb(239,37,26)" rx="2" ry="2" />
<text  x="1172.37" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_M_check_len (31 samples, 0.03%)</title><rect x="589.7" y="597" width="0.4" height="15.0" fill="rgb(231,148,36)" rx="2" ry="2" />
<text  x="592.67" y="607.5" ></text>
</g>
<g >
<title>__bam_get_root (18 samples, 0.02%)</title><rect x="107.4" y="405" width="0.2" height="15.0" fill="rgb(230,185,21)" rx="2" ry="2" />
<text  x="110.41" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_right (15 samples, 0.02%)</title><rect x="938.3" y="597" width="0.2" height="15.0" fill="rgb(208,205,12)" rx="2" ry="2" />
<text  x="941.34" y="607.5" ></text>
</g>
<g >
<title>__db_cursor_int (115 samples, 0.12%)</title><rect x="72.6" y="501" width="1.5" height="15.0" fill="rgb(236,203,4)" rx="2" ry="2" />
<text  x="75.61" y="511.5" ></text>
</g>
<g >
<title>__dbc_iput (252 samples, 0.27%)</title><rect x="68.8" y="533" width="3.3" height="15.0" fill="rgb(209,166,36)" rx="2" ry="2" />
<text  x="71.85" y="543.5" ></text>
</g>
<g >
<title>CScript::Serialize&lt;CHashWriter&gt; (169 samples, 0.18%)</title><rect x="162.5" y="309" width="2.2" height="15.0" fill="rgb(240,5,53)" rx="2" ry="2" />
<text  x="165.53" y="319.5" ></text>
</g>
<g >
<title>__db_vrfy_pgset_inc (8 samples, 0.01%)</title><rect x="124.1" y="517" width="0.1" height="15.0" fill="rgb(222,31,34)" rx="2" ry="2" />
<text  x="127.13" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree (34 samples, 0.04%)</title><rect x="1024.1" y="645" width="0.5" height="15.0" fill="rgb(242,74,29)" rx="2" ry="2" />
<text  x="1027.14" y="655.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;interfaces::Chain::Lock&gt;&gt; (8 samples, 0.01%)</title><rect x="1022.0" y="597" width="0.1" height="15.0" fill="rgb(235,214,19)" rx="2" ry="2" />
<text  x="1025.04" y="607.5" ></text>
</g>
<g >
<title>__dbc_get (35 samples, 0.04%)</title><rect x="303.8" y="645" width="0.5" height="15.0" fill="rgb(239,73,4)" rx="2" ry="2" />
<text  x="306.81" y="655.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;unsigned int*, unsigned long&gt; (8 samples, 0.01%)</title><rect x="364.5" y="405" width="0.1" height="15.0" fill="rgb(225,21,42)" rx="2" ry="2" />
<text  x="367.51" y="415.5" ></text>
</g>
<g >
<title>ReadKeyValue (65 samples, 0.07%)</title><rect x="21.3" y="757" width="0.8" height="15.0" fill="rgb(251,125,45)" rx="2" ry="2" />
<text  x="24.31" y="767.5" ></text>
</g>
<g >
<title>CWallet::Verify (10 samples, 0.01%)</title><rect x="1144.7" y="709" width="0.1" height="15.0" fill="rgb(247,138,24)" rx="2" ry="2" />
<text  x="1147.70" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt;::__normal_iterator (8 samples, 0.01%)</title><rect x="694.1" y="533" width="0.1" height="15.0" fill="rgb(207,50,7)" rx="2" ry="2" />
<text  x="697.05" y="543.5" ></text>
</g>
<g >
<title>ser_writedata8&lt;CHashWriter&gt; (31 samples, 0.03%)</title><rect x="493.5" y="277" width="0.4" height="15.0" fill="rgb(218,191,51)" rx="2" ry="2" />
<text  x="496.51" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;CTxIn*, CTxIn*, std::allocator&lt;CTxIn&gt; &gt; (31 samples, 0.03%)</title><rect x="444.8" y="325" width="0.4" height="15.0" fill="rgb(225,136,10)" rx="2" ry="2" />
<text  x="447.84" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::operator++ (15 samples, 0.02%)</title><rect x="764.2" y="421" width="0.2" height="15.0" fill="rgb(208,86,25)" rx="2" ry="2" />
<text  x="767.18" y="431.5" ></text>
</g>
<g >
<title>_start (433 samples, 0.47%)</title><rect x="1184.5" y="757" width="5.5" height="15.0" fill="rgb(248,63,8)" rx="2" ry="2" />
<text  x="1187.45" y="767.5" ></text>
</g>
<g >
<title>__lock_get (18 samples, 0.02%)</title><rect x="139.8" y="453" width="0.2" height="15.0" fill="rgb(231,194,42)" rx="2" ry="2" />
<text  x="142.81" y="463.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt; &gt; (183 samples, 0.20%)</title><rect x="164.7" y="277" width="2.3" height="15.0" fill="rgb(228,50,54)" rx="2" ry="2" />
<text  x="167.69" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, interfaces::(anonymous namespace)::LockImpl*, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt;::_M_head (8 samples, 0.01%)</title><rect x="955.4" y="533" width="0.1" height="15.0" fill="rgb(229,217,41)" rx="2" ry="2" />
<text  x="958.43" y="543.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CScript&gt; (279 samples, 0.30%)</title><rect x="1140.8" y="341" width="3.6" height="15.0" fill="rgb(236,43,34)" rx="2" ry="2" />
<text  x="1143.78" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (16 samples, 0.02%)</title><rect x="946.6" y="485" width="0.2" height="15.0" fill="rgb(236,155,29)" rx="2" ry="2" />
<text  x="949.56" y="495.5" ></text>
</g>
<g >
<title>std::__distance&lt;unsigned char const*&gt; (8 samples, 0.01%)</title><rect x="1102.8" y="613" width="0.1" height="15.0" fill="rgb(250,64,31)" rx="2" ry="2" />
<text  x="1105.80" y="623.5" ></text>
</g>
<g >
<title>__bam_search (33 samples, 0.04%)</title><rect x="95.7" y="405" width="0.4" height="15.0" fill="rgb(233,28,11)" rx="2" ry="2" />
<text  x="98.73" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_drop_node (58 samples, 0.06%)</title><rect x="1051.3" y="613" width="0.8" height="15.0" fill="rgb(215,192,46)" rx="2" ry="2" />
<text  x="1054.32" y="623.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (12 samples, 0.01%)</title><rect x="619.7" y="565" width="0.1" height="15.0" fill="rgb(246,228,9)" rx="2" ry="2" />
<text  x="622.68" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (18 samples, 0.02%)</title><rect x="518.9" y="293" width="0.2" height="15.0" fill="rgb(212,168,34)" rx="2" ry="2" />
<text  x="521.91" y="303.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (11 samples, 0.01%)</title><rect x="467.9" y="261" width="0.2" height="15.0" fill="rgb(219,101,38)" rx="2" ry="2" />
<text  x="470.94" y="271.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (23 samples, 0.02%)</title><rect x="118.5" y="469" width="0.3" height="15.0" fill="rgb(238,202,4)" rx="2" ry="2" />
<text  x="121.47" y="479.5" ></text>
</g>
<g >
<title>LockedPoolManager::Instance (37 samples, 0.04%)</title><rect x="816.0" y="405" width="0.5" height="15.0" fill="rgb(231,177,18)" rx="2" ry="2" />
<text  x="819.05" y="415.5" ></text>
</g>
<g >
<title>local_Rb_tree_increment (57 samples, 0.06%)</title><rect x="35.3" y="613" width="0.7" height="15.0" fill="rgb(213,164,32)" rx="2" ry="2" />
<text  x="38.27" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_erase_aux (48 samples, 0.05%)</title><rect x="803.7" y="341" width="0.6" height="15.0" fill="rgb(252,196,49)" rx="2" ry="2" />
<text  x="806.66" y="351.5" ></text>
</g>
<g >
<title>operator- (18 samples, 0.02%)</title><rect x="761.6" y="437" width="0.2" height="15.0" fill="rgb(252,94,21)" rx="2" ry="2" />
<text  x="764.56" y="447.5" ></text>
</g>
<g >
<title>CWallet::SyncMetaData (1,784 samples, 1.94%)</title><rect x="868.7" y="629" width="22.9" height="15.0" fill="rgb(210,91,11)" rx="2" ry="2" />
<text  x="871.73" y="639.5" >C..</text>
</g>
<g >
<title>std::__distance&lt;char const*&gt; (15 samples, 0.02%)</title><rect x="540.8" y="597" width="0.1" height="15.0" fill="rgb(229,23,19)" rx="2" ry="2" />
<text  x="543.76" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_get_insert_equal_pos (22 samples, 0.02%)</title><rect x="1083.2" y="533" width="0.3" height="15.0" fill="rgb(246,123,39)" rx="2" ry="2" />
<text  x="1086.18" y="543.5" ></text>
</g>
<g >
<title>std::copy&lt;unsigned char const*, unsigned char*&gt; (28 samples, 0.03%)</title><rect x="1100.6" y="581" width="0.3" height="15.0" fill="rgb(222,159,46)" rx="2" ry="2" />
<text  x="1103.57" y="591.5" ></text>
</g>
<g >
<title>QuadRound (138 samples, 0.15%)</title><rect x="165.0" y="149" width="1.7" height="15.0" fill="rgb(217,80,21)" rx="2" ry="2" />
<text  x="167.96" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::~vector (22 samples, 0.02%)</title><rect x="485.9" y="277" width="0.3" height="15.0" fill="rgb(205,67,22)" rx="2" ry="2" />
<text  x="488.93" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;COutPoint&gt;::_Rb_tree_iterator (13 samples, 0.01%)</title><rect x="1045.6" y="613" width="0.1" height="15.0" fill="rgb(215,180,50)" rx="2" ry="2" />
<text  x="1048.57" y="623.5" ></text>
</g>
<g >
<title>std::make_pair&lt;void*&amp;, CLockLocation const&amp;&gt; (50 samples, 0.05%)</title><rect x="681.9" y="581" width="0.6" height="15.0" fill="rgb(219,150,45)" rx="2" ry="2" />
<text  x="684.86" y="591.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (235 samples, 0.26%)</title><rect x="68.9" y="517" width="3.0" height="15.0" fill="rgb(224,223,54)" rx="2" ry="2" />
<text  x="71.87" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::begin (9 samples, 0.01%)</title><rect x="961.2" y="613" width="0.1" height="15.0" fill="rgb(218,213,1)" rx="2" ry="2" />
<text  x="964.21" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (12 samples, 0.01%)</title><rect x="412.6" y="565" width="0.1" height="15.0" fill="rgb(238,204,33)" rx="2" ry="2" />
<text  x="415.56" y="575.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;CScript&amp;&gt; (186 samples, 0.20%)</title><rect x="376.6" y="677" width="2.3" height="15.0" fill="rgb(224,223,43)" rx="2" ry="2" />
<text  x="379.56" y="687.5" ></text>
</g>
<g >
<title>Serialize&lt;CSizeComputer, CTxOut, std::allocator&lt;CTxOut&gt; &gt; (298 samples, 0.32%)</title><rect x="1038.8" y="565" width="3.8" height="15.0" fill="rgb(236,193,43)" rx="2" ry="2" />
<text  x="1041.81" y="575.5" ></text>
</g>
<g >
<title>__libc_pwrite64 (43 samples, 0.05%)</title><rect x="122.7" y="421" width="0.6" height="15.0" fill="rgb(243,152,47)" rx="2" ry="2" />
<text  x="125.71" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_M_lower_bound (679 samples, 0.74%)</title><rect x="778.2" y="565" width="8.7" height="15.0" fill="rgb(216,2,17)" rx="2" ry="2" />
<text  x="781.19" y="575.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTxIn&gt; (544 samples, 0.59%)</title><rect x="486.5" y="293" width="6.9" height="15.0" fill="rgb(240,220,30)" rx="2" ry="2" />
<text  x="489.46" y="303.5" ></text>
</g>
<g >
<title>__lock_get_internal (85 samples, 0.09%)</title><rect x="83.9" y="373" width="1.0" height="15.0" fill="rgb(211,120,52)" rx="2" ry="2" />
<text  x="86.86" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::operator= (130 samples, 0.14%)</title><rect x="852.2" y="629" width="1.7" height="15.0" fill="rgb(251,112,38)" rx="2" ry="2" />
<text  x="855.20" y="639.5" ></text>
</g>
<g >
<title>__bam_cmp (31 samples, 0.03%)</title><rect x="153.1" y="485" width="0.4" height="15.0" fill="rgb(252,62,9)" rx="2" ry="2" />
<text  x="156.06" y="495.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (8 samples, 0.01%)</title><rect x="147.4" y="517" width="0.1" height="15.0" fill="rgb(234,49,15)" rx="2" ry="2" />
<text  x="150.36" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::max_size (10 samples, 0.01%)</title><rect x="1003.5" y="565" width="0.1" height="15.0" fill="rgb(235,97,30)" rx="2" ry="2" />
<text  x="1006.48" y="575.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, CChainState*, std::default_delete&lt;CChainState&gt; &gt; (25 samples, 0.03%)</title><rect x="959.6" y="565" width="0.3" height="15.0" fill="rgb(239,227,22)" rx="2" ry="2" />
<text  x="962.58" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (49 samples, 0.05%)</title><rect x="546.9" y="581" width="0.6" height="15.0" fill="rgb(206,202,19)" rx="2" ry="2" />
<text  x="549.89" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::begin (21 samples, 0.02%)</title><rect x="1099.0" y="661" width="0.3" height="15.0" fill="rgb(239,74,39)" rx="2" ry="2" />
<text  x="1102.03" y="671.5" ></text>
</g>
<g >
<title>[unknown] (22 samples, 0.02%)</title><rect x="90.2" y="261" width="0.3" height="15.0" fill="rgb(206,89,20)" rx="2" ry="2" />
<text  x="93.22" y="271.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (8 samples, 0.01%)</title><rect x="68.3" y="501" width="0.1" height="15.0" fill="rgb(251,122,46)" rx="2" ry="2" />
<text  x="71.28" y="511.5" ></text>
</g>
<g >
<title>SerializeHash&lt;CTransaction&gt; (630 samples, 0.68%)</title><rect x="1111.1" y="469" width="8.1" height="15.0" fill="rgb(234,18,12)" rx="2" ry="2" />
<text  x="1114.12" y="479.5" ></text>
</g>
<g >
<title>ReadOrderPos (11 samples, 0.01%)</title><rect x="22.1" y="757" width="0.2" height="15.0" fill="rgb(248,28,44)" rx="2" ry="2" />
<text  x="25.14" y="767.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;interfaces::(anonymous namespace)::LockImpl, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt;::_M_deleter (26 samples, 0.03%)</title><rect x="954.7" y="597" width="0.3" height="15.0" fill="rgb(237,171,29)" rx="2" ry="2" />
<text  x="957.69" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;CKeyID const, CKey&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;CKeyID&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (1,920 samples, 2.08%)</title><rect x="797.0" y="565" width="24.6" height="15.0" fill="rgb(207,215,45)" rx="2" ry="2" />
<text  x="800.04" y="575.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::construct&lt;std::pair&lt;void*, CLockLocation&gt;, std::pair&lt;void*, CLockLocation&gt; &gt; (10 samples, 0.01%)</title><rect x="794.1" y="533" width="0.1" height="15.0" fill="rgb(212,49,44)" rx="2" ry="2" />
<text  x="797.07" y="543.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter&gt; (23 samples, 0.02%)</title><rect x="512.1" y="213" width="0.3" height="15.0" fill="rgb(225,87,18)" rx="2" ry="2" />
<text  x="515.13" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::end (11 samples, 0.01%)</title><rect x="1053.1" y="645" width="0.2" height="15.0" fill="rgb(213,6,17)" rx="2" ry="2" />
<text  x="1056.15" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt;::construct&lt;std::pair&lt;void*, CLockLocation&gt;, std::pair&lt;void*, CLockLocation&gt; &gt; (52 samples, 0.06%)</title><rect x="949.9" y="485" width="0.6" height="15.0" fill="rgb(234,164,13)" rx="2" ry="2" />
<text  x="952.88" y="495.5" ></text>
</g>
<g >
<title>__memp_pgread (45 samples, 0.05%)</title><rect x="328.1" y="581" width="0.6" height="15.0" fill="rgb(242,75,0)" rx="2" ry="2" />
<text  x="331.09" y="591.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (18 samples, 0.02%)</title><rect x="115.0" y="405" width="0.2" height="15.0" fill="rgb(244,182,0)" rx="2" ry="2" />
<text  x="117.95" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_value (27 samples, 0.03%)</title><rect x="984.5" y="613" width="0.3" height="15.0" fill="rgb(208,80,18)" rx="2" ry="2" />
<text  x="987.47" y="623.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned int const*, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt; &gt;, unsigned int*, unsigned int&gt; (42 samples, 0.05%)</title><rect x="852.9" y="597" width="0.5" height="15.0" fill="rgb(243,194,14)" rx="2" ry="2" />
<text  x="855.90" y="607.5" ></text>
</g>
<g >
<title>secp256k1_scalar_set_b32 (8 samples, 0.01%)</title><rect x="626.2" y="629" width="0.1" height="15.0" fill="rgb(231,84,38)" rx="2" ry="2" />
<text  x="629.24" y="639.5" ></text>
</g>
<g >
<title>QuadRound (117 samples, 0.13%)</title><rect x="1124.4" y="565" width="1.5" height="15.0" fill="rgb(217,70,44)" rx="2" ry="2" />
<text  x="1127.39" y="575.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt; &gt;::erase (255 samples, 0.28%)</title><rect x="612.5" y="549" width="3.3" height="15.0" fill="rgb(236,9,27)" rx="2" ry="2" />
<text  x="615.50" y="559.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (21 samples, 0.02%)</title><rect x="109.1" y="405" width="0.2" height="15.0" fill="rgb(221,210,4)" rx="2" ry="2" />
<text  x="112.06" y="415.5" ></text>
</g>
<g >
<title>CHash256::Write (13 samples, 0.01%)</title><rect x="488.4" y="85" width="0.1" height="15.0" fill="rgb(224,84,49)" rx="2" ry="2" />
<text  x="491.38" y="95.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (352 samples, 0.38%)</title><rect x="162.5" y="645" width="4.5" height="15.0" fill="rgb(220,1,19)" rx="2" ry="2" />
<text  x="165.53" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::end (13 samples, 0.01%)</title><rect x="542.4" y="613" width="0.2" height="15.0" fill="rgb(209,191,7)" rx="2" ry="2" />
<text  x="545.41" y="623.5" ></text>
</g>
<g >
<title>__db_get (81 samples, 0.09%)</title><rect x="92.8" y="469" width="1.1" height="15.0" fill="rgb(247,56,19)" rx="2" ry="2" />
<text  x="95.82" y="479.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter&gt; (18 samples, 0.02%)</title><rect x="499.9" y="325" width="0.2" height="15.0" fill="rgb(208,55,32)" rx="2" ry="2" />
<text  x="502.88" y="335.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; (502 samples, 0.54%)</title><rect x="513.4" y="341" width="6.4" height="15.0" fill="rgb(216,219,21)" rx="2" ry="2" />
<text  x="516.36" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;interfaces::Chain::Lock, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt;::operator (10 samples, 0.01%)</title><rect x="1018.7" y="661" width="0.1" height="15.0" fill="rgb(205,145,16)" rx="2" ry="2" />
<text  x="1021.70" y="671.5" ></text>
</g>
<g >
<title>__dbc_iput (257 samples, 0.28%)</title><rect x="152.5" y="549" width="3.3" height="15.0" fill="rgb(220,212,28)" rx="2" ry="2" />
<text  x="155.54" y="559.5" ></text>
</g>
<g >
<title>std::operator!= (11 samples, 0.01%)</title><rect x="815.9" y="389" width="0.1" height="15.0" fill="rgb(234,42,23)" rx="2" ry="2" />
<text  x="818.91" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::~vector (413 samples, 0.45%)</title><rect x="353.5" y="677" width="5.3" height="15.0" fill="rgb(212,137,47)" rx="2" ry="2" />
<text  x="356.54" y="687.5" ></text>
</g>
<g >
<title>__lock_get_internal (18 samples, 0.02%)</title><rect x="139.8" y="437" width="0.2" height="15.0" fill="rgb(216,38,21)" rx="2" ry="2" />
<text  x="142.81" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;uint256 const, CWalletTx&gt;, uint256&amp;, CWalletTx&amp;&gt; (414 samples, 0.45%)</title><rect x="969.5" y="597" width="5.3" height="15.0" fill="rgb(213,28,47)" rx="2" ry="2" />
<text  x="972.51" y="607.5" ></text>
</g>
<g >
<title>__lock_put (23 samples, 0.02%)</title><rect x="152.1" y="501" width="0.3" height="15.0" fill="rgb(216,126,47)" rx="2" ry="2" />
<text  x="155.13" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;void*, CLockLocation&gt; &gt; (47 samples, 0.05%)</title><rect x="849.2" y="565" width="0.6" height="15.0" fill="rgb(250,14,22)" rx="2" ry="2" />
<text  x="852.18" y="575.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CSizeComputer, prevector&lt;28u, unsigned char, unsigned int, int&gt; &gt; (57 samples, 0.06%)</title><rect x="1040.1" y="405" width="0.8" height="15.0" fill="rgb(213,47,19)" rx="2" ry="2" />
<text  x="1043.15" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (15 samples, 0.02%)</title><rect x="632.2" y="501" width="0.2" height="15.0" fill="rgb(237,94,38)" rx="2" ry="2" />
<text  x="635.17" y="511.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (14 samples, 0.02%)</title><rect x="79.7" y="405" width="0.2" height="15.0" fill="rgb(218,132,33)" rx="2" ry="2" />
<text  x="82.71" y="415.5" ></text>
</g>
<g >
<title>GetSerializeSize&lt;CTransaction&gt; (10 samples, 0.01%)</title><rect x="20.3" y="757" width="0.1" height="15.0" fill="rgb(225,26,14)" rx="2" ry="2" />
<text  x="23.28" y="767.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;secure_allocator&lt;unsigned char&gt; &gt;::_S_construct&lt;unsigned char&gt; (731 samples, 0.79%)</title><rect x="580.3" y="565" width="9.4" height="15.0" fill="rgb(209,102,12)" rx="2" ry="2" />
<text  x="583.30" y="575.5" ></text>
</g>
<g >
<title>KeyOriginInfo::KeyOriginInfo (19 samples, 0.02%)</title><rect x="640.0" y="661" width="0.2" height="15.0" fill="rgb(225,16,23)" rx="2" ry="2" />
<text  x="643.00" y="671.5" ></text>
</g>
<g >
<title>std::less&lt;COutPoint&gt;::operator (22 samples, 0.02%)</title><rect x="1045.8" y="613" width="0.2" height="15.0" fill="rgb(230,133,39)" rx="2" ry="2" />
<text  x="1048.76" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (9 samples, 0.01%)</title><rect x="1158.9" y="741" width="0.1" height="15.0" fill="rgb(217,176,36)" rx="2" ry="2" />
<text  x="1161.92" y="751.5" ></text>
</g>
<g >
<title>CScript::CScript (8 samples, 0.01%)</title><rect x="444.4" y="245" width="0.1" height="15.0" fill="rgb(237,208,17)" rx="2" ry="2" />
<text  x="447.41" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::insert&lt;unsigned char const*, void&gt; (335 samples, 0.36%)</title><rect x="1099.4" y="677" width="4.3" height="15.0" fill="rgb(227,116,40)" rx="2" ry="2" />
<text  x="1102.37" y="687.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;CTxOut const*, CTxOut*&gt; (16 samples, 0.02%)</title><rect x="454.9" y="293" width="0.2" height="15.0" fill="rgb(233,199,19)" rx="2" ry="2" />
<text  x="457.90" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::base (27 samples, 0.03%)</title><rect x="764.7" y="405" width="0.4" height="15.0" fill="rgb(239,165,52)" rx="2" ry="2" />
<text  x="767.74" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;CBlockIndex* const, CBlockIndex*&gt; &gt;::_M_ptr (9 samples, 0.01%)</title><rect x="49.9" y="597" width="0.1" height="15.0" fill="rgb(223,43,33)" rx="2" ry="2" />
<text  x="52.93" y="607.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream&gt; (20 samples, 0.02%)</title><rect x="370.2" y="581" width="0.2" height="15.0" fill="rgb(237,208,48)" rx="2" ry="2" />
<text  x="373.16" y="591.5" ></text>
</g>
<g >
<title>CValidationState::CValidationState (23 samples, 0.02%)</title><rect x="659.7" y="677" width="0.3" height="15.0" fill="rgb(233,195,29)" rx="2" ry="2" />
<text  x="662.74" y="687.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (23 samples, 0.02%)</title><rect x="636.5" y="501" width="0.3" height="15.0" fill="rgb(218,200,50)" rx="2" ry="2" />
<text  x="639.54" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::_S_construct&lt;char, char const&amp;&gt; (61 samples, 0.07%)</title><rect x="1171.3" y="757" width="0.8" height="15.0" fill="rgb(205,221,10)" rx="2" ry="2" />
<text  x="1174.29" y="767.5" ></text>
</g>
<g >
<title>CWalletTx::isConflicted (34 samples, 0.04%)</title><rect x="956.6" y="661" width="0.4" height="15.0" fill="rgb(247,211,22)" rx="2" ry="2" />
<text  x="959.56" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_check_len (117 samples, 0.13%)</title><rect x="464.4" y="293" width="1.5" height="15.0" fill="rgb(228,80,37)" rx="2" ry="2" />
<text  x="467.43" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::max_size (15 samples, 0.02%)</title><rect x="445.5" y="309" width="0.2" height="15.0" fill="rgb(235,38,13)" rx="2" ry="2" />
<text  x="448.49" y="319.5" ></text>
</g>
<g >
<title>CHash256::CHash256 (30 samples, 0.03%)</title><rect x="480.6" y="389" width="0.3" height="15.0" fill="rgb(251,127,4)" rx="2" ry="2" />
<text  x="483.55" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (13 samples, 0.01%)</title><rect x="1154.4" y="757" width="0.2" height="15.0" fill="rgb(245,80,10)" rx="2" ry="2" />
<text  x="1157.41" y="767.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_allocate (29 samples, 0.03%)</title><rect x="767.3" y="421" width="0.4" height="15.0" fill="rgb(218,9,16)" rx="2" ry="2" />
<text  x="770.29" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::_M_ptr (92 samples, 0.10%)</title><rect x="896.1" y="549" width="1.1" height="15.0" fill="rgb(208,69,4)" rx="2" ry="2" />
<text  x="899.05" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::_S_destroy&lt;zero_after_free_allocator&lt;char&gt;, char&gt; (36 samples, 0.04%)</title><rect x="591.9" y="549" width="0.5" height="15.0" fill="rgb(214,48,42)" rx="2" ry="2" />
<text  x="594.93" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (300 samples, 0.33%)</title><rect x="962.6" y="597" width="3.9" height="15.0" fill="rgb(224,55,9)" rx="2" ry="2" />
<text  x="965.64" y="607.5" ></text>
</g>
<g >
<title>arith_uint256::SetCompact (18 samples, 0.02%)</title><rect x="46.0" y="661" width="0.2" height="15.0" fill="rgb(238,204,45)" rx="2" ry="2" />
<text  x="48.99" y="671.5" ></text>
</g>
<g >
<title>[unknown] (37 samples, 0.04%)</title><rect x="90.0" y="277" width="0.5" height="15.0" fill="rgb(252,56,36)" rx="2" ry="2" />
<text  x="93.03" y="287.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;unsigned int&gt; (15 samples, 0.02%)</title><rect x="520.2" y="341" width="0.2" height="15.0" fill="rgb(235,51,53)" rx="2" ry="2" />
<text  x="523.19" y="351.5" ></text>
</g>
<g >
<title>__dbc_close (34 samples, 0.04%)</title><rect x="68.4" y="533" width="0.4" height="15.0" fill="rgb(241,197,54)" rx="2" ry="2" />
<text  x="71.41" y="543.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::const_iterator::operator++ (11 samples, 0.01%)</title><rect x="662.3" y="581" width="0.1" height="15.0" fill="rgb(237,123,12)" rx="2" ry="2" />
<text  x="665.30" y="591.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::insert&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;&gt; (971 samples, 1.05%)</title><rect x="413.6" y="597" width="12.5" height="15.0" fill="rgb(207,36,23)" rx="2" ry="2" />
<text  x="416.64" y="607.5" ></text>
</g>
<g >
<title>Hash160&lt;unsigned char const*&gt; (146 samples, 0.16%)</title><rect x="1122.3" y="661" width="1.8" height="15.0" fill="rgb(234,159,51)" rx="2" ry="2" />
<text  x="1125.25" y="671.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (165 samples, 0.18%)</title><rect x="567.6" y="501" width="2.1" height="15.0" fill="rgb(212,167,31)" rx="2" ry="2" />
<text  x="570.57" y="511.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (37 samples, 0.04%)</title><rect x="94.0" y="421" width="0.5" height="15.0" fill="rgb(235,124,26)" rx="2" ry="2" />
<text  x="97.00" y="431.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::MergingIterator::FindSmallest (13 samples, 0.01%)</title><rect x="42.0" y="597" width="0.2" height="15.0" fill="rgb(210,106,16)" rx="2" ry="2" />
<text  x="45.04" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_right (15 samples, 0.02%)</title><rect x="552.6" y="581" width="0.2" height="15.0" fill="rgb(252,72,25)" rx="2" ry="2" />
<text  x="555.56" y="591.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.01%)</title><rect x="515.2" y="213" width="0.2" height="15.0" fill="rgb(253,7,41)" rx="2" ry="2" />
<text  x="518.25" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::_S_key (11 samples, 0.01%)</title><rect x="824.5" y="581" width="0.1" height="15.0" fill="rgb(213,198,41)" rx="2" ry="2" />
<text  x="827.50" y="591.5" ></text>
</g>
<g >
<title>CKeyMetadata::CKeyMetadata (51 samples, 0.06%)</title><rect x="639.6" y="677" width="0.7" height="15.0" fill="rgb(238,108,52)" rx="2" ry="2" />
<text  x="642.62" y="687.5" ></text>
</g>
<g >
<title>std::less&lt;uint256&gt;::operator (186 samples, 0.20%)</title><rect x="938.6" y="597" width="2.4" height="15.0" fill="rgb(239,58,30)" rx="2" ry="2" />
<text  x="941.63" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::max_size (11 samples, 0.01%)</title><rect x="455.4" y="309" width="0.1" height="15.0" fill="rgb(219,186,44)" rx="2" ry="2" />
<text  x="458.36" y="319.5" ></text>
</g>
<g >
<title>std::less&lt;CScriptID&gt;::operator (8 samples, 0.01%)</title><rect x="777.3" y="597" width="0.1" height="15.0" fill="rgb(222,83,36)" rx="2" ry="2" />
<text  x="780.35" y="607.5" ></text>
</g>
<g >
<title>__db_cursor (21 samples, 0.02%)</title><rect x="68.1" y="533" width="0.3" height="15.0" fill="rgb(240,18,42)" rx="2" ry="2" />
<text  x="71.14" y="543.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (25 samples, 0.03%)</title><rect x="1147.0" y="709" width="0.3" height="15.0" fill="rgb(241,112,53)" rx="2" ry="2" />
<text  x="1149.98" y="719.5" ></text>
</g>
<g >
<title>CTxOut::SetNull (17 samples, 0.02%)</title><rect x="1039.0" y="533" width="0.2" height="15.0" fill="rgb(250,136,51)" rx="2" ry="2" />
<text  x="1041.97" y="543.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (10 samples, 0.01%)</title><rect x="841.2" y="549" width="0.2" height="15.0" fill="rgb(249,73,46)" rx="2" ry="2" />
<text  x="844.23" y="559.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::resize_uninitialized (23 samples, 0.02%)</title><rect x="450.3" y="165" width="0.3" height="15.0" fill="rgb(226,64,9)" rx="2" ry="2" />
<text  x="453.29" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (9 samples, 0.01%)</title><rect x="45.2" y="533" width="0.1" height="15.0" fill="rgb(234,196,32)" rx="2" ry="2" />
<text  x="48.18" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt;::__normal_iterator (8 samples, 0.01%)</title><rect x="1068.8" y="661" width="0.2" height="15.0" fill="rgb(224,110,5)" rx="2" ry="2" />
<text  x="1071.85" y="671.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::emplace&lt;char*, std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;&amp;&gt; (10 samples, 0.01%)</title><rect x="612.4" y="533" width="0.1" height="15.0" fill="rgb(244,175,8)" rx="2" ry="2" />
<text  x="615.37" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, CWalletTx*&gt;, std::_Select1st&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::_S_value (63 samples, 0.07%)</title><rect x="1005.5" y="597" width="0.8" height="15.0" fill="rgb(238,182,12)" rx="2" ry="2" />
<text  x="1008.53" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (41 samples, 0.04%)</title><rect x="776.1" y="565" width="0.5" height="15.0" fill="rgb(230,122,23)" rx="2" ry="2" />
<text  x="779.07" y="575.5" ></text>
</g>
<g >
<title>__memp_fget (71 samples, 0.08%)</title><rect x="328.9" y="613" width="0.9" height="15.0" fill="rgb(217,121,9)" rx="2" ry="2" />
<text  x="331.91" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (9 samples, 0.01%)</title><rect x="1085.8" y="501" width="0.1" height="15.0" fill="rgb(231,181,36)" rx="2" ry="2" />
<text  x="1088.83" y="511.5" ></text>
</g>
<g >
<title>__memp_fput (23 samples, 0.02%)</title><rect x="108.5" y="405" width="0.3" height="15.0" fill="rgb(240,58,4)" rx="2" ry="2" />
<text  x="111.47" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_emplace_equal&lt;unsigned long const&amp;, char*&amp;&gt; (10 samples, 0.01%)</title><rect x="610.3" y="533" width="0.2" height="15.0" fill="rgb(219,216,39)" rx="2" ry="2" />
<text  x="613.32" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_default_append (453 samples, 0.49%)</title><rect x="468.8" y="341" width="5.8" height="15.0" fill="rgb(231,172,49)" rx="2" ry="2" />
<text  x="471.82" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt;::deallocate (13 samples, 0.01%)</title><rect x="809.6" y="261" width="0.1" height="15.0" fill="rgb(205,29,6)" rx="2" ry="2" />
<text  x="812.58" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::size (8 samples, 0.01%)</title><rect x="449.9" y="117" width="0.1" height="15.0" fill="rgb(254,31,14)" rx="2" ry="2" />
<text  x="452.86" y="127.5" ></text>
</g>
<g >
<title>Dbt::get_flags (18 samples, 0.02%)</title><rect x="173.0" y="661" width="0.3" height="15.0" fill="rgb(236,203,30)" rx="2" ry="2" />
<text  x="176.03" y="671.5" ></text>
</g>
<g >
<title>CChain::operator[] (49 samples, 0.05%)</title><rect x="958.0" y="629" width="0.6" height="15.0" fill="rgb(243,168,5)" rx="2" ry="2" />
<text  x="961.01" y="639.5" ></text>
</g>
<g >
<title>__gthread_recursive_mutex_lock (11 samples, 0.01%)</title><rect x="794.3" y="565" width="0.2" height="15.0" fill="rgb(212,197,31)" rx="2" ry="2" />
<text  x="797.31" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;::_M_ptr (33 samples, 0.04%)</title><rect x="828.8" y="517" width="0.4" height="15.0" fill="rgb(243,22,20)" rx="2" ry="2" />
<text  x="831.79" y="527.5" ></text>
</g>
<g >
<title>std::make_pair&lt;void*&amp;, CLockLocation const&amp;&gt; (41 samples, 0.04%)</title><rect x="789.6" y="565" width="0.5" height="15.0" fill="rgb(254,88,9)" rx="2" ry="2" />
<text  x="792.61" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false, false&gt;::operator (8 samples, 0.01%)</title><rect x="636.1" y="517" width="0.1" height="15.0" fill="rgb(206,112,30)" rx="2" ry="2" />
<text  x="639.06" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::~_Vector_base (8 samples, 0.01%)</title><rect x="1163.6" y="757" width="0.1" height="15.0" fill="rgb(211,129,48)" rx="2" ry="2" />
<text  x="1166.59" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::max_size (31 samples, 0.03%)</title><rect x="623.7" y="629" width="0.4" height="15.0" fill="rgb(239,165,42)" rx="2" ry="2" />
<text  x="626.69" y="639.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::_S_max_size&lt;zero_after_free_allocator&lt;char&gt; const&gt; (36 samples, 0.04%)</title><rect x="298.3" y="549" width="0.5" height="15.0" fill="rgb(253,38,4)" rx="2" ry="2" />
<text  x="301.33" y="559.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream&gt; (51 samples, 0.06%)</title><rect x="40.9" y="549" width="0.6" height="15.0" fill="rgb(254,51,19)" rx="2" ry="2" />
<text  x="43.88" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;CTxIn const*, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt; (16 samples, 0.02%)</title><rect x="494.0" y="293" width="0.2" height="15.0" fill="rgb(212,195,6)" rx="2" ry="2" />
<text  x="497.04" y="303.5" ></text>
</g>
<g >
<title>interfaces::(anonymous namespace)::LockImpl::getBlockHeight (187 samples, 0.20%)</title><rect x="51.0" y="629" width="2.4" height="15.0" fill="rgb(240,74,49)" rx="2" ry="2" />
<text  x="54.05" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (11 samples, 0.01%)</title><rect x="615.3" y="453" width="0.2" height="15.0" fill="rgb(221,114,4)" rx="2" ry="2" />
<text  x="618.34" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt;::construct&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;char*&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (55 samples, 0.06%)</title><rect x="1088.9" y="501" width="0.7" height="15.0" fill="rgb(237,50,41)" rx="2" ry="2" />
<text  x="1091.85" y="511.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (38 samples, 0.04%)</title><rect x="129.0" y="453" width="0.5" height="15.0" fill="rgb(213,192,27)" rx="2" ry="2" />
<text  x="132.00" y="463.5" ></text>
</g>
<g >
<title>WriteBE32 (49 samples, 0.05%)</title><rect x="481.7" y="357" width="0.6" height="15.0" fill="rgb(213,214,36)" rx="2" ry="2" />
<text  x="484.71" y="367.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9 samples, 0.01%)</title><rect x="73.7" y="469" width="0.1" height="15.0" fill="rgb(216,83,36)" rx="2" ry="2" />
<text  x="76.69" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_put_node (32 samples, 0.03%)</title><rect x="545.6" y="549" width="0.4" height="15.0" fill="rgb(243,3,5)" rx="2" ry="2" />
<text  x="548.56" y="559.5" ></text>
</g>
<g >
<title>CSHA256::Write (11 samples, 0.01%)</title><rect x="517.5" y="229" width="0.1" height="15.0" fill="rgb(253,124,0)" rx="2" ry="2" />
<text  x="520.49" y="239.5" ></text>
</g>
<g >
<title>WriteCompactSize&lt;CHashWriter&gt; (25 samples, 0.03%)</title><rect x="517.3" y="293" width="0.3" height="15.0" fill="rgb(237,183,21)" rx="2" ry="2" />
<text  x="520.31" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Rb_tree_const_iterator (28 samples, 0.03%)</title><rect x="554.5" y="597" width="0.3" height="15.0" fill="rgb(245,89,41)" rx="2" ry="2" />
<text  x="557.47" y="607.5" ></text>
</g>
<g >
<title>_mm_set_epi64x (22 samples, 0.02%)</title><rect x="1109.3" y="357" width="0.3" height="15.0" fill="rgb(236,174,21)" rx="2" ry="2" />
<text  x="1112.28" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::push_back (19 samples, 0.02%)</title><rect x="794.0" y="565" width="0.2" height="15.0" fill="rgb(245,175,17)" rx="2" ry="2" />
<text  x="796.98" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_Vector_base (14 samples, 0.02%)</title><rect x="520.9" y="325" width="0.2" height="15.0" fill="rgb(241,58,44)" rx="2" ry="2" />
<text  x="523.92" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_S_key (23 samples, 0.02%)</title><rect x="802.4" y="325" width="0.3" height="15.0" fill="rgb(213,77,39)" rx="2" ry="2" />
<text  x="805.41" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned long const, char*&gt; &gt;::_M_addr (9 samples, 0.01%)</title><rect x="566.2" y="469" width="0.1" height="15.0" fill="rgb(208,132,43)" rx="2" ry="2" />
<text  x="569.15" y="479.5" ></text>
</g>
<g >
<title>CDataStream::CDataStream (179 samples, 0.19%)</title><rect x="350.8" y="693" width="2.3" height="15.0" fill="rgb(214,177,45)" rx="2" ry="2" />
<text  x="353.78" y="703.5" ></text>
</g>
<g >
<title>__db_cursor (19 samples, 0.02%)</title><rect x="151.8" y="549" width="0.3" height="15.0" fill="rgb(211,59,37)" rx="2" ry="2" />
<text  x="154.82" y="559.5" ></text>
</g>
<g >
<title>CSHA256::Write (15 samples, 0.02%)</title><rect x="491.8" y="37" width="0.2" height="15.0" fill="rgb(211,43,12)" rx="2" ry="2" />
<text  x="494.84" y="47.5" ></text>
</g>
<g >
<title>ReadCompactSize&lt;CDataStream&gt; (25 samples, 0.03%)</title><rect x="449.6" y="165" width="0.4" height="15.0" fill="rgb(251,225,21)" rx="2" ry="2" />
<text  x="452.64" y="175.5" ></text>
</g>
<g >
<title>__dbc_close (52 samples, 0.06%)</title><rect x="133.4" y="533" width="0.6" height="15.0" fill="rgb(245,74,4)" rx="2" ry="2" />
<text  x="136.37" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (46 samples, 0.05%)</title><rect x="425.3" y="565" width="0.6" height="15.0" fill="rgb(249,170,27)" rx="2" ry="2" />
<text  x="428.31" y="575.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Compare (225 samples, 0.24%)</title><rect x="980.5" y="581" width="2.9" height="15.0" fill="rgb(244,108,40)" rx="2" ry="2" />
<text  x="983.54" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::~_Vector_base (30 samples, 0.03%)</title><rect x="521.3" y="325" width="0.4" height="15.0" fill="rgb(211,15,30)" rx="2" ry="2" />
<text  x="524.30" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CBlockIndex*, CBlockIndex*, std::_Identity&lt;CBlockIndex*&gt;, CBlockIndexWorkComparator, std::allocator&lt;CBlockIndex*&gt; &gt;::_M_get_insert_unique_pos (90 samples, 0.10%)</title><rect x="47.4" y="645" width="1.2" height="15.0" fill="rgb(242,26,4)" rx="2" ry="2" />
<text  x="50.42" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_get_Tp_allocator (8 samples, 0.01%)</title><rect x="1104.7" y="645" width="0.1" height="15.0" fill="rgb(244,175,48)" rx="2" ry="2" />
<text  x="1107.70" y="655.5" ></text>
</g>
<g >
<title>__bam_vrfy_structure (10 samples, 0.01%)</title><rect x="1144.7" y="597" width="0.1" height="15.0" fill="rgb(231,227,36)" rx="2" ry="2" />
<text  x="1147.70" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt; (17 samples, 0.02%)</title><rect x="1096.3" y="629" width="0.3" height="15.0" fill="rgb(253,107,34)" rx="2" ry="2" />
<text  x="1099.35" y="639.5" ></text>
</g>
<g >
<title>CDataStream::read (31 samples, 0.03%)</title><rect x="363.4" y="437" width="0.4" height="15.0" fill="rgb(248,1,44)" rx="2" ry="2" />
<text  x="366.36" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_S_value (9 samples, 0.01%)</title><rect x="793.2" y="517" width="0.1" height="15.0" fill="rgb(211,78,32)" rx="2" ry="2" />
<text  x="796.21" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_deallocate (231 samples, 0.25%)</title><rect x="355.1" y="645" width="3.0" height="15.0" fill="rgb(228,116,39)" rx="2" ry="2" />
<text  x="358.14" y="655.5" ></text>
</g>
<g >
<title>CScript::clear (25 samples, 0.03%)</title><rect x="447.3" y="341" width="0.3" height="15.0" fill="rgb(240,119,46)" rx="2" ry="2" />
<text  x="450.26" y="351.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CSizeComputer, CScript&gt; (130 samples, 0.14%)</title><rect x="1035.7" y="469" width="1.6" height="15.0" fill="rgb(233,69,23)" rx="2" ry="2" />
<text  x="1038.67" y="479.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, 28u, unsigned char&gt; (77 samples, 0.08%)</title><rect x="510.8" y="117" width="1.0" height="15.0" fill="rgb(234,71,49)" rx="2" ry="2" />
<text  x="513.84" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (11 samples, 0.01%)</title><rect x="518.6" y="277" width="0.1" height="15.0" fill="rgb(235,10,26)" rx="2" ry="2" />
<text  x="521.55" y="287.5" ></text>
</g>
<g >
<title>__db_lget (618 samples, 0.67%)</title><rect x="309.6" y="597" width="7.9" height="15.0" fill="rgb(242,125,49)" rx="2" ry="2" />
<text  x="312.62" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt;::allocate (37 samples, 0.04%)</title><rect x="617.6" y="469" width="0.5" height="15.0" fill="rgb(245,187,41)" rx="2" ry="2" />
<text  x="620.65" y="479.5" ></text>
</g>
<g >
<title>CLockLocation::~CLockLocation (12 samples, 0.01%)</title><rect x="795.2" y="517" width="0.1" height="15.0" fill="rgb(216,176,49)" rx="2" ry="2" />
<text  x="798.19" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;long const, CWalletTx*&gt;, std::pair&lt;long, CWalletTx*&gt; &gt; (46 samples, 0.05%)</title><rect x="1002.4" y="597" width="0.6" height="15.0" fill="rgb(233,97,47)" rx="2" ry="2" />
<text  x="1005.38" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_put_node (22 samples, 0.02%)</title><rect x="1051.8" y="597" width="0.3" height="15.0" fill="rgb(224,152,15)" rx="2" ry="2" />
<text  x="1054.78" y="607.5" ></text>
</g>
<g >
<title>std::copy&lt;unsigned char const*, unsigned char*&gt; (36 samples, 0.04%)</title><rect x="767.9" y="373" width="0.5" height="15.0" fill="rgb(216,229,4)" rx="2" ry="2" />
<text  x="770.95" y="383.5" ></text>
</g>
<g >
<title>__bam_get_root (37 samples, 0.04%)</title><rect x="97.7" y="405" width="0.5" height="15.0" fill="rgb(237,109,31)" rx="2" ry="2" />
<text  x="100.74" y="415.5" ></text>
</g>
<g >
<title>_mm_sha256rnds2_epu32 (38 samples, 0.04%)</title><rect x="1121.5" y="581" width="0.5" height="15.0" fill="rgb(218,92,8)" rx="2" ry="2" />
<text  x="1124.54" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::end (21 samples, 0.02%)</title><rect x="843.6" y="565" width="0.3" height="15.0" fill="rgb(216,163,24)" rx="2" ry="2" />
<text  x="846.62" y="575.5" ></text>
</g>
<g >
<title>__libc_csu_init (405 samples, 0.44%)</title><rect x="1184.5" y="725" width="5.2" height="15.0" fill="rgb(206,121,45)" rx="2" ry="2" />
<text  x="1187.47" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_erase_aux (34 samples, 0.04%)</title><rect x="566.6" y="485" width="0.4" height="15.0" fill="rgb(207,146,52)" rx="2" ry="2" />
<text  x="569.56" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::construct&lt;std::pair&lt;void*, CLockLocation&gt;, std::pair&lt;void*, CLockLocation&gt; &gt; (16 samples, 0.02%)</title><rect x="686.3" y="549" width="0.2" height="15.0" fill="rgb(205,181,48)" rx="2" ry="2" />
<text  x="689.28" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned long const, char*&gt; &gt;::_M_ptr (19 samples, 0.02%)</title><rect x="566.0" y="485" width="0.3" height="15.0" fill="rgb(246,30,34)" rx="2" ry="2" />
<text  x="569.02" y="495.5" ></text>
</g>
<g >
<title>[unknown] (34 samples, 0.04%)</title><rect x="161.5" y="517" width="0.4" height="15.0" fill="rgb(238,185,23)" rx="2" ry="2" />
<text  x="164.49" y="527.5" ></text>
</g>
<g >
<title>CSHA256::Write (13 samples, 0.01%)</title><rect x="507.9" y="149" width="0.2" height="15.0" fill="rgb(214,176,13)" rx="2" ry="2" />
<text  x="510.95" y="159.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CKeyPool&amp;&gt; (8 samples, 0.01%)</title><rect x="371.1" y="661" width="0.1" height="15.0" fill="rgb(212,95,39)" rx="2" ry="2" />
<text  x="374.13" y="671.5" ></text>
</g>
<g >
<title>push_lock (432 samples, 0.47%)</title><rect x="945.1" y="549" width="5.5" height="15.0" fill="rgb(205,91,4)" rx="2" ry="2" />
<text  x="948.11" y="559.5" ></text>
</g>
<g >
<title>__dbc_iget (105 samples, 0.11%)</title><rect x="91.5" y="453" width="1.3" height="15.0" fill="rgb(227,152,53)" rx="2" ry="2" />
<text  x="94.48" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;interfaces::Chain::Lock, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt;::get (10 samples, 0.01%)</title><rect x="1018.7" y="645" width="0.1" height="15.0" fill="rgb(219,2,27)" rx="2" ry="2" />
<text  x="1021.70" y="655.5" ></text>
</g>
<g >
<title>CChainState::CheckBlockIndex (11 samples, 0.01%)</title><rect x="32.4" y="677" width="0.2" height="15.0" fill="rgb(237,43,29)" rx="2" ry="2" />
<text  x="35.42" y="687.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, CScript&amp;&gt; (282 samples, 0.31%)</title><rect x="438.1" y="293" width="3.6" height="15.0" fill="rgb(215,147,11)" rx="2" ry="2" />
<text  x="441.12" y="303.5" ></text>
</g>
<g >
<title>CDataStream::read (32 samples, 0.03%)</title><rect x="439.4" y="165" width="0.4" height="15.0" fill="rgb(239,94,34)" rx="2" ry="2" />
<text  x="442.37" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::begin (8 samples, 0.01%)</title><rect x="1052.8" y="661" width="0.1" height="15.0" fill="rgb(238,165,0)" rx="2" ry="2" />
<text  x="1055.76" y="671.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt; &gt; (75 samples, 0.08%)</title><rect x="693.3" y="597" width="1.0" height="15.0" fill="rgb(226,150,31)" rx="2" ry="2" />
<text  x="696.30" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CBlockIndex*, std::pair&lt;CBlockIndex* const, CBlockIndex*&gt;, std::_Select1st&lt;std::pair&lt;CBlockIndex* const, CBlockIndex*&gt; &gt;, std::less&lt;CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;CBlockIndex* const, CBlockIndex*&gt; &gt; &gt;::_S_value (9 samples, 0.01%)</title><rect x="50.5" y="613" width="0.1" height="15.0" fill="rgb(236,186,48)" rx="2" ry="2" />
<text  x="53.52" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CBlockIndex*, CBlockIndex*, std::_Identity&lt;CBlockIndex*&gt;, CBlockIndexWorkComparator, std::allocator&lt;CBlockIndex*&gt; &gt;::erase[abi:cxx11] (9 samples, 0.01%)</title><rect x="32.2" y="661" width="0.1" height="15.0" fill="rgb(240,152,30)" rx="2" ry="2" />
<text  x="35.18" y="671.5" ></text>
</g>
<g >
<title>CTxOut::SerializationOp&lt;CDataStream, CSerActionUnserialize&gt; (250 samples, 0.27%)</title><rect x="448.6" y="325" width="3.2" height="15.0" fill="rgb(249,111,1)" rx="2" ry="2" />
<text  x="451.59" y="335.5" ></text>
</g>
<g >
<title>__lock_get (16 samples, 0.02%)</title><rect x="153.8" y="469" width="0.2" height="15.0" fill="rgb(246,122,28)" rx="2" ry="2" />
<text  x="156.83" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;COutPoint const, uint256&gt;::pair&lt;COutPoint, uint256, true&gt; (42 samples, 0.05%)</title><rect x="904.8" y="533" width="0.5" height="15.0" fill="rgb(246,195,21)" rx="2" ry="2" />
<text  x="907.78" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::end (19 samples, 0.02%)</title><rect x="1068.7" y="677" width="0.3" height="15.0" fill="rgb(216,219,0)" rx="2" ry="2" />
<text  x="1071.71" y="687.5" ></text>
</g>
<g >
<title>std::map&lt;boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt;, CAddressBookData, std::less&lt;boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt; &gt;, std::allocator&lt;std::pair&lt;boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt; const, CAddressBookData&gt; &gt; &gt;::operator[] (14 samples, 0.02%)</title><rect x="1065.5" y="677" width="0.2" height="15.0" fill="rgb(249,85,41)" rx="2" ry="2" />
<text  x="1068.51" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_check_len (88 samples, 0.10%)</title><rect x="471.7" y="325" width="1.2" height="15.0" fill="rgb(210,62,46)" rx="2" ry="2" />
<text  x="474.74" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (101 samples, 0.11%)</title><rect x="811.9" y="325" width="1.3" height="15.0" fill="rgb(206,149,13)" rx="2" ry="2" />
<text  x="814.87" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (37 samples, 0.04%)</title><rect x="822.3" y="517" width="0.4" height="15.0" fill="rgb(234,171,19)" rx="2" ry="2" />
<text  x="825.27" y="527.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, CKeyID&amp;&gt; (21 samples, 0.02%)</title><rect x="362.4" y="597" width="0.3" height="15.0" fill="rgb(251,192,6)" rx="2" ry="2" />
<text  x="365.40" y="607.5" ></text>
</g>
<g >
<title>CDataStream::read (12 samples, 0.01%)</title><rect x="370.6" y="565" width="0.2" height="15.0" fill="rgb(242,101,50)" rx="2" ry="2" />
<text  x="373.65" y="575.5" ></text>
</g>
<g >
<title>CWalletTx::setConfirmed (8 samples, 0.01%)</title><rect x="532.1" y="629" width="0.1" height="15.0" fill="rgb(220,172,6)" rx="2" ry="2" />
<text  x="535.11" y="639.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::clear (46 samples, 0.05%)</title><rect x="660.5" y="597" width="0.6" height="15.0" fill="rgb(220,135,44)" rx="2" ry="2" />
<text  x="663.49" y="607.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (18 samples, 0.02%)</title><rect x="114.4" y="389" width="0.2" height="15.0" fill="rgb(210,141,3)" rx="2" ry="2" />
<text  x="117.40" y="399.5" ></text>
</g>
<g >
<title>Arena::free (775 samples, 0.84%)</title><rect x="628.6" y="565" width="9.9" height="15.0" fill="rgb(208,134,16)" rx="2" ry="2" />
<text  x="631.62" y="575.5" ></text>
</g>
<g >
<title>__db_put (53 samples, 0.06%)</title><rect x="147.3" y="549" width="0.7" height="15.0" fill="rgb(250,106,52)" rx="2" ry="2" />
<text  x="150.31" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::~vector (40 samples, 0.04%)</title><rect x="503.8" y="277" width="0.5" height="15.0" fill="rgb(246,155,47)" rx="2" ry="2" />
<text  x="506.84" y="287.5" ></text>
</g>
<g >
<title>ReadCompactSize&lt;CDataStream&gt; (17 samples, 0.02%)</title><rect x="370.8" y="565" width="0.2" height="15.0" fill="rgb(215,21,46)" rx="2" ry="2" />
<text  x="373.80" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKeyMetadata&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;CKeyID const&amp;&gt;, std::tuple&lt;&gt; &gt; (332 samples, 0.36%)</title><rect x="854.4" y="645" width="4.3" height="15.0" fill="rgb(254,154,8)" rx="2" ry="2" />
<text  x="857.43" y="655.5" ></text>
</g>
<g >
<title>_mm_set_epi64x (24 samples, 0.03%)</title><rect x="1130.0" y="629" width="0.3" height="15.0" fill="rgb(241,146,47)" rx="2" ry="2" />
<text  x="1133.00" y="639.5" ></text>
</g>
<g >
<title>[unknown] (48 samples, 0.05%)</title><rect x="160.5" y="469" width="0.6" height="15.0" fill="rgb(207,95,36)" rx="2" ry="2" />
<text  x="163.52" y="479.5" ></text>
</g>
<g >
<title>_mm_add_epi32 (28 samples, 0.03%)</title><rect x="1116.3" y="229" width="0.3" height="15.0" fill="rgb(240,93,15)" rx="2" ry="2" />
<text  x="1119.29" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_ostringstream (17 samples, 0.02%)</title><rect x="1145.9" y="645" width="0.2" height="15.0" fill="rgb(208,130,37)" rx="2" ry="2" />
<text  x="1148.87" y="655.5" ></text>
</g>
<g >
<title>__memp_alloc (194 samples, 0.21%)</title><rect x="129.5" y="453" width="2.5" height="15.0" fill="rgb(209,157,16)" rx="2" ry="2" />
<text  x="132.49" y="463.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, zero_after_free_allocator&lt;char&gt; &gt; (19 samples, 0.02%)</title><rect x="37.1" y="533" width="0.2" height="15.0" fill="rgb(247,167,39)" rx="2" ry="2" />
<text  x="40.09" y="543.5" ></text>
</g>
<g >
<title>std::map&lt;uint256, CWalletTx, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::key_comp (9 samples, 0.01%)</title><rect x="871.5" y="597" width="0.1" height="15.0" fill="rgb(248,84,48)" rx="2" ry="2" />
<text  x="874.53" y="607.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (601 samples, 0.65%)</title><rect x="125.2" y="517" width="7.7" height="15.0" fill="rgb(228,98,11)" rx="2" ry="2" />
<text  x="128.20" y="527.5" ></text>
</g>
<g >
<title>CWalletTx::GetHash (17 samples, 0.02%)</title><rect x="956.3" y="661" width="0.3" height="15.0" fill="rgb(216,24,48)" rx="2" ry="2" />
<text  x="959.34" y="671.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (33 samples, 0.04%)</title><rect x="95.7" y="421" width="0.4" height="15.0" fill="rgb(249,170,21)" rx="2" ry="2" />
<text  x="98.73" y="431.5" ></text>
</g>
<g >
<title>std::set&lt;COutPoint, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::~set (141 samples, 0.15%)</title><rect x="1051.0" y="661" width="1.8" height="15.0" fill="rgb(237,47,18)" rx="2" ry="2" />
<text  x="1053.96" y="671.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, unsigned char const*, __gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (40 samples, 0.04%)</title><rect x="1102.1" y="613" width="0.6" height="15.0" fill="rgb(240,215,51)" rx="2" ry="2" />
<text  x="1105.15" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (42 samples, 0.05%)</title><rect x="1086.1" y="533" width="0.6" height="15.0" fill="rgb(212,126,25)" rx="2" ry="2" />
<text  x="1089.11" y="543.5" ></text>
</g>
<g >
<title>__os_io (18 samples, 0.02%)</title><rect x="131.5" y="405" width="0.3" height="15.0" fill="rgb(252,189,41)" rx="2" ry="2" />
<text  x="134.52" y="415.5" ></text>
</g>
<g >
<title>CLockLocation::CLockLocation (15 samples, 0.02%)</title><rect x="849.6" y="501" width="0.2" height="15.0" fill="rgb(252,65,44)" rx="2" ry="2" />
<text  x="852.56" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_M_begin (9 samples, 0.01%)</title><rect x="844.1" y="549" width="0.1" height="15.0" fill="rgb(250,100,39)" rx="2" ry="2" />
<text  x="847.06" y="559.5" ></text>
</g>
<g >
<title>__bam_ca_delete (17 samples, 0.02%)</title><rect x="71.5" y="485" width="0.3" height="15.0" fill="rgb(234,210,14)" rx="2" ry="2" />
<text  x="74.54" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::clear (19 samples, 0.02%)</title><rect x="37.1" y="565" width="0.2" height="15.0" fill="rgb(248,176,6)" rx="2" ry="2" />
<text  x="40.09" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;unsigned char*&gt;, unsigned char*, unsigned char&gt; (19 samples, 0.02%)</title><rect x="1097.4" y="613" width="0.3" height="15.0" fill="rgb(241,69,0)" rx="2" ry="2" />
<text  x="1100.45" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (17 samples, 0.02%)</title><rect x="527.3" y="469" width="0.2" height="15.0" fill="rgb(234,30,20)" rx="2" ry="2" />
<text  x="530.26" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;CChainState, std::default_delete&lt;CChainState&gt; &gt;::_M_ptr (8 samples, 0.01%)</title><rect x="959.9" y="597" width="0.1" height="15.0" fill="rgb(237,124,43)" rx="2" ry="2" />
<text  x="962.93" y="607.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (15 samples, 0.02%)</title><rect x="137.4" y="453" width="0.2" height="15.0" fill="rgb(211,165,21)" rx="2" ry="2" />
<text  x="140.44" y="463.5" ></text>
</g>
<g >
<title>BlockManager::LoadBlockIndex (108 samples, 0.12%)</title><rect x="44.4" y="629" width="1.4" height="15.0" fill="rgb(239,49,53)" rx="2" ry="2" />
<text  x="47.45" y="639.5" ></text>
</g>
<g >
<title>[unknown] (62 samples, 0.07%)</title><rect x="89.7" y="341" width="0.8" height="15.0" fill="rgb(236,18,44)" rx="2" ry="2" />
<text  x="92.71" y="351.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;uint256, CBlockIndex*, BlockHasher, std::equal_to&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt; &gt;::end (28 samples, 0.03%)</title><rect x="961.5" y="629" width="0.4" height="15.0" fill="rgb(251,15,28)" rx="2" ry="2" />
<text  x="964.53" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::end (17 samples, 0.02%)</title><rect x="477.5" y="357" width="0.2" height="15.0" fill="rgb(207,126,7)" rx="2" ry="2" />
<text  x="480.47" y="367.5" ></text>
</g>
<g >
<title>WriteBE32 (14 samples, 0.02%)</title><rect x="658.7" y="613" width="0.2" height="15.0" fill="rgb(226,152,26)" rx="2" ry="2" />
<text  x="661.68" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;secure_allocator&lt;unsigned char&gt; &gt;::_S_destroy&lt;secure_allocator&lt;unsigned char&gt;, unsigned char&gt; (258 samples, 0.28%)</title><rect x="1076.7" y="629" width="3.3" height="15.0" fill="rgb(246,164,9)" rx="2" ry="2" />
<text  x="1079.69" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_M_lower_bound (181 samples, 0.20%)</title><rect x="683.1" y="549" width="2.3" height="15.0" fill="rgb(254,84,6)" rx="2" ry="2" />
<text  x="686.09" y="559.5" ></text>
</g>
<g >
<title>CTransaction::ComputeWitnessHash (279 samples, 0.30%)</title><rect x="1140.8" y="565" width="3.6" height="15.0" fill="rgb(248,194,1)" rx="2" ry="2" />
<text  x="1143.78" y="575.5" ></text>
</g>
<g >
<title>_mm_set_epi64x (13 samples, 0.01%)</title><rect x="1112.7" y="357" width="0.2" height="15.0" fill="rgb(226,86,2)" rx="2" ry="2" />
<text  x="1115.71" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (9 samples, 0.01%)</title><rect x="51.9" y="533" width="0.1" height="15.0" fill="rgb(234,104,39)" rx="2" ry="2" />
<text  x="54.90" y="543.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (9 samples, 0.01%)</title><rect x="111.3" y="453" width="0.1" height="15.0" fill="rgb(209,39,36)" rx="2" ry="2" />
<text  x="114.30" y="463.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;uint256*, uint256&gt; (24 samples, 0.03%)</title><rect x="558.2" y="613" width="0.3" height="15.0" fill="rgb(211,25,15)" rx="2" ry="2" />
<text  x="561.24" y="623.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;CTransaction const&gt;::shared_ptr&lt;std::allocator&lt;CTransaction&gt;, deserialize_type const&amp;, CDataStream&amp;&gt; (901 samples, 0.98%)</title><rect x="1107.7" y="613" width="11.5" height="15.0" fill="rgb(228,227,51)" rx="2" ry="2" />
<text  x="1110.65" y="623.5" ></text>
</g>
<g >
<title>base_blob&lt;160u&gt;::Compare (477 samples, 0.52%)</title><rect x="830.6" y="533" width="6.2" height="15.0" fill="rgb(215,193,33)" rx="2" ry="2" />
<text  x="833.65" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;interfaces::Chain::Lock, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt;::unique_ptr&lt;interfaces::(anonymous namespace)::LockImpl, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt;, void&gt; (137 samples, 0.15%)</title><rect x="953.8" y="629" width="1.7" height="15.0" fill="rgb(212,20,20)" rx="2" ry="2" />
<text  x="956.78" y="639.5" ></text>
</g>
<g >
<title>Unserialize_impl&lt;CDataStream, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (34 samples, 0.04%)</title><rect x="529.4" y="597" width="0.4" height="15.0" fill="rgb(248,38,15)" rx="2" ry="2" />
<text  x="532.38" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_Vector_base (20 samples, 0.02%)</title><rect x="432.3" y="325" width="0.3" height="15.0" fill="rgb(245,52,49)" rx="2" ry="2" />
<text  x="435.34" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::destroy&lt;char&gt; (144 samples, 0.16%)</title><rect x="367.7" y="485" width="1.8" height="15.0" fill="rgb(232,198,48)" rx="2" ry="2" />
<text  x="370.69" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, CKeyID&amp;&amp;&gt;::_Tuple_impl&lt;CKeyID&gt; (15 samples, 0.02%)</title><rect x="826.1" y="581" width="0.2" height="15.0" fill="rgb(206,151,40)" rx="2" ry="2" />
<text  x="829.11" y="591.5" ></text>
</g>
<g >
<title>WriteBE32 (35 samples, 0.04%)</title><rect x="501.4" y="357" width="0.4" height="15.0" fill="rgb(223,73,32)" rx="2" ry="2" />
<text  x="504.38" y="367.5" ></text>
</g>
<g >
<title>CLockLocation::CLockLocation (18 samples, 0.02%)</title><rect x="950.3" y="453" width="0.2" height="15.0" fill="rgb(243,74,21)" rx="2" ry="2" />
<text  x="953.31" y="463.5" ></text>
</g>
<g >
<title>__bam_search (183 samples, 0.20%)</title><rect x="69.0" y="485" width="2.3" height="15.0" fill="rgb(229,36,42)" rx="2" ry="2" />
<text  x="71.97" y="495.5" ></text>
</g>
<g >
<title>__memp_alloc (49 samples, 0.05%)</title><rect x="329.2" y="597" width="0.6" height="15.0" fill="rgb(214,134,29)" rx="2" ry="2" />
<text  x="332.15" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_Vector_impl::_Vector_impl (11 samples, 0.01%)</title><rect x="1163.4" y="757" width="0.1" height="15.0" fill="rgb(254,49,9)" rx="2" ry="2" />
<text  x="1166.39" y="767.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (56 samples, 0.06%)</title><rect x="313.0" y="549" width="0.7" height="15.0" fill="rgb(231,0,11)" rx="2" ry="2" />
<text  x="316.02" y="559.5" ></text>
</g>
<g >
<title>Unserialize_impl&lt;CDataStream, 28u, unsigned char&gt; (194 samples, 0.21%)</title><rect x="439.1" y="181" width="2.5" height="15.0" fill="rgb(209,87,34)" rx="2" ry="2" />
<text  x="442.10" y="191.5" ></text>
</g>
<g >
<title>interfaces::(anonymous namespace)::LockImpl::~LockImpl (11 samples, 0.01%)</title><rect x="1150.7" y="757" width="0.2" height="15.0" fill="rgb(238,121,53)" rx="2" ry="2" />
<text  x="1153.72" y="767.5" ></text>
</g>
<g >
<title>__db_cursor (20 samples, 0.02%)</title><rect x="133.1" y="533" width="0.3" height="15.0" fill="rgb(205,19,0)" rx="2" ry="2" />
<text  x="136.11" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;interfaces::Chain::Lock, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt;::get (58 samples, 0.06%)</title><rect x="1018.0" y="645" width="0.7" height="15.0" fill="rgb(205,58,25)" rx="2" ry="2" />
<text  x="1020.96" y="655.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; &gt; (313 samples, 0.34%)</title><rect x="509.4" y="341" width="4.0" height="15.0" fill="rgb(249,3,9)" rx="2" ry="2" />
<text  x="512.35" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt;::_M_head (8 samples, 0.01%)</title><rect x="954.9" y="549" width="0.1" height="15.0" fill="rgb(240,76,35)" rx="2" ry="2" />
<text  x="957.92" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_S_right (8 samples, 0.01%)</title><rect x="689.6" y="581" width="0.1" height="15.0" fill="rgb(218,213,51)" rx="2" ry="2" />
<text  x="692.63" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (16 samples, 0.02%)</title><rect x="631.2" y="517" width="0.2" height="15.0" fill="rgb(242,40,0)" rx="2" ry="2" />
<text  x="634.18" y="527.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (19 samples, 0.02%)</title><rect x="843.1" y="517" width="0.3" height="15.0" fill="rgb(243,62,38)" rx="2" ry="2" />
<text  x="846.12" y="527.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, unsigned char, std::allocator&lt;unsigned char&gt; &gt; (361 samples, 0.39%)</title><rect x="1114.6" y="341" width="4.6" height="15.0" fill="rgb(215,199,26)" rx="2" ry="2" />
<text  x="1117.57" y="351.5" ></text>
</g>
<g >
<title>BerkeleyBatch::SafeDbt::operator Dbt* (16 samples, 0.02%)</title><rect x="171.6" y="677" width="0.2" height="15.0" fill="rgb(246,23,36)" rx="2" ry="2" />
<text  x="174.56" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_node_allocator (9 samples, 0.01%)</title><rect x="1087.1" y="517" width="0.1" height="15.0" fill="rgb(233,21,26)" rx="2" ry="2" />
<text  x="1090.11" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_M_insert_node (208 samples, 0.23%)</title><rect x="927.4" y="597" width="2.7" height="15.0" fill="rgb(208,216,15)" rx="2" ry="2" />
<text  x="930.39" y="607.5" ></text>
</g>
<g >
<title>MakeUnique&lt;interfaces::(anonymous namespace)::LockImpl, AnnotatedMixin&lt;std::recursive_mutex&gt;&amp;, char const  (888 samples, 0.96%)</title><rect x="942.1" y="629" width="11.4" height="15.0" fill="rgb(211,57,31)" rx="2" ry="2" />
<text  x="945.09" y="639.5" ></text>
</g>
<g >
<title>CHashWriter::write (18 samples, 0.02%)</title><rect x="43.4" y="485" width="0.2" height="15.0" fill="rgb(244,204,13)" rx="2" ry="2" />
<text  x="46.39" y="495.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned (11 samples, 0.01%)</title><rect x="73.5" y="469" width="0.2" height="15.0" fill="rgb(207,227,38)" rx="2" ry="2" />
<text  x="76.55" y="479.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (40 samples, 0.04%)</title><rect x="326.9" y="565" width="0.5" height="15.0" fill="rgb(254,106,30)" rx="2" ry="2" />
<text  x="329.91" y="575.5" ></text>
</g>
<g >
<title>__db_vrfy_getpageinfo (668 samples, 0.72%)</title><rect x="124.4" y="565" width="8.6" height="15.0" fill="rgb(219,160,49)" rx="2" ry="2" />
<text  x="127.41" y="575.5" ></text>
</g>
<g >
<title>CScript::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (183 samples, 0.20%)</title><rect x="164.7" y="293" width="2.3" height="15.0" fill="rgb(237,57,0)" rx="2" ry="2" />
<text  x="167.69" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (9 samples, 0.01%)</title><rect x="1165.7" y="757" width="0.1" height="15.0" fill="rgb(247,202,22)" rx="2" ry="2" />
<text  x="1168.71" y="767.5" ></text>
</g>
<g >
<title>__bam_ca_di (38 samples, 0.04%)</title><rect x="137.7" y="485" width="0.5" height="15.0" fill="rgb(254,96,49)" rx="2" ry="2" />
<text  x="140.69" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_erase (9 samples, 0.01%)</title><rect x="1052.3" y="581" width="0.1" height="15.0" fill="rgb(209,72,39)" rx="2" ry="2" />
<text  x="1055.33" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Vector_base (9 samples, 0.01%)</title><rect x="1164.2" y="757" width="0.1" height="15.0" fill="rgb(218,197,28)" rx="2" ry="2" />
<text  x="1167.21" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_S_use_relocate (11 samples, 0.01%)</title><rect x="473.5" y="325" width="0.2" height="15.0" fill="rgb(236,140,43)" rx="2" ry="2" />
<text  x="476.53" y="335.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CSizeComputer, unsigned int&gt; (27 samples, 0.03%)</title><rect x="1037.3" y="485" width="0.4" height="15.0" fill="rgb(238,214,4)" rx="2" ry="2" />
<text  x="1040.33" y="495.5" ></text>
</g>
<g >
<title>CDataStream::Xor (93 samples, 0.10%)</title><rect x="38.9" y="645" width="1.2" height="15.0" fill="rgb(216,110,34)" rx="2" ry="2" />
<text  x="41.88" y="655.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (37 samples, 0.04%)</title><rect x="812.6" y="309" width="0.5" height="15.0" fill="rgb(212,90,10)" rx="2" ry="2" />
<text  x="815.59" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::destroy&lt;char&gt; (59 samples, 0.06%)</title><rect x="377.7" y="485" width="0.7" height="15.0" fill="rgb(248,226,40)" rx="2" ry="2" />
<text  x="380.69" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned int&gt; &gt;::allocate (18 samples, 0.02%)</title><rect x="852.7" y="581" width="0.2" height="15.0" fill="rgb(224,116,26)" rx="2" ry="2" />
<text  x="855.66" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::construct&lt;std::pair&lt;uint256 const, CWalletTx&gt;, uint256&amp;, CWalletTx&amp;&gt; (400 samples, 0.43%)</title><rect x="969.6" y="581" width="5.2" height="15.0" fill="rgb(240,133,48)" rx="2" ry="2" />
<text  x="972.65" y="591.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (46 samples, 0.05%)</title><rect x="295.3" y="613" width="0.6" height="15.0" fill="rgb(219,82,21)" rx="2" ry="2" />
<text  x="298.28" y="623.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (17 samples, 0.02%)</title><rect x="146.2" y="469" width="0.2" height="15.0" fill="rgb(248,131,7)" rx="2" ry="2" />
<text  x="149.17" y="479.5" ></text>
</g>
<g >
<title>CDataStream::read (130 samples, 0.14%)</title><rect x="590.7" y="629" width="1.7" height="15.0" fill="rgb(218,179,43)" rx="2" ry="2" />
<text  x="593.74" y="639.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.05%)</title><rect x="160.5" y="485" width="0.6" height="15.0" fill="rgb(250,25,20)" rx="2" ry="2" />
<text  x="163.49" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;void*, CLockLocation&gt;*, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;::__normal_iterator (9 samples, 0.01%)</title><rect x="961.2" y="597" width="0.1" height="15.0" fill="rgb(228,17,7)" rx="2" ry="2" />
<text  x="964.21" y="607.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (37 samples, 0.04%)</title><rect x="94.0" y="437" width="0.5" height="15.0" fill="rgb(238,75,16)" rx="2" ry="2" />
<text  x="97.00" y="447.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, zero_after_free_allocator&lt;char&gt; &gt; (1,138 samples, 1.24%)</title><rect x="593.3" y="581" width="14.6" height="15.0" fill="rgb(248,46,38)" rx="2" ry="2" />
<text  x="596.34" y="591.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (13 samples, 0.01%)</title><rect x="162.4" y="581" width="0.1" height="15.0" fill="rgb(248,111,40)" rx="2" ry="2" />
<text  x="165.36" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::allocate (63 samples, 0.07%)</title><rect x="469.6" y="293" width="0.8" height="15.0" fill="rgb(254,96,23)" rx="2" ry="2" />
<text  x="472.62" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_Vector_base (37 samples, 0.04%)</title><rect x="624.2" y="645" width="0.5" height="15.0" fill="rgb(211,79,3)" rx="2" ry="2" />
<text  x="627.18" y="655.5" ></text>
</g>
<g >
<title>SerializeHash&lt;CTransaction&gt; (1,554 samples, 1.69%)</title><rect x="480.2" y="421" width="19.9" height="15.0" fill="rgb(219,159,31)" rx="2" ry="2" />
<text  x="483.21" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;::_M_ptr (23 samples, 0.02%)</title><rect x="684.1" y="485" width="0.3" height="15.0" fill="rgb(227,50,54)" rx="2" ry="2" />
<text  x="687.06" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::__detail::_Select1st, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (11 samples, 0.01%)</title><rect x="51.9" y="549" width="0.1" height="15.0" fill="rgb(228,60,48)" rx="2" ry="2" />
<text  x="54.88" y="559.5" ></text>
</g>
<g >
<title>CWallet::LoadToWallet (12,131 samples, 13.17%)</title><rect x="866.9" y="677" width="155.3" height="15.0" fill="rgb(235,177,7)" rx="2" ry="2" />
<text  x="869.85" y="687.5" >CWallet::LoadToWallet</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (15 samples, 0.02%)</title><rect x="174.1" y="645" width="0.2" height="15.0" fill="rgb(229,139,44)" rx="2" ry="2" />
<text  x="177.12" y="655.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (10 samples, 0.01%)</title><rect x="543.0" y="581" width="0.1" height="15.0" fill="rgb(234,85,32)" rx="2" ry="2" />
<text  x="546.01" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::_Vector_impl::~_Vector_impl (13 samples, 0.01%)</title><rect x="479.6" y="405" width="0.2" height="15.0" fill="rgb(223,57,30)" rx="2" ry="2" />
<text  x="482.62" y="415.5" ></text>
</g>
<g >
<title>CBlockIndexWorkComparator::operator (12 samples, 0.01%)</title><rect x="50.8" y="645" width="0.1" height="15.0" fill="rgb(250,122,2)" rx="2" ry="2" />
<text  x="53.78" y="655.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;::allocate (20 samples, 0.02%)</title><rect x="801.4" y="309" width="0.3" height="15.0" fill="rgb(249,13,3)" rx="2" ry="2" />
<text  x="804.40" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::_M_check_len (44 samples, 0.05%)</title><rect x="455.1" y="325" width="0.6" height="15.0" fill="rgb(222,36,31)" rx="2" ry="2" />
<text  x="458.11" y="335.5" ></text>
</g>
<g >
<title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt; &gt; (26 samples, 0.03%)</title><rect x="1098.6" y="629" width="0.3" height="15.0" fill="rgb(213,219,49)" rx="2" ry="2" />
<text  x="1101.59" y="639.5" ></text>
</g>
<g >
<title>__db_lput (13 samples, 0.01%)</title><rect x="65.3" y="501" width="0.1" height="15.0" fill="rgb(214,45,34)" rx="2" ry="2" />
<text  x="68.27" y="511.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, char&gt; (338 samples, 0.37%)</title><rect x="559.5" y="661" width="4.4" height="15.0" fill="rgb(214,142,17)" rx="2" ry="2" />
<text  x="562.53" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, unsigned long, false&gt;::_S_equals (28 samples, 0.03%)</title><rect x="810.1" y="293" width="0.4" height="15.0" fill="rgb(244,118,5)" rx="2" ry="2" />
<text  x="813.13" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CBlockIndex*, CBlockIndex*, std::_Identity&lt;CBlockIndex*&gt;, CBlockIndexWorkComparator, std::allocator&lt;CBlockIndex*&gt; &gt;::_S_key (20 samples, 0.02%)</title><rect x="48.3" y="629" width="0.2" height="15.0" fill="rgb(243,20,14)" rx="2" ry="2" />
<text  x="51.28" y="639.5" ></text>
</g>
<g >
<title>ser_writedata8&lt;CHashWriter&gt; (9 samples, 0.01%)</title><rect x="506.9" y="85" width="0.1" height="15.0" fill="rgb(224,48,10)" rx="2" ry="2" />
<text  x="509.91" y="95.5" ></text>
</g>
<g >
<title>ReadCompactSize&lt;CDataStream&gt; (12 samples, 0.01%)</title><rect x="363.1" y="469" width="0.1" height="15.0" fill="rgb(207,47,9)" rx="2" ry="2" />
<text  x="366.08" y="479.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, CScript&gt; (183 samples, 0.20%)</title><rect x="164.7" y="341" width="2.3" height="15.0" fill="rgb(249,93,12)" rx="2" ry="2" />
<text  x="167.69" y="351.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, uint256, std::allocator&lt;uint256&gt; &gt; (75 samples, 0.08%)</title><rect x="530.0" y="613" width="1.0" height="15.0" fill="rgb(222,222,46)" rx="2" ry="2" />
<text  x="533.04" y="623.5" ></text>
</g>
<g >
<title>__lock_put (12 samples, 0.01%)</title><rect x="139.2" y="453" width="0.2" height="15.0" fill="rgb(205,14,27)" rx="2" ry="2" />
<text  x="142.23" y="463.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, uint160&amp;&gt; (134 samples, 0.15%)</title><rect x="590.7" y="661" width="1.7" height="15.0" fill="rgb(225,105,1)" rx="2" ry="2" />
<text  x="593.69" y="671.5" ></text>
</g>
<g >
<title>CWalletTx::Unserialize&lt;CDataStream&gt; (14,036 samples, 15.23%)</title><rect x="379.4" y="645" width="179.7" height="15.0" fill="rgb(209,74,35)" rx="2" ry="2" />
<text  x="382.38" y="655.5" >CWalletTx::Unserialize&lt;..</text>
</g>
<g >
<title>CHashWriter::write (361 samples, 0.39%)</title><rect x="1114.6" y="309" width="4.6" height="15.0" fill="rgb(224,187,0)" rx="2" ry="2" />
<text  x="1117.57" y="319.5" ></text>
</g>
<g >
<title>ShiftMessageC (15 samples, 0.02%)</title><rect x="1131.6" y="629" width="0.1" height="15.0" fill="rgb(231,23,9)" rx="2" ry="2" />
<text  x="1134.55" y="639.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (39 samples, 0.04%)</title><rect x="147.5" y="517" width="0.5" height="15.0" fill="rgb(223,58,19)" rx="2" ry="2" />
<text  x="150.49" y="527.5" ></text>
</g>
<g >
<title>CHashWriter::write (14 samples, 0.02%)</title><rect x="505.3" y="101" width="0.2" height="15.0" fill="rgb(249,181,19)" rx="2" ry="2" />
<text  x="508.33" y="111.5" ></text>
</g>
<g >
<title>boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt;::variant&lt;WitnessV0KeyHash&gt; (75 samples, 0.08%)</title><rect x="769.7" y="613" width="0.9" height="15.0" fill="rgb(228,2,1)" rx="2" ry="2" />
<text  x="772.66" y="623.5" ></text>
</g>
<g >
<title>std::allocator&lt;uint256&gt;::allocator (18 samples, 0.02%)</title><rect x="557.8" y="581" width="0.2" height="15.0" fill="rgb(245,178,20)" rx="2" ry="2" />
<text  x="560.79" y="591.5" ></text>
</g>
<g >
<title>CuckooCache::cache&lt;uint256, SignatureCacheHasher&gt;::setup (68 samples, 0.07%)</title><rect x="30.5" y="677" width="0.9" height="15.0" fill="rgb(250,124,19)" rx="2" ry="2" />
<text  x="33.53" y="687.5" ></text>
</g>
<g >
<title>Unserialize_impl&lt;CDataStream, CMerkleTx, std::allocator&lt;CMerkleTx&gt;, CMerkleTx&gt; (49 samples, 0.05%)</title><rect x="528.6" y="597" width="0.7" height="15.0" fill="rgb(227,204,25)" rx="2" ry="2" />
<text  x="531.64" y="607.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, uint256&amp;&gt; (77 samples, 0.08%)</title><rect x="436.0" y="229" width="1.0" height="15.0" fill="rgb(222,137,47)" rx="2" ry="2" />
<text  x="439.01" y="239.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::operator (31 samples, 0.03%)</title><rect x="937.9" y="581" width="0.4" height="15.0" fill="rgb(221,28,41)" rx="2" ry="2" />
<text  x="940.89" y="591.5" ></text>
</g>
<g >
<title>std::multimap&lt;unsigned long, char*, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::lower_bound (33 samples, 0.04%)</title><rect x="567.1" y="517" width="0.4" height="15.0" fill="rgb(209,197,49)" rx="2" ry="2" />
<text  x="570.09" y="527.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CTransaction&gt; (901 samples, 0.98%)</title><rect x="1107.7" y="661" width="11.5" height="15.0" fill="rgb(219,87,14)" rx="2" ry="2" />
<text  x="1110.65" y="671.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, interfaces::Chain::Lock*, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt; (12 samples, 0.01%)</title><rect x="1169.4" y="741" width="0.1" height="15.0" fill="rgb(231,94,12)" rx="2" ry="2" />
<text  x="1172.37" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_ptr (14 samples, 0.02%)</title><rect x="984.6" y="581" width="0.2" height="15.0" fill="rgb(227,63,15)" rx="2" ry="2" />
<text  x="987.63" y="591.5" ></text>
</g>
<g >
<title>__env_alloc (12 samples, 0.01%)</title><rect x="159.1" y="549" width="0.1" height="15.0" fill="rgb(232,30,11)" rx="2" ry="2" />
<text  x="162.08" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (17 samples, 0.02%)</title><rect x="352.9" y="613" width="0.2" height="15.0" fill="rgb(238,124,8)" rx="2" ry="2" />
<text  x="355.86" y="623.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (268 samples, 0.29%)</title><rect x="106.7" y="453" width="3.4" height="15.0" fill="rgb(217,222,9)" rx="2" ry="2" />
<text  x="109.65" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~vector (54 samples, 0.06%)</title><rect x="1105.3" y="677" width="0.7" height="15.0" fill="rgb(209,158,2)" rx="2" ry="2" />
<text  x="1108.35" y="687.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;unsigned char const*, unsigned char*&gt; (38 samples, 0.04%)</title><rect x="1100.4" y="613" width="0.5" height="15.0" fill="rgb(232,74,42)" rx="2" ry="2" />
<text  x="1103.44" y="623.5" ></text>
</g>
<g >
<title>uint256::uint256 (8 samples, 0.01%)</title><rect x="432.0" y="341" width="0.1" height="15.0" fill="rgb(207,219,38)" rx="2" ry="2" />
<text  x="434.99" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::operator* (50 samples, 0.05%)</title><rect x="870.1" y="597" width="0.7" height="15.0" fill="rgb(209,145,10)" rx="2" ry="2" />
<text  x="873.14" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::vector (49 samples, 0.05%)</title><rect x="522.7" y="437" width="0.6" height="15.0" fill="rgb(253,86,3)" rx="2" ry="2" />
<text  x="525.67" y="447.5" ></text>
</g>
<g >
<title>__dbc_iput (280 samples, 0.30%)</title><rect x="106.6" y="469" width="3.6" height="15.0" fill="rgb(224,213,7)" rx="2" ry="2" />
<text  x="109.61" y="479.5" ></text>
</g>
<g >
<title>CHash256::Finalize (269 samples, 0.29%)</title><rect x="1111.1" y="437" width="3.5" height="15.0" fill="rgb(251,189,27)" rx="2" ry="2" />
<text  x="1114.12" y="447.5" ></text>
</g>
<g >
<title>COutPoint::Unserialize&lt;CDataStream&gt; (181 samples, 0.20%)</title><rect x="435.6" y="261" width="2.3" height="15.0" fill="rgb(234,64,2)" rx="2" ry="2" />
<text  x="438.61" y="271.5" ></text>
</g>
<g >
<title>ReadBE64 (22 samples, 0.02%)</title><rect x="1189.2" y="565" width="0.2" height="15.0" fill="rgb(233,128,27)" rx="2" ry="2" />
<text  x="1192.17" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::construct&lt;char, char const&amp;&gt; (16 samples, 0.02%)</title><rect x="1172.3" y="757" width="0.2" height="15.0" fill="rgb(239,17,25)" rx="2" ry="2" />
<text  x="1175.26" y="767.5" ></text>
</g>
<g >
<title>__memp_bhwrite (73 samples, 0.08%)</title><rect x="160.4" y="549" width="0.9" height="15.0" fill="rgb(226,87,20)" rx="2" ry="2" />
<text  x="163.38" y="559.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTxIn, std::allocator&lt;CTxIn&gt; &gt; (488 samples, 0.53%)</title><rect x="503.1" y="325" width="6.3" height="15.0" fill="rgb(222,9,38)" rx="2" ry="2" />
<text  x="506.11" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (244 samples, 0.26%)</title><rect x="612.6" y="517" width="3.2" height="15.0" fill="rgb(240,62,23)" rx="2" ry="2" />
<text  x="615.64" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;CChainState, std::default_delete&lt;CChainState&gt; &gt;::operator bool (8 samples, 0.01%)</title><rect x="51.1" y="597" width="0.1" height="15.0" fill="rgb(208,2,22)" rx="2" ry="2" />
<text  x="54.08" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (13 samples, 0.01%)</title><rect x="612.9" y="485" width="0.2" height="15.0" fill="rgb(216,5,35)" rx="2" ry="2" />
<text  x="615.95" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, unsigned long, false&gt;::_S_equals (28 samples, 0.03%)</title><rect x="569.2" y="437" width="0.3" height="15.0" fill="rgb(215,187,44)" rx="2" ry="2" />
<text  x="572.16" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;void*, CLockLocation&gt;*, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; (12 samples, 0.01%)</title><rect x="788.9" y="565" width="0.2" height="15.0" fill="rgb(247,171,25)" rx="2" ry="2" />
<text  x="791.95" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (12 samples, 0.01%)</title><rect x="417.6" y="469" width="0.1" height="15.0" fill="rgb(249,204,35)" rx="2" ry="2" />
<text  x="420.58" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::allocate (10 samples, 0.01%)</title><rect x="1088.7" y="517" width="0.1" height="15.0" fill="rgb(208,141,37)" rx="2" ry="2" />
<text  x="1091.70" y="527.5" ></text>
</g>
<g >
<title>CSHA256::Write (13 samples, 0.01%)</title><rect x="506.7" y="69" width="0.2" height="15.0" fill="rgb(220,210,25)" rx="2" ry="2" />
<text  x="509.70" y="79.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (9 samples, 0.01%)</title><rect x="947.1" y="485" width="0.2" height="15.0" fill="rgb(209,68,9)" rx="2" ry="2" />
<text  x="950.15" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_Vector_impl::_Vector_impl (90 samples, 0.10%)</title><rect x="351.9" y="645" width="1.2" height="15.0" fill="rgb(212,186,44)" rx="2" ry="2" />
<text  x="354.92" y="655.5" ></text>
</g>
<g >
<title>__memp_bhwrite (67 samples, 0.07%)</title><rect x="122.6" y="469" width="0.8" height="15.0" fill="rgb(206,57,49)" rx="2" ry="2" />
<text  x="125.56" y="479.5" ></text>
</g>
<g >
<title>WalletBatch::VerifyDatabaseFile (10 samples, 0.01%)</title><rect x="1144.7" y="693" width="0.1" height="15.0" fill="rgb(237,7,15)" rx="2" ry="2" />
<text  x="1147.70" y="703.5" ></text>
</g>
<g >
<title>std::tuple&lt;CKeyID const&amp;&gt;::tuple (18 samples, 0.02%)</title><rect x="855.9" y="565" width="0.2" height="15.0" fill="rgb(243,217,27)" rx="2" ry="2" />
<text  x="858.91" y="575.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (25 samples, 0.03%)</title><rect x="376.2" y="613" width="0.4" height="15.0" fill="rgb(249,73,34)" rx="2" ry="2" />
<text  x="379.24" y="623.5" ></text>
</g>
<g >
<title>CSHA256::Write (183 samples, 0.20%)</title><rect x="164.7" y="181" width="2.3" height="15.0" fill="rgb(250,155,52)" rx="2" ry="2" />
<text  x="167.69" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::find (518 samples, 0.56%)</title><rect x="934.7" y="629" width="6.7" height="15.0" fill="rgb(216,4,54)" rx="2" ry="2" />
<text  x="937.74" y="639.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (15 samples, 0.02%)</title><rect x="136.1" y="421" width="0.2" height="15.0" fill="rgb(253,161,25)" rx="2" ry="2" />
<text  x="139.07" y="431.5" ></text>
</g>
<g >
<title>CHashWriter::write (22 samples, 0.02%)</title><rect x="491.7" y="69" width="0.3" height="15.0" fill="rgb(244,108,48)" rx="2" ry="2" />
<text  x="494.75" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_value (158 samples, 0.17%)</title><rect x="987.5" y="597" width="2.0" height="15.0" fill="rgb(236,220,21)" rx="2" ry="2" />
<text  x="990.48" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_Vector_impl::_Vector_impl (12 samples, 0.01%)</title><rect x="520.9" y="309" width="0.2" height="15.0" fill="rgb(243,183,12)" rx="2" ry="2" />
<text  x="523.94" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;void*, CLockLocation&gt;::~pair (11 samples, 0.01%)</title><rect x="850.9" y="549" width="0.1" height="15.0" fill="rgb(220,87,18)" rx="2" ry="2" />
<text  x="853.91" y="559.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::iterator::operator* (13 samples, 0.01%)</title><rect x="761.6" y="421" width="0.2" height="15.0" fill="rgb(240,161,54)" rx="2" ry="2" />
<text  x="764.62" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;&gt; (456 samples, 0.49%)</title><rect x="414.3" y="565" width="5.8" height="15.0" fill="rgb(225,70,45)" rx="2" ry="2" />
<text  x="417.29" y="575.5" ></text>
</g>
<g >
<title>std::make_pair&lt;void*&amp;, CLockLocation const&amp;&gt; (149 samples, 0.16%)</title><rect x="841.6" y="581" width="1.9" height="15.0" fill="rgb(209,134,0)" rx="2" ry="2" />
<text  x="844.63" y="591.5" ></text>
</g>
<g >
<title>std::make_pair&lt;COutPoint const&amp;, uint256 const&amp;&gt; (60 samples, 0.07%)</title><rect x="891.6" y="629" width="0.7" height="15.0" fill="rgb(245,131,37)" rx="2" ry="2" />
<text  x="894.58" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::clear (54 samples, 0.06%)</title><rect x="174.9" y="661" width="0.7" height="15.0" fill="rgb(211,122,44)" rx="2" ry="2" />
<text  x="177.91" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;interfaces::Chain::Lock, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt;::_M_ptr (48 samples, 0.05%)</title><rect x="1018.1" y="629" width="0.6" height="15.0" fill="rgb(227,223,25)" rx="2" ry="2" />
<text  x="1021.08" y="639.5" ></text>
</g>
<g >
<title>ReadLE32 (53 samples, 0.06%)</title><rect x="657.4" y="597" width="0.7" height="15.0" fill="rgb(206,164,50)" rx="2" ry="2" />
<text  x="660.44" y="607.5" ></text>
</g>
<g >
<title>std::local_Rb_tree_decrement (29 samples, 0.03%)</title><rect x="857.2" y="597" width="0.4" height="15.0" fill="rgb(214,159,32)" rx="2" ry="2" />
<text  x="860.25" y="607.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt; (279 samples, 0.30%)</title><rect x="1140.8" y="469" width="3.6" height="15.0" fill="rgb(213,79,22)" rx="2" ry="2" />
<text  x="1143.78" y="479.5" ></text>
</g>
<g >
<title>__db_cursor_int (19 samples, 0.02%)</title><rect x="68.2" y="517" width="0.2" height="15.0" fill="rgb(212,28,50)" rx="2" ry="2" />
<text  x="71.17" y="527.5" ></text>
</g>
<g >
<title>CHash160::Finalize (1,432 samples, 1.55%)</title><rect x="738.4" y="581" width="18.3" height="15.0" fill="rgb(224,173,27)" rx="2" ry="2" />
<text  x="741.40" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::vector (14 samples, 0.02%)</title><rect x="820.8" y="485" width="0.2" height="15.0" fill="rgb(238,60,26)" rx="2" ry="2" />
<text  x="823.81" y="495.5" ></text>
</g>
<g >
<title>__memp_bhfree (165 samples, 0.18%)</title><rect x="120.4" y="469" width="2.2" height="15.0" fill="rgb(253,41,44)" rx="2" ry="2" />
<text  x="123.44" y="479.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt; &gt;::emplace&lt;char*, std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;&amp;&gt; (11 samples, 0.01%)</title><rect x="612.4" y="549" width="0.1" height="15.0" fill="rgb(246,8,46)" rx="2" ry="2" />
<text  x="615.36" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (65 samples, 0.07%)</title><rect x="541.0" y="629" width="0.8" height="15.0" fill="rgb(226,185,29)" rx="2" ry="2" />
<text  x="544.00" y="639.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, COutPoint&gt; (84 samples, 0.09%)</title><rect x="505.0" y="229" width="1.1" height="15.0" fill="rgb(244,115,40)" rx="2" ry="2" />
<text  x="508.00" y="239.5" ></text>
</g>
<g >
<title>std::operator!=&lt;char*&gt; (74 samples, 0.08%)</title><rect x="294.3" y="581" width="1.0" height="15.0" fill="rgb(207,34,3)" rx="2" ry="2" />
<text  x="297.33" y="591.5" ></text>
</g>
<g >
<title>VerifyWallets (8,490 samples, 9.21%)</title><rect x="53.8" y="709" width="108.7" height="15.0" fill="rgb(253,106,8)" rx="2" ry="2" />
<text  x="56.80" y="719.5" >VerifyWallets</text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;char* const, unsigned long&gt;, false, false&gt;::operator (8 samples, 0.01%)</title><rect x="800.4" y="373" width="0.1" height="15.0" fill="rgb(236,227,8)" rx="2" ry="2" />
<text  x="803.38" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::size (94 samples, 0.10%)</title><rect x="299.4" y="597" width="1.2" height="15.0" fill="rgb(243,209,48)" rx="2" ry="2" />
<text  x="302.39" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;char* const, unsigned long&gt; &gt;::_M_v (12 samples, 0.01%)</title><rect x="1091.0" y="485" width="0.1" height="15.0" fill="rgb(226,49,18)" rx="2" ry="2" />
<text  x="1093.97" y="495.5" ></text>
</g>
<g >
<title>std::set&lt;CBlockIndex*, CBlockIndexWorkComparator, std::allocator&lt;CBlockIndex*&gt; &gt;::insert (110 samples, 0.12%)</title><rect x="47.4" y="677" width="1.4" height="15.0" fill="rgb(229,62,49)" rx="2" ry="2" />
<text  x="50.41" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;CChainState, std::default_delete&lt;CChainState&gt; &gt;::get (10 samples, 0.01%)</title><rect x="53.4" y="581" width="0.2" height="15.0" fill="rgb(219,225,18)" rx="2" ry="2" />
<text  x="56.44" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::max_size (60 samples, 0.07%)</title><rect x="298.0" y="565" width="0.8" height="15.0" fill="rgb(248,170,43)" rx="2" ry="2" />
<text  x="301.02" y="575.5" ></text>
</g>
<g >
<title>CHashWriter::write (169 samples, 0.18%)</title><rect x="162.5" y="213" width="2.2" height="15.0" fill="rgb(246,113,49)" rx="2" ry="2" />
<text  x="165.53" y="223.5" ></text>
</g>
<g >
<title>__memp_fput (8 samples, 0.01%)</title><rect x="146.6" y="517" width="0.1" height="15.0" fill="rgb(217,89,40)" rx="2" ry="2" />
<text  x="149.58" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char* const&amp;&gt;::_Tuple_impl (18 samples, 0.02%)</title><rect x="1088.1" y="469" width="0.2" height="15.0" fill="rgb(239,29,54)" rx="2" ry="2" />
<text  x="1091.06" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector&lt;unsigned char const*, void&gt; (203 samples, 0.22%)</title><rect x="766.3" y="453" width="2.6" height="15.0" fill="rgb(232,101,41)" rx="2" ry="2" />
<text  x="769.32" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_key (630 samples, 0.68%)</title><rect x="873.9" y="549" width="8.1" height="15.0" fill="rgb(237,129,21)" rx="2" ry="2" />
<text  x="876.95" y="559.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned char*, unsigned char*, std::allocator&lt;unsigned char&gt; &gt; (20 samples, 0.02%)</title><rect x="1104.3" y="629" width="0.2" height="15.0" fill="rgb(248,49,53)" rx="2" ry="2" />
<text  x="1107.29" y="639.5" ></text>
</g>
<g >
<title>SerializeTransaction&lt;CSizeComputer, CTransaction&gt; (992 samples, 1.08%)</title><rect x="1030.0" y="597" width="12.7" height="15.0" fill="rgb(233,8,43)" rx="2" ry="2" />
<text  x="1033.03" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;::_M_addr (14 samples, 0.02%)</title><rect x="779.5" y="485" width="0.2" height="15.0" fill="rgb(242,135,14)" rx="2" ry="2" />
<text  x="782.54" y="495.5" ></text>
</g>
<g >
<title>ser_writedata32&lt;CSizeComputer&gt; (13 samples, 0.01%)</title><rect x="1035.2" y="357" width="0.2" height="15.0" fill="rgb(239,32,23)" rx="2" ry="2" />
<text  x="1038.21" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (26 samples, 0.03%)</title><rect x="516.3" y="245" width="0.3" height="15.0" fill="rgb(205,2,51)" rx="2" ry="2" />
<text  x="519.31" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt; &gt;::_M_deallocate_node_ptr (27 samples, 0.03%)</title><rect x="637.3" y="469" width="0.3" height="15.0" fill="rgb(251,44,33)" rx="2" ry="2" />
<text  x="640.29" y="479.5" ></text>
</g>
<g >
<title>_mm_add_epi32 (22 samples, 0.02%)</title><rect x="1112.4" y="357" width="0.3" height="15.0" fill="rgb(205,93,0)" rx="2" ry="2" />
<text  x="1115.43" y="367.5" ></text>
</g>
<g >
<title>CRIPEMD160::Finalize (1,198 samples, 1.30%)</title><rect x="663.2" y="597" width="15.4" height="15.0" fill="rgb(217,164,33)" rx="2" ry="2" />
<text  x="666.21" y="607.5" ></text>
</g>
<g >
<title>std::mutex::unlock (36 samples, 0.04%)</title><rect x="947.0" y="517" width="0.4" height="15.0" fill="rgb(242,105,52)" rx="2" ry="2" />
<text  x="949.97" y="527.5" ></text>
</g>
<g >
<title>__memp_fput (26 samples, 0.03%)</title><rect x="132.6" y="469" width="0.3" height="15.0" fill="rgb(240,183,45)" rx="2" ry="2" />
<text  x="135.56" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, CWalletTx*&gt;, std::_Select1st&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::_S_key (49 samples, 0.05%)</title><rect x="1016.9" y="629" width="0.6" height="15.0" fill="rgb(227,202,13)" rx="2" ry="2" />
<text  x="1019.91" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned char&gt;::construct&lt;unsigned char&gt; (500 samples, 0.54%)</title><rect x="583.3" y="549" width="6.4" height="15.0" fill="rgb(237,35,20)" rx="2" ry="2" />
<text  x="586.26" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;CMerkleTx, std::allocator&lt;CMerkleTx&gt; &gt;::clear (30 samples, 0.03%)</title><rect x="528.9" y="581" width="0.4" height="15.0" fill="rgb(250,138,52)" rx="2" ry="2" />
<text  x="531.88" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_key (245 samples, 0.27%)</title><rect x="986.8" y="613" width="3.2" height="15.0" fill="rgb(221,6,25)" rx="2" ry="2" />
<text  x="989.82" y="623.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, zero_after_free_allocator&lt;char&gt; &gt; (46 samples, 0.05%)</title><rect x="40.9" y="469" width="0.6" height="15.0" fill="rgb(216,104,51)" rx="2" ry="2" />
<text  x="43.92" y="479.5" ></text>
</g>
<g >
<title>ser_writedata32&lt;CHashWriter&gt; (23 samples, 0.02%)</title><rect x="493.1" y="197" width="0.2" height="15.0" fill="rgb(233,83,16)" rx="2" ry="2" />
<text  x="496.05" y="207.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CSizeComputer, uint256&gt; (41 samples, 0.04%)</title><rect x="1034.4" y="389" width="0.5" height="15.0" fill="rgb(234,124,19)" rx="2" ry="2" />
<text  x="1037.39" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned (25 samples, 0.03%)</title><rect x="562.8" y="597" width="0.3" height="15.0" fill="rgb(212,81,32)" rx="2" ry="2" />
<text  x="565.82" y="607.5" ></text>
</g>
<g >
<title>CTxOut::~CTxOut (10 samples, 0.01%)</title><rect x="509.8" y="309" width="0.1" height="15.0" fill="rgb(210,96,5)" rx="2" ry="2" />
<text  x="512.78" y="319.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (50 samples, 0.05%)</title><rect x="338.8" y="597" width="0.7" height="15.0" fill="rgb(243,30,0)" rx="2" ry="2" />
<text  x="341.85" y="607.5" ></text>
</g>
<g >
<title>CHashWriter::write (18 samples, 0.02%)</title><rect x="505.7" y="101" width="0.2" height="15.0" fill="rgb(252,226,5)" rx="2" ry="2" />
<text  x="508.72" y="111.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned (10 samples, 0.01%)</title><rect x="1106.5" y="645" width="0.1" height="15.0" fill="rgb(231,93,43)" rx="2" ry="2" />
<text  x="1109.49" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;void*, CLockLocation&gt;*, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;::__normal_iterator (11 samples, 0.01%)</title><rect x="949.4" y="517" width="0.1" height="15.0" fill="rgb(210,221,5)" rx="2" ry="2" />
<text  x="952.35" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree (104 samples, 0.11%)</title><rect x="970.6" y="517" width="1.3" height="15.0" fill="rgb(253,134,54)" rx="2" ry="2" />
<text  x="973.57" y="527.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CSizeComputer, unsigned int&gt; (33 samples, 0.04%)</title><rect x="1035.0" y="389" width="0.4" height="15.0" fill="rgb(229,50,42)" rx="2" ry="2" />
<text  x="1037.99" y="399.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CSizeComputer, prevector&lt;28u, unsigned char, unsigned int, int&gt;&gt; (76 samples, 0.08%)</title><rect x="1036.2" y="389" width="1.0" height="15.0" fill="rgb(212,54,1)" rx="2" ry="2" />
<text  x="1039.24" y="399.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (8 samples, 0.01%)</title><rect x="137.8" y="469" width="0.1" height="15.0" fill="rgb(242,61,43)" rx="2" ry="2" />
<text  x="140.80" y="479.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned int const*, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt; &gt;, unsigned int*&gt; (40 samples, 0.04%)</title><rect x="852.9" y="581" width="0.5" height="15.0" fill="rgb(242,135,12)" rx="2" ry="2" />
<text  x="855.93" y="591.5" ></text>
</g>
<g >
<title>ReadCompactSize&lt;CDataStream&gt; (110 samples, 0.12%)</title><rect x="410.7" y="565" width="1.4" height="15.0" fill="rgb(232,29,44)" rx="2" ry="2" />
<text  x="413.68" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::vector (171 samples, 0.19%)</title><rect x="972.5" y="533" width="2.2" height="15.0" fill="rgb(248,229,2)" rx="2" ry="2" />
<text  x="975.51" y="543.5" ></text>
</g>
<g >
<title>__dbc_close (37 samples, 0.04%)</title><rect x="152.1" y="549" width="0.4" height="15.0" fill="rgb(207,98,14)" rx="2" ry="2" />
<text  x="155.06" y="559.5" ></text>
</g>
<g >
<title>ser_readdata32&lt;CDataStream&gt; (22 samples, 0.02%)</title><rect x="442.0" y="261" width="0.2" height="15.0" fill="rgb(252,91,37)" rx="2" ry="2" />
<text  x="444.95" y="271.5" ></text>
</g>
<g >
<title>CChain::Contains (9 samples, 0.01%)</title><rect x="33.1" y="597" width="0.1" height="15.0" fill="rgb(232,5,38)" rx="2" ry="2" />
<text  x="36.06" y="607.5" ></text>
</g>
<g >
<title>__dbc_close (28 samples, 0.03%)</title><rect x="124.8" y="533" width="0.3" height="15.0" fill="rgb(224,100,36)" rx="2" ry="2" />
<text  x="127.79" y="543.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (9 samples, 0.01%)</title><rect x="572.2" y="501" width="0.1" height="15.0" fill="rgb(242,72,15)" rx="2" ry="2" />
<text  x="575.16" y="511.5" ></text>
</g>
<g >
<title>_int_malloc (8 samples, 0.01%)</title><rect x="120.3" y="421" width="0.1" height="15.0" fill="rgb(225,52,43)" rx="2" ry="2" />
<text  x="123.34" y="431.5" ></text>
</g>
<g >
<title>__bam_search (219 samples, 0.24%)</title><rect x="148.8" y="501" width="2.8" height="15.0" fill="rgb(229,9,6)" rx="2" ry="2" />
<text  x="151.77" y="511.5" ></text>
</g>
<g >
<title>[unknown] (27 samples, 0.03%)</title><rect x="122.9" y="341" width="0.3" height="15.0" fill="rgb(241,34,24)" rx="2" ry="2" />
<text  x="125.90" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::operator[] (14 samples, 0.02%)</title><rect x="411.6" y="517" width="0.1" height="15.0" fill="rgb(211,129,19)" rx="2" ry="2" />
<text  x="414.56" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_M_default_append (1,782 samples, 1.93%)</title><rect x="797.9" y="469" width="22.8" height="15.0" fill="rgb(254,164,27)" rx="2" ry="2" />
<text  x="800.89" y="479.5" >s..</text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::_Rb_tree_iterator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::_Rb_tree_iterator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, true&gt; (19 samples, 0.02%)</title><rect x="903.0" y="597" width="0.3" height="15.0" fill="rgb(242,180,35)" rx="2" ry="2" />
<text  x="906.02" y="607.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (17 samples, 0.02%)</title><rect x="88.7" y="357" width="0.2" height="15.0" fill="rgb(243,66,17)" rx="2" ry="2" />
<text  x="91.70" y="367.5" ></text>
</g>
<g >
<title>CSHA256::Finalize (77 samples, 0.08%)</title><rect x="500.9" y="373" width="1.0" height="15.0" fill="rgb(239,197,4)" rx="2" ry="2" />
<text  x="503.93" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_left (14 samples, 0.02%)</title><rect x="552.4" y="581" width="0.2" height="15.0" fill="rgb(235,183,29)" rx="2" ry="2" />
<text  x="555.39" y="591.5" ></text>
</g>
<g >
<title>__libc_pread (30 samples, 0.03%)</title><rect x="328.3" y="549" width="0.4" height="15.0" fill="rgb(232,163,34)" rx="2" ry="2" />
<text  x="331.28" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (37 samples, 0.04%)</title><rect x="412.1" y="565" width="0.5" height="15.0" fill="rgb(239,29,27)" rx="2" ry="2" />
<text  x="415.09" y="575.5" ></text>
</g>
<g >
<title>_int_free (28 samples, 0.03%)</title><rect x="356.9" y="581" width="0.4" height="15.0" fill="rgb(220,15,2)" rx="2" ry="2" />
<text  x="359.92" y="591.5" ></text>
</g>
<g >
<title>[unknown] (41 samples, 0.04%)</title><rect x="122.7" y="389" width="0.5" height="15.0" fill="rgb(223,209,0)" rx="2" ry="2" />
<text  x="125.72" y="399.5" ></text>
</g>
<g >
<title>CKey::operator= (166 samples, 0.18%)</title><rect x="692.6" y="629" width="2.1" height="15.0" fill="rgb(245,152,38)" rx="2" ry="2" />
<text  x="695.62" y="639.5" ></text>
</g>
<g >
<title>__db_tas_mutex_readlock (15 samples, 0.02%)</title><rect x="326.5" y="565" width="0.2" height="15.0" fill="rgb(234,228,12)" rx="2" ry="2" />
<text  x="329.46" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (18 samples, 0.02%)</title><rect x="432.4" y="309" width="0.2" height="15.0" fill="rgb(247,166,1)" rx="2" ry="2" />
<text  x="435.36" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (40 samples, 0.04%)</title><rect x="570.0" y="469" width="0.5" height="15.0" fill="rgb(223,107,19)" rx="2" ry="2" />
<text  x="572.97" y="479.5" ></text>
</g>
<g >
<title>__db_cursor_int (495 samples, 0.54%)</title><rect x="344.0" y="613" width="6.3" height="15.0" fill="rgb(249,59,11)" rx="2" ry="2" />
<text  x="346.98" y="623.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::item_ptr (13 samples, 0.01%)</title><rect x="450.1" y="149" width="0.2" height="15.0" fill="rgb(249,214,40)" rx="2" ry="2" />
<text  x="453.12" y="159.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (23 samples, 0.02%)</title><rect x="101.0" y="373" width="0.2" height="15.0" fill="rgb(228,163,36)" rx="2" ry="2" />
<text  x="103.95" y="383.5" ></text>
</g>
<g >
<title>_start (34 samples, 0.04%)</title><rect x="1149.5" y="757" width="0.4" height="15.0" fill="rgb(236,175,44)" rx="2" ry="2" />
<text  x="1152.47" y="767.5" ></text>
</g>
<g >
<title>CTxOut::CTxOut (24 samples, 0.03%)</title><rect x="1038.9" y="549" width="0.3" height="15.0" fill="rgb(232,48,46)" rx="2" ry="2" />
<text  x="1041.88" y="559.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.02%)</title><rect x="622.6" y="565" width="0.3" height="15.0" fill="rgb(232,160,25)" rx="2" ry="2" />
<text  x="625.63" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (14 samples, 0.02%)</title><rect x="536.3" y="565" width="0.2" height="15.0" fill="rgb(248,153,13)" rx="2" ry="2" />
<text  x="539.31" y="575.5" ></text>
</g>
<g >
<title>_mm_sha256rnds2_epu32 (63 samples, 0.07%)</title><rect x="165.9" y="133" width="0.8" height="15.0" fill="rgb(208,34,30)" rx="2" ry="2" />
<text  x="168.92" y="143.5" ></text>
</g>
<g >
<title>__db_cursor (22 samples, 0.02%)</title><rect x="124.5" y="533" width="0.3" height="15.0" fill="rgb(253,51,52)" rx="2" ry="2" />
<text  x="127.50" y="543.5" ></text>
</g>
<g >
<title>__bam_get_root (25 samples, 0.03%)</title><rect x="69.7" y="469" width="0.3" height="15.0" fill="rgb(243,112,22)" rx="2" ry="2" />
<text  x="72.67" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned char&gt;::deallocate (9 samples, 0.01%)</title><rect x="769.3" y="405" width="0.1" height="15.0" fill="rgb(252,78,31)" rx="2" ry="2" />
<text  x="772.30" y="415.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;uint256*, unsigned long&gt; (52 samples, 0.06%)</title><rect x="29.9" y="613" width="0.6" height="15.0" fill="rgb(246,18,45)" rx="2" ry="2" />
<text  x="32.86" y="623.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (8 samples, 0.01%)</title><rect x="535.1" y="613" width="0.1" height="15.0" fill="rgb(225,23,6)" rx="2" ry="2" />
<text  x="538.12" y="623.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;CKeyPool&amp;&gt; (8 samples, 0.01%)</title><rect x="371.1" y="677" width="0.1" height="15.0" fill="rgb(229,184,21)" rx="2" ry="2" />
<text  x="374.13" y="687.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CTransaction&gt; (352 samples, 0.38%)</title><rect x="162.5" y="725" width="4.5" height="15.0" fill="rgb(239,52,18)" rx="2" ry="2" />
<text  x="165.53" y="735.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;CTransaction const, std::allocator&lt;CTransaction&gt;, deserialize_type const&amp;, CDataStream&amp;&gt; (7,595 samples, 8.24%)</title><rect x="427.4" y="581" width="97.2" height="15.0" fill="rgb(226,188,20)" rx="2" ry="2" />
<text  x="430.35" y="591.5" >std::alloca..</text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (28 samples, 0.03%)</title><rect x="638.1" y="501" width="0.4" height="15.0" fill="rgb(252,126,34)" rx="2" ry="2" />
<text  x="641.11" y="511.5" ></text>
</g>
<g >
<title>CHash160::CHash160 (10 samples, 0.01%)</title><rect x="695.2" y="597" width="0.2" height="15.0" fill="rgb(224,80,47)" rx="2" ry="2" />
<text  x="698.23" y="607.5" ></text>
</g>
<g >
<title>WriteCompactSize (10 samples, 0.01%)</title><rect x="1040.3" y="341" width="0.2" height="15.0" fill="rgb(254,174,9)" rx="2" ry="2" />
<text  x="1043.33" y="351.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, CTxOut, std::allocator&lt;CTxOut&gt;, CTxOut&gt; (169 samples, 0.18%)</title><rect x="162.5" y="421" width="2.2" height="15.0" fill="rgb(215,112,7)" rx="2" ry="2" />
<text  x="165.53" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;CTxIn const*, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt;::__normal_iterator (10 samples, 0.01%)</title><rect x="1038.5" y="517" width="0.1" height="15.0" fill="rgb(225,64,39)" rx="2" ry="2" />
<text  x="1041.46" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_ptr (65 samples, 0.07%)</title><rect x="937.1" y="549" width="0.8" height="15.0" fill="rgb(234,31,33)" rx="2" ry="2" />
<text  x="940.06" y="559.5" ></text>
</g>
<g >
<title>__lock_get_internal (60 samples, 0.07%)</title><rect x="126.6" y="437" width="0.8" height="15.0" fill="rgb(210,26,8)" rx="2" ry="2" />
<text  x="129.64" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (20 samples, 0.02%)</title><rect x="1060.7" y="565" width="0.2" height="15.0" fill="rgb(229,200,20)" rx="2" ry="2" />
<text  x="1063.68" y="575.5" ></text>
</g>
<g >
<title>CSHA256::Write (13 samples, 0.01%)</title><rect x="678.7" y="581" width="0.2" height="15.0" fill="rgb(221,168,2)" rx="2" ry="2" />
<text  x="681.70" y="591.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;*&gt; (13 samples, 0.01%)</title><rect x="433.4" y="293" width="0.2" height="15.0" fill="rgb(243,165,19)" rx="2" ry="2" />
<text  x="436.42" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_get_Node_allocator (9 samples, 0.01%)</title><rect x="1047.2" y="565" width="0.1" height="15.0" fill="rgb(217,208,8)" rx="2" ry="2" />
<text  x="1050.22" y="575.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (23 samples, 0.02%)</title><rect x="553.6" y="517" width="0.3" height="15.0" fill="rgb(226,139,44)" rx="2" ry="2" />
<text  x="556.61" y="527.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;CTransaction const,  (30 samples, 0.03%)</title><rect x="972.1" y="517" width="0.4" height="15.0" fill="rgb(241,121,29)" rx="2" ry="2" />
<text  x="975.12" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (22 samples, 0.02%)</title><rect x="1091.5" y="485" width="0.3" height="15.0" fill="rgb(212,95,43)" rx="2" ry="2" />
<text  x="1094.53" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (10 samples, 0.01%)</title><rect x="566.9" y="469" width="0.1" height="15.0" fill="rgb(210,74,53)" rx="2" ry="2" />
<text  x="569.87" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;CScriptID, CScript, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::end (8 samples, 0.01%)</title><rect x="687.9" y="629" width="0.1" height="15.0" fill="rgb(211,117,37)" rx="2" ry="2" />
<text  x="690.87" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_M_construct_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;CScriptID const&amp;&gt;, std::tuple&lt;&gt; &gt; (131 samples, 0.14%)</title><rect x="772.1" y="565" width="1.7" height="15.0" fill="rgb(232,121,23)" rx="2" ry="2" />
<text  x="775.10" y="575.5" ></text>
</g>
<g >
<title>__subvdi3 (17 samples, 0.02%)</title><rect x="182.3" y="613" width="0.2" height="15.0" fill="rgb(240,201,43)" rx="2" ry="2" />
<text  x="185.31" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_erase_at_end (119 samples, 0.13%)</title><rect x="590.9" y="597" width="1.5" height="15.0" fill="rgb(241,226,13)" rx="2" ry="2" />
<text  x="593.87" y="607.5" ></text>
</g>
<g >
<title>WriteBE64 (12 samples, 0.01%)</title><rect x="1058.2" y="629" width="0.2" height="15.0" fill="rgb(211,144,37)" rx="2" ry="2" />
<text  x="1061.22" y="639.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, interfaces::Chain::Lock*, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt; (39 samples, 0.04%)</title><rect x="1018.2" y="613" width="0.5" height="15.0" fill="rgb(224,207,34)" rx="2" ry="2" />
<text  x="1021.20" y="623.5" ></text>
</g>
<g >
<title>__libc_start_main (34 samples, 0.04%)</title><rect x="1149.5" y="741" width="0.4" height="15.0" fill="rgb(238,56,50)" rx="2" ry="2" />
<text  x="1152.47" y="751.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, CKeyID const&amp;&gt;::_M_head (8 samples, 0.01%)</title><rect x="856.0" y="533" width="0.1" height="15.0" fill="rgb(254,191,47)" rx="2" ry="2" />
<text  x="859.02" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (11 samples, 0.01%)</title><rect x="434.0" y="309" width="0.1" height="15.0" fill="rgb(223,163,28)" rx="2" ry="2" />
<text  x="436.99" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl::_Vector_impl (17 samples, 0.02%)</title><rect x="471.3" y="229" width="0.3" height="15.0" fill="rgb(219,144,17)" rx="2" ry="2" />
<text  x="474.34" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (19 samples, 0.02%)</title><rect x="130.9" y="405" width="0.2" height="15.0" fill="rgb(221,145,42)" rx="2" ry="2" />
<text  x="133.88" y="415.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::operator (36 samples, 0.04%)</title><rect x="989.5" y="597" width="0.5" height="15.0" fill="rgb(216,74,37)" rx="2" ry="2" />
<text  x="992.50" y="607.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.02%)</title><rect x="79.4" y="293" width="0.2" height="15.0" fill="rgb(230,112,49)" rx="2" ry="2" />
<text  x="82.41" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt; &gt;::allocate (20 samples, 0.02%)</title><rect x="813.8" y="309" width="0.3" height="15.0" fill="rgb(210,178,19)" rx="2" ry="2" />
<text  x="816.81" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (20 samples, 0.02%)</title><rect x="1063.8" y="581" width="0.2" height="15.0" fill="rgb(212,161,6)" rx="2" ry="2" />
<text  x="1066.77" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_ptr (16 samples, 0.02%)</title><rect x="969.3" y="581" width="0.2" height="15.0" fill="rgb(244,104,38)" rx="2" ry="2" />
<text  x="972.30" y="591.5" ></text>
</g>
<g >
<title>__db_vrfy_overflow (103 samples, 0.11%)</title><rect x="146.7" y="581" width="1.3" height="15.0" fill="rgb(254,146,28)" rx="2" ry="2" />
<text  x="149.68" y="591.5" ></text>
</g>
<g >
<title>__memp_fget (8 samples, 0.01%)</title><rect x="147.1" y="469" width="0.1" height="15.0" fill="rgb(229,172,32)" rx="2" ry="2" />
<text  x="150.11" y="479.5" ></text>
</g>
<g >
<title>std::_Construct&lt;CTxIn&gt; (45 samples, 0.05%)</title><rect x="444.2" y="277" width="0.6" height="15.0" fill="rgb(232,177,26)" rx="2" ry="2" />
<text  x="447.18" y="287.5" ></text>
</g>
<g >
<title>CDataStream::read (15 samples, 0.02%)</title><rect x="449.8" y="133" width="0.2" height="15.0" fill="rgb(243,117,39)" rx="2" ry="2" />
<text  x="452.77" y="143.5" ></text>
</g>
<g >
<title>_mm_sha256rnds2_epu32 (86 samples, 0.09%)</title><rect x="1109.6" y="357" width="1.1" height="15.0" fill="rgb(227,209,5)" rx="2" ry="2" />
<text  x="1112.56" y="367.5" ></text>
</g>
<g >
<title>CTransaction::CTransaction&lt;CDataStream&gt; (550 samples, 0.60%)</title><rect x="1137.3" y="597" width="7.1" height="15.0" fill="rgb(215,219,8)" rx="2" ry="2" />
<text  x="1140.31" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (56 samples, 0.06%)</title><rect x="633.3" y="501" width="0.7" height="15.0" fill="rgb(237,61,1)" rx="2" ry="2" />
<text  x="636.27" y="511.5" ></text>
</g>
<g >
<title>CTransaction::HasWitness (41 samples, 0.04%)</title><rect x="500.3" y="421" width="0.5" height="15.0" fill="rgb(230,164,54)" rx="2" ry="2" />
<text  x="503.28" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_M_get_Node_allocator (9 samples, 0.01%)</title><rect x="975.0" y="597" width="0.1" height="15.0" fill="rgb(218,70,13)" rx="2" ry="2" />
<text  x="977.99" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::_S_destroy&lt;zero_after_free_allocator&lt;char&gt;, char&gt; (97 samples, 0.11%)</title><rect x="374.8" y="549" width="1.2" height="15.0" fill="rgb(214,8,0)" rx="2" ry="2" />
<text  x="377.78" y="559.5" ></text>
</g>
<g >
<title>__mutex_alloc_int (13 samples, 0.01%)</title><rect x="131.8" y="437" width="0.2" height="15.0" fill="rgb(220,195,49)" rx="2" ry="2" />
<text  x="134.80" y="447.5" ></text>
</g>
<g >
<title>__memp_fget (20 samples, 0.02%)</title><rect x="69.7" y="453" width="0.3" height="15.0" fill="rgb(249,77,18)" rx="2" ry="2" />
<text  x="72.73" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator[] (13 samples, 0.01%)</title><rect x="460.0" y="325" width="0.2" height="15.0" fill="rgb(213,80,33)" rx="2" ry="2" />
<text  x="462.99" y="335.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::size (10 samples, 0.01%)</title><rect x="497.4" y="101" width="0.2" height="15.0" fill="rgb(219,176,31)" rx="2" ry="2" />
<text  x="500.44" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;CTxOut const*, std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; &gt;::base (10 samples, 0.01%)</title><rect x="499.1" y="277" width="0.2" height="15.0" fill="rgb(225,139,25)" rx="2" ry="2" />
<text  x="502.12" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_S_value (13 samples, 0.01%)</title><rect x="802.4" y="309" width="0.2" height="15.0" fill="rgb(210,61,16)" rx="2" ry="2" />
<text  x="805.45" y="319.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (17 samples, 0.02%)</title><rect x="152.2" y="485" width="0.2" height="15.0" fill="rgb(229,58,12)" rx="2" ry="2" />
<text  x="155.20" y="495.5" ></text>
</g>
<g >
<title>CWalletTx::CWalletTx (375 samples, 0.41%)</title><rect x="969.9" y="549" width="4.8" height="15.0" fill="rgb(248,135,34)" rx="2" ry="2" />
<text  x="972.89" y="559.5" ></text>
</g>
<g >
<title>__memp_bhfree (8 samples, 0.01%)</title><rect x="92.5" y="357" width="0.1" height="15.0" fill="rgb(242,196,46)" rx="2" ry="2" />
<text  x="95.49" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, unsigned long, true&gt;::_S_equals (34 samples, 0.04%)</title><rect x="52.8" y="517" width="0.4" height="15.0" fill="rgb(223,116,51)" rx="2" ry="2" />
<text  x="55.77" y="527.5" ></text>
</g>
<g >
<title>ShiftMessageB (9 samples, 0.01%)</title><rect x="164.4" y="149" width="0.2" height="15.0" fill="rgb(237,77,28)" rx="2" ry="2" />
<text  x="167.43" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_ptr (66 samples, 0.07%)</title><rect x="978.2" y="565" width="0.8" height="15.0" fill="rgb(208,216,49)" rx="2" ry="2" />
<text  x="981.19" y="575.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (14 samples, 0.02%)</title><rect x="1065.1" y="645" width="0.2" height="15.0" fill="rgb(237,85,42)" rx="2" ry="2" />
<text  x="1068.15" y="655.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;*, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (42 samples, 0.05%)</title><rect x="473.0" y="293" width="0.5" height="15.0" fill="rgb(215,16,42)" rx="2" ry="2" />
<text  x="476.00" y="303.5" ></text>
</g>
<g >
<title>UniqueLock&lt;AnnotatedMixin&lt;std::recursive_mutex&gt;, std::unique_lock&lt;std::recursive_mutex&gt; &gt;::~UniqueLock (130 samples, 0.14%)</title><rect x="1020.0" y="597" width="1.7" height="15.0" fill="rgb(235,20,38)" rx="2" ry="2" />
<text  x="1023.04" y="607.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned char*, unsigned char*, secure_allocator&lt;unsigned char&gt; &gt; (9 samples, 0.01%)</title><rect x="590.1" y="565" width="0.1" height="15.0" fill="rgb(206,181,46)" rx="2" ry="2" />
<text  x="593.07" y="575.5" ></text>
</g>
<g >
<title>CSHA256::Finalize (146 samples, 0.16%)</title><rect x="1122.3" y="629" width="1.8" height="15.0" fill="rgb(232,210,19)" rx="2" ry="2" />
<text  x="1125.25" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::size (20 samples, 0.02%)</title><rect x="478.0" y="405" width="0.3" height="15.0" fill="rgb(215,146,0)" rx="2" ry="2" />
<text  x="481.03" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, zero_after_free_allocator&lt;char&gt; &gt; (31 samples, 0.03%)</title><rect x="354.1" y="661" width="0.4" height="15.0" fill="rgb(217,216,14)" rx="2" ry="2" />
<text  x="357.07" y="671.5" ></text>
</g>
<g >
<title>LockedPool::free (843 samples, 0.91%)</title><rect x="628.4" y="581" width="10.8" height="15.0" fill="rgb(243,173,51)" rx="2" ry="2" />
<text  x="631.44" y="591.5" ></text>
</g>
<g >
<title>pop_lock (25 samples, 0.03%)</title><rect x="850.7" y="613" width="0.3" height="15.0" fill="rgb(210,193,28)" rx="2" ry="2" />
<text  x="853.73" y="623.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.01%)</title><rect x="90.4" y="213" width="0.1" height="15.0" fill="rgb(209,5,43)" rx="2" ry="2" />
<text  x="93.36" y="223.5" ></text>
</g>
<g >
<title>__os_malloc (22 samples, 0.02%)</title><rect x="73.8" y="469" width="0.3" height="15.0" fill="rgb(216,84,15)" rx="2" ry="2" />
<text  x="76.80" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::operator-- (10 samples, 0.01%)</title><rect x="1055.4" y="597" width="0.2" height="15.0" fill="rgb(239,42,8)" rx="2" ry="2" />
<text  x="1058.43" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false, false&gt;::operator (12 samples, 0.01%)</title><rect x="1089.8" y="533" width="0.1" height="15.0" fill="rgb(246,6,15)" rx="2" ry="2" />
<text  x="1092.78" y="543.5" ></text>
</g>
<g >
<title>std::local_Rb_tree_decrement (30 samples, 0.03%)</title><rect x="775.2" y="549" width="0.4" height="15.0" fill="rgb(236,66,25)" rx="2" ry="2" />
<text  x="778.22" y="559.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;std::vector&lt;uint256, std::allocator&lt;uint256&gt; &gt;&amp;&gt; (82 samples, 0.09%)</title><rect x="529.9" y="629" width="1.1" height="15.0" fill="rgb(208,205,5)" rx="2" ry="2" />
<text  x="532.95" y="639.5" ></text>
</g>
<g >
<title>CWalletTx::GetHash (47 samples, 0.05%)</title><rect x="33.7" y="645" width="0.6" height="15.0" fill="rgb(218,220,31)" rx="2" ry="2" />
<text  x="36.67" y="655.5" ></text>
</g>
<g >
<title>__bam_cmp (38 samples, 0.04%)</title><rect x="134.7" y="469" width="0.5" height="15.0" fill="rgb(252,206,50)" rx="2" ry="2" />
<text  x="137.71" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_S_key (18 samples, 0.02%)</title><rect x="685.4" y="549" width="0.2" height="15.0" fill="rgb(245,36,22)" rx="2" ry="2" />
<text  x="688.41" y="559.5" ></text>
</g>
<g >
<title>CScriptID::CScriptID (127 samples, 0.14%)</title><rect x="1120.6" y="693" width="1.7" height="15.0" fill="rgb(254,176,29)" rx="2" ry="2" />
<text  x="1123.63" y="703.5" ></text>
</g>
<g >
<title>CLockLocation::~CLockLocation (16 samples, 0.02%)</title><rect x="1020.8" y="485" width="0.2" height="15.0" fill="rgb(208,128,47)" rx="2" ry="2" />
<text  x="1023.81" y="495.5" ></text>
</g>
<g >
<title>[unknown] (18 samples, 0.02%)</title><rect x="131.5" y="373" width="0.3" height="15.0" fill="rgb(254,90,14)" rx="2" ry="2" />
<text  x="134.52" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt;::construct&lt;std::pair&lt;void*, CLockLocation&gt;, std::pair&lt;void*, CLockLocation&gt; &gt; (28 samples, 0.03%)</title><rect x="849.4" y="533" width="0.4" height="15.0" fill="rgb(240,2,36)" rx="2" ry="2" />
<text  x="852.40" y="543.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::erase (28 samples, 0.03%)</title><rect x="660.6" y="565" width="0.4" height="15.0" fill="rgb(229,160,9)" rx="2" ry="2" />
<text  x="663.64" y="575.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (8 samples, 0.01%)</title><rect x="543.4" y="597" width="0.1" height="15.0" fill="rgb(244,219,5)" rx="2" ry="2" />
<text  x="546.36" y="607.5" ></text>
</g>
<g >
<title>__os_id (12 samples, 0.01%)</title><rect x="339.3" y="581" width="0.2" height="15.0" fill="rgb(234,74,53)" rx="2" ry="2" />
<text  x="342.33" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;CChainState, std::default_delete&lt;CChainState&gt; &gt;::get (10 samples, 0.01%)</title><rect x="959.9" y="613" width="0.1" height="15.0" fill="rgb(238,133,47)" rx="2" ry="2" />
<text  x="962.90" y="623.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (23 samples, 0.02%)</title><rect x="840.8" y="581" width="0.3" height="15.0" fill="rgb(214,111,35)" rx="2" ry="2" />
<text  x="843.83" y="591.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::~prevector (10 samples, 0.01%)</title><rect x="432.8" y="341" width="0.2" height="15.0" fill="rgb(248,65,53)" rx="2" ry="2" />
<text  x="435.85" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (24 samples, 0.03%)</title><rect x="1003.7" y="549" width="0.3" height="15.0" fill="rgb(208,211,30)" rx="2" ry="2" />
<text  x="1006.65" y="559.5" ></text>
</g>
<g >
<title>LockedPool::alloc (820 samples, 0.89%)</title><rect x="609.3" y="581" width="10.6" height="15.0" fill="rgb(244,51,31)" rx="2" ry="2" />
<text  x="612.35" y="591.5" ></text>
</g>
<g >
<title>DecodeBase58Check (175 samples, 0.19%)</title><rect x="1054.1" y="661" width="2.2" height="15.0" fill="rgb(230,48,49)" rx="2" ry="2" />
<text  x="1057.10" y="671.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (190 samples, 0.21%)</title><rect x="415.9" y="501" width="2.5" height="15.0" fill="rgb(211,176,16)" rx="2" ry="2" />
<text  x="418.94" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;uint256, CBlockIndex*&gt; &gt; (36 samples, 0.04%)</title><rect x="45.4" y="565" width="0.4" height="15.0" fill="rgb(212,15,50)" rx="2" ry="2" />
<text  x="48.37" y="575.5" ></text>
</g>
<g >
<title>std::mutex::lock (43 samples, 0.05%)</title><rect x="946.3" y="517" width="0.6" height="15.0" fill="rgb(223,117,33)" rx="2" ry="2" />
<text  x="949.32" y="527.5" ></text>
</g>
<g >
<title>__bam_search (639 samples, 0.69%)</title><rect x="82.5" y="421" width="8.2" height="15.0" fill="rgb(251,169,8)" rx="2" ry="2" />
<text  x="85.54" y="431.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (60 samples, 0.07%)</title><rect x="373.0" y="565" width="0.8" height="15.0" fill="rgb(223,18,22)" rx="2" ry="2" />
<text  x="376.02" y="575.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, unsigned int&gt; (36 samples, 0.04%)</title><rect x="492.9" y="245" width="0.4" height="15.0" fill="rgb(229,182,32)" rx="2" ry="2" />
<text  x="495.89" y="255.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (14 samples, 0.02%)</title><rect x="948.8" y="469" width="0.1" height="15.0" fill="rgb(210,179,47)" rx="2" ry="2" />
<text  x="951.76" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::end (10 samples, 0.01%)</title><rect x="686.1" y="581" width="0.1" height="15.0" fill="rgb(221,103,52)" rx="2" ry="2" />
<text  x="689.09" y="591.5" ></text>
</g>
<g >
<title>_mm_sha256rnds2_epu32 (100 samples, 0.11%)</title><rect x="1112.9" y="357" width="1.3" height="15.0" fill="rgb(205,139,52)" rx="2" ry="2" />
<text  x="1115.88" y="367.5" ></text>
</g>
<g >
<title>ReadKeyValue (58,391 samples, 63.37%)</title><rect x="358.8" y="693" width="747.8" height="15.0" fill="rgb(251,135,39)" rx="2" ry="2" />
<text  x="361.83" y="703.5" >ReadKeyValue</text>
</g>
<g >
<title>leveldb::TableBuilder::Add (14 samples, 0.02%)</title><rect x="1147.5" y="629" width="0.2" height="15.0" fill="rgb(229,113,22)" rx="2" ry="2" />
<text  x="1150.52" y="639.5" ></text>
</g>
<g >
<title>__db_put (686 samples, 0.74%)</title><rect x="133.0" y="549" width="8.8" height="15.0" fill="rgb(210,171,40)" rx="2" ry="2" />
<text  x="136.05" y="559.5" ></text>
</g>
<g >
<title>SerializeTransaction&lt;CHashWriter, CTransaction&gt; (183 samples, 0.20%)</title><rect x="164.7" y="469" width="2.3" height="15.0" fill="rgb(219,191,20)" rx="2" ry="2" />
<text  x="167.69" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_value (12 samples, 0.01%)</title><rect x="1158.8" y="741" width="0.1" height="15.0" fill="rgb(232,212,21)" rx="2" ry="2" />
<text  x="1161.76" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::insert&lt;char const*, void&gt; (9,760 samples, 10.59%)</title><rect x="177.3" y="661" width="125.0" height="15.0" fill="rgb(212,118,8)" rx="2" ry="2" />
<text  x="180.29" y="671.5" >std::vector&lt;cha..</text>
</g>
<g >
<title>CHashWriter::write (17 samples, 0.02%)</title><rect x="506.7" y="101" width="0.2" height="15.0" fill="rgb(210,217,36)" rx="2" ry="2" />
<text  x="509.65" y="111.5" ></text>
</g>
<g >
<title>__bam_get_root (29 samples, 0.03%)</title><rect x="149.6" y="485" width="0.4" height="15.0" fill="rgb(213,16,22)" rx="2" ry="2" />
<text  x="152.64" y="495.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;&amp;&gt; (767 samples, 0.83%)</title><rect x="446.7" y="405" width="9.8" height="15.0" fill="rgb(220,210,43)" rx="2" ry="2" />
<text  x="449.65" y="415.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;::operator (8 samples, 0.01%)</title><rect x="774.8" y="549" width="0.1" height="15.0" fill="rgb(243,172,39)" rx="2" ry="2" />
<text  x="777.82" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::end (10 samples, 0.01%)</title><rect x="537.9" y="581" width="0.1" height="15.0" fill="rgb(205,206,0)" rx="2" ry="2" />
<text  x="540.88" y="591.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CSizeComputer, 28u, unsigned char&gt; (46 samples, 0.05%)</title><rect x="1040.3" y="357" width="0.6" height="15.0" fill="rgb(247,112,52)" rx="2" ry="2" />
<text  x="1043.27" y="367.5" ></text>
</g>
<g >
<title>Dbc::get (3,787 samples, 4.11%)</title><rect x="302.3" y="677" width="48.5" height="15.0" fill="rgb(236,111,27)" rx="2" ry="2" />
<text  x="305.29" y="687.5" >Dbc:..</text>
</g>
<g >
<title>std::_Function_handler&lt;CBlockIndex*  (110 samples, 0.12%)</title><rect x="44.4" y="645" width="1.4" height="15.0" fill="rgb(213,184,45)" rx="2" ry="2" />
<text  x="47.44" y="655.5" ></text>
</g>
<g >
<title>__dbc_iget (432 samples, 0.47%)</title><rect x="96.9" y="469" width="5.5" height="15.0" fill="rgb(226,159,23)" rx="2" ry="2" />
<text  x="99.91" y="479.5" ></text>
</g>
<g >
<title>CTxIn::Serialize&lt;CHashWriter&gt; (271 samples, 0.29%)</title><rect x="1137.3" y="405" width="3.5" height="15.0" fill="rgb(240,112,31)" rx="2" ry="2" />
<text  x="1140.31" y="415.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, CScript&gt; (271 samples, 0.29%)</title><rect x="1137.3" y="373" width="3.5" height="15.0" fill="rgb(248,119,45)" rx="2" ry="2" />
<text  x="1140.31" y="383.5" ></text>
</g>
<g >
<title>SerializeTransaction&lt;CHashWriter, CTransaction&gt; (361 samples, 0.39%)</title><rect x="1114.6" y="405" width="4.6" height="15.0" fill="rgb(251,6,42)" rx="2" ry="2" />
<text  x="1117.57" y="415.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, 28u, unsigned char&gt; (201 samples, 0.22%)</title><rect x="439.0" y="197" width="2.6" height="15.0" fill="rgb(254,154,18)" rx="2" ry="2" />
<text  x="442.01" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_insert_node (31 samples, 0.03%)</title><rect x="630.0" y="517" width="0.4" height="15.0" fill="rgb(228,151,9)" rx="2" ry="2" />
<text  x="633.03" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;CTxIn const*, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt;::base (9 samples, 0.01%)</title><rect x="1043.5" y="645" width="0.1" height="15.0" fill="rgb(245,116,46)" rx="2" ry="2" />
<text  x="1046.48" y="655.5" ></text>
</g>
<g >
<title>CTransaction::CTransaction (550 samples, 0.60%)</title><rect x="1137.3" y="581" width="7.1" height="15.0" fill="rgb(235,76,12)" rx="2" ry="2" />
<text  x="1140.31" y="591.5" ></text>
</g>
<g >
<title>__bam_defcmp (12 samples, 0.01%)</title><rect x="149.5" y="469" width="0.1" height="15.0" fill="rgb(210,187,52)" rx="2" ry="2" />
<text  x="152.49" y="479.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned int const*, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt; &gt;, unsigned int*&gt; (35 samples, 0.04%)</title><rect x="853.0" y="549" width="0.4" height="15.0" fill="rgb(244,45,50)" rx="2" ry="2" />
<text  x="855.99" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;::_M_addr (12 samples, 0.01%)</title><rect x="1006.2" y="549" width="0.1" height="15.0" fill="rgb(229,118,50)" rx="2" ry="2" />
<text  x="1009.19" y="559.5" ></text>
</g>
<g >
<title>CSHA256::Write (127 samples, 0.14%)</title><rect x="1120.6" y="629" width="1.7" height="15.0" fill="rgb(227,195,36)" rx="2" ry="2" />
<text  x="1123.63" y="639.5" ></text>
</g>
<g >
<title>__memp_alloc (521 samples, 0.57%)</title><rect x="116.7" y="485" width="6.7" height="15.0" fill="rgb(212,177,41)" rx="2" ry="2" />
<text  x="119.74" y="495.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (9 samples, 0.01%)</title><rect x="37.7" y="581" width="0.1" height="15.0" fill="rgb(233,40,26)" rx="2" ry="2" />
<text  x="40.68" y="591.5" ></text>
</g>
<g >
<title>WriteCompactSize&lt;CHashWriter&gt; (19 samples, 0.02%)</title><rect x="508.2" y="293" width="0.2" height="15.0" fill="rgb(222,196,43)" rx="2" ry="2" />
<text  x="511.20" y="303.5" ></text>
</g>
<g >
<title>CTransaction::ComputeWitnessHash (183 samples, 0.20%)</title><rect x="164.7" y="549" width="2.3" height="15.0" fill="rgb(244,144,4)" rx="2" ry="2" />
<text  x="167.69" y="559.5" ></text>
</g>
<g >
<title>CTxIn::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (279 samples, 0.30%)</title><rect x="1140.8" y="389" width="3.6" height="15.0" fill="rgb(216,1,35)" rx="2" ry="2" />
<text  x="1143.78" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (55 samples, 0.06%)</title><rect x="615.0" y="501" width="0.7" height="15.0" fill="rgb(211,98,54)" rx="2" ry="2" />
<text  x="617.98" y="511.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (32 samples, 0.03%)</title><rect x="94.8" y="421" width="0.4" height="15.0" fill="rgb(210,27,13)" rx="2" ry="2" />
<text  x="97.77" y="431.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (40 samples, 0.04%)</title><rect x="417.7" y="469" width="0.5" height="15.0" fill="rgb(247,51,53)" rx="2" ry="2" />
<text  x="420.74" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_S_max_size (9 samples, 0.01%)</title><rect x="819.9" y="421" width="0.1" height="15.0" fill="rgb(242,31,33)" rx="2" ry="2" />
<text  x="822.90" y="431.5" ></text>
</g>
<g >
<title>_mm_sha256msg2_epu32 (8 samples, 0.01%)</title><rect x="1131.6" y="613" width="0.1" height="15.0" fill="rgb(239,149,21)" rx="2" ry="2" />
<text  x="1134.64" y="623.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (41 samples, 0.04%)</title><rect x="338.3" y="533" width="0.5" height="15.0" fill="rgb(234,148,30)" rx="2" ry="2" />
<text  x="341.32" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_erase_at_end (323 samples, 0.35%)</title><rect x="371.9" y="597" width="4.2" height="15.0" fill="rgb(229,202,32)" rx="2" ry="2" />
<text  x="374.91" y="607.5" ></text>
</g>
<g >
<title>[unknown] (55 samples, 0.06%)</title><rect x="89.8" y="325" width="0.7" height="15.0" fill="rgb(227,144,30)" rx="2" ry="2" />
<text  x="92.80" y="335.5" ></text>
</g>
<g >
<title>_mm_sha256rnds2_epu32 (85 samples, 0.09%)</title><rect x="1139.2" y="149" width="1.1" height="15.0" fill="rgb(225,183,43)" rx="2" ry="2" />
<text  x="1142.25" y="159.5" ></text>
</g>
<g >
<title>CHashWriter::write (15 samples, 0.02%)</title><rect x="489.1" y="101" width="0.2" height="15.0" fill="rgb(227,165,54)" rx="2" ry="2" />
<text  x="492.11" y="111.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (66 samples, 0.07%)</title><rect x="158.2" y="549" width="0.9" height="15.0" fill="rgb(225,10,36)" rx="2" ry="2" />
<text  x="161.24" y="559.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (13 samples, 0.01%)</title><rect x="370.9" y="549" width="0.1" height="15.0" fill="rgb(221,214,34)" rx="2" ry="2" />
<text  x="373.85" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (418 samples, 0.45%)</title><rect x="962.0" y="613" width="5.3" height="15.0" fill="rgb(233,174,18)" rx="2" ry="2" />
<text  x="964.95" y="623.5" ></text>
</g>
<g >
<title>__db_lget (27 samples, 0.03%)</title><rect x="143.9" y="485" width="0.4" height="15.0" fill="rgb(213,82,37)" rx="2" ry="2" />
<text  x="146.94" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~vector (77 samples, 0.08%)</title><rect x="475.3" y="373" width="1.0" height="15.0" fill="rgb(210,104,24)" rx="2" ry="2" />
<text  x="478.28" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned char&gt;::destroy&lt;unsigned char&gt; (10 samples, 0.01%)</title><rect x="628.0" y="597" width="0.1" height="15.0" fill="rgb(244,115,17)" rx="2" ry="2" />
<text  x="631.02" y="607.5" ></text>
</g>
<g >
<title>CHash256::Write (23 samples, 0.02%)</title><rect x="1058.6" y="661" width="0.3" height="15.0" fill="rgb(232,95,50)" rx="2" ry="2" />
<text  x="1061.62" y="671.5" ></text>
</g>
<g >
<title>ser_readdata32&lt;CDataStream&gt; (50 samples, 0.05%)</title><rect x="40.9" y="533" width="0.6" height="15.0" fill="rgb(214,28,32)" rx="2" ry="2" />
<text  x="43.89" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_addr (8 samples, 0.01%)</title><rect x="415.4" y="501" width="0.1" height="15.0" fill="rgb(224,62,54)" rx="2" ry="2" />
<text  x="418.35" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (162 samples, 0.18%)</title><rect x="416.2" y="485" width="2.0" height="15.0" fill="rgb(220,22,36)" rx="2" ry="2" />
<text  x="419.17" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::clear (22 samples, 0.02%)</title><rect x="477.7" y="405" width="0.3" height="15.0" fill="rgb(207,48,31)" rx="2" ry="2" />
<text  x="480.72" y="415.5" ></text>
</g>
<g >
<title>__bam_vrfy_subtree (10 samples, 0.01%)</title><rect x="1144.7" y="533" width="0.1" height="15.0" fill="rgb(208,159,24)" rx="2" ry="2" />
<text  x="1147.70" y="543.5" ></text>
</g>
<g >
<title>CScriptID::CScriptID (1,547 samples, 1.68%)</title><rect x="738.0" y="613" width="19.8" height="15.0" fill="rgb(247,70,9)" rx="2" ry="2" />
<text  x="741.00" y="623.5" ></text>
</g>
<g >
<title>__memp_alloc (302 samples, 0.33%)</title><rect x="324.2" y="581" width="3.9" height="15.0" fill="rgb(208,161,0)" rx="2" ry="2" />
<text  x="327.22" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (90 samples, 0.10%)</title><rect x="551.2" y="581" width="1.2" height="15.0" fill="rgb(205,81,18)" rx="2" ry="2" />
<text  x="554.23" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (58 samples, 0.06%)</title><rect x="536.1" y="581" width="0.8" height="15.0" fill="rgb(218,0,36)" rx="2" ry="2" />
<text  x="539.11" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_deallocate (10 samples, 0.01%)</title><rect x="1164.0" y="741" width="0.1" height="15.0" fill="rgb(220,193,30)" rx="2" ry="2" />
<text  x="1166.99" y="751.5" ></text>
</g>
<g >
<title>__db_lput (13 samples, 0.01%)</title><rect x="139.6" y="485" width="0.2" height="15.0" fill="rgb(252,14,53)" rx="2" ry="2" />
<text  x="142.60" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;CTransaction const,  (28 samples, 0.03%)</title><rect x="1024.9" y="645" width="0.4" height="15.0" fill="rgb(218,226,45)" rx="2" ry="2" />
<text  x="1027.90" y="655.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (8 samples, 0.01%)</title><rect x="789.3" y="565" width="0.1" height="15.0" fill="rgb(222,60,24)" rx="2" ry="2" />
<text  x="792.26" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;char*&gt;, char*, zero_after_free_allocator&lt;char&gt; &gt; (117 samples, 0.13%)</title><rect x="293.8" y="597" width="1.5" height="15.0" fill="rgb(205,0,49)" rx="2" ry="2" />
<text  x="296.78" y="607.5" ></text>
</g>
<g >
<title>std::allocator&lt;CTxOut&gt;::allocator (14 samples, 0.02%)</title><rect x="1062.4" y="469" width="0.2" height="15.0" fill="rgb(240,98,27)" rx="2" ry="2" />
<text  x="1065.38" y="479.5" ></text>
</g>
<g >
<title>CSHA256::Write (299 samples, 0.32%)</title><rect x="1128.3" y="677" width="3.8" height="15.0" fill="rgb(249,48,25)" rx="2" ry="2" />
<text  x="1131.29" y="687.5" ></text>
</g>
<g >
<title>UniqueLock&lt;AnnotatedMixin&lt;std::recursive_mutex&gt;, std::unique_lock&lt;std::recursive_mutex&gt; &gt;::Enter (716 samples, 0.78%)</title><rect x="942.7" y="581" width="9.2" height="15.0" fill="rgb(228,167,47)" rx="2" ry="2" />
<text  x="945.74" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_addr (11 samples, 0.01%)</title><rect x="552.1" y="517" width="0.1" height="15.0" fill="rgb(206,186,8)" rx="2" ry="2" />
<text  x="555.06" y="527.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (415 samples, 0.45%)</title><rect x="74.6" y="453" width="5.3" height="15.0" fill="rgb(226,22,30)" rx="2" ry="2" />
<text  x="77.57" y="463.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (7,520 samples, 8.16%)</title><rect x="428.1" y="533" width="96.3" height="15.0" fill="rgb(237,216,22)" rx="2" ry="2" />
<text  x="431.12" y="543.5" >std::__shar..</text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (8 samples, 0.01%)</title><rect x="519.0" y="261" width="0.1" height="15.0" fill="rgb(246,5,16)" rx="2" ry="2" />
<text  x="522.00" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned char const*, unsigned char*&gt; (8 samples, 0.01%)</title><rect x="768.1" y="341" width="0.1" height="15.0" fill="rgb(228,127,47)" rx="2" ry="2" />
<text  x="771.10" y="351.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::const_iterator::const_iterator (9 samples, 0.01%)</title><rect x="1151.6" y="741" width="0.1" height="15.0" fill="rgb(235,110,47)" rx="2" ry="2" />
<text  x="1154.58" y="751.5" ></text>
</g>
<g >
<title>CRIPEMD160::Finalize (43 samples, 0.05%)</title><rect x="865.9" y="613" width="0.6" height="15.0" fill="rgb(251,111,34)" rx="2" ry="2" />
<text  x="868.93" y="623.5" ></text>
</g>
<g >
<title>CKeyPool::Unserialize&lt;CDataStream&gt; (8 samples, 0.01%)</title><rect x="371.1" y="645" width="0.1" height="15.0" fill="rgb(254,26,31)" rx="2" ry="2" />
<text  x="374.13" y="655.5" ></text>
</g>
<g >
<title>std::less&lt;COutPoint&gt;::operator (21 samples, 0.02%)</title><rect x="929.8" y="581" width="0.3" height="15.0" fill="rgb(231,183,45)" rx="2" ry="2" />
<text  x="932.78" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;::operator* (23 samples, 0.02%)</title><rect x="825.5" y="613" width="0.3" height="15.0" fill="rgb(239,44,26)" rx="2" ry="2" />
<text  x="828.55" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::empty (74 samples, 0.08%)</title><rect x="516.2" y="261" width="0.9" height="15.0" fill="rgb(219,174,10)" rx="2" ry="2" />
<text  x="519.17" y="271.5" ></text>
</g>
<g >
<title>SerializeTransaction&lt;CHashWriter, CTransaction&gt; (1,508 samples, 1.64%)</title><rect x="502.4" y="357" width="19.3" height="15.0" fill="rgb(217,45,39)" rx="2" ry="2" />
<text  x="505.38" y="367.5" ></text>
</g>
<g >
<title>[unknown] (24 samples, 0.03%)</title><rect x="328.3" y="533" width="0.4" height="15.0" fill="rgb(222,109,36)" rx="2" ry="2" />
<text  x="331.35" y="543.5" ></text>
</g>
<g >
<title>CHash256::Write (17 samples, 0.02%)</title><rect x="507.9" y="165" width="0.2" height="15.0" fill="rgb(224,71,13)" rx="2" ry="2" />
<text  x="510.89" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (42 samples, 0.05%)</title><rect x="422.7" y="517" width="0.6" height="15.0" fill="rgb(207,162,46)" rx="2" ry="2" />
<text  x="425.72" y="527.5" ></text>
</g>
<g >
<title>UniqueLock&lt;AnnotatedMixin&lt;std::recursive_mutex&gt;, std::unique_lock&lt;std::recursive_mutex&gt; &gt;::Enter (549 samples, 0.60%)</title><rect x="679.7" y="629" width="7.0" height="15.0" fill="rgb(253,166,31)" rx="2" ry="2" />
<text  x="682.68" y="639.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream&gt; (43 samples, 0.05%)</title><rect x="363.2" y="469" width="0.6" height="15.0" fill="rgb(220,221,50)" rx="2" ry="2" />
<text  x="366.23" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound (74 samples, 0.08%)</title><rect x="538.3" y="581" width="0.9" height="15.0" fill="rgb(231,166,37)" rx="2" ry="2" />
<text  x="541.27" y="591.5" ></text>
</g>
<g >
<title>__memp_fput (8 samples, 0.01%)</title><rect x="68.0" y="501" width="0.1" height="15.0" fill="rgb(244,182,46)" rx="2" ry="2" />
<text  x="70.98" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned char&gt;::construct&lt;unsigned char&gt; (76 samples, 0.08%)</title><rect x="818.8" y="405" width="1.0" height="15.0" fill="rgb(249,74,16)" rx="2" ry="2" />
<text  x="821.81" y="415.5" ></text>
</g>
<g >
<title>boost::detail::variant::visitation_impl_invoke&lt;boost::detail::variant::destroyer, void*, WitnessV0KeyHash, boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt;::has_fallback_type_&gt; (15 samples, 0.02%)</title><rect x="771.4" y="533" width="0.1" height="15.0" fill="rgb(218,139,13)" rx="2" ry="2" />
<text  x="774.35" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::_M_ptr (15 samples, 0.02%)</title><rect x="927.9" y="533" width="0.2" height="15.0" fill="rgb(237,79,7)" rx="2" ry="2" />
<text  x="930.91" y="543.5" ></text>
</g>
<g >
<title>std::multimap&lt;unsigned long, char*, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::end (11 samples, 0.01%)</title><rect x="566.3" y="517" width="0.2" height="15.0" fill="rgb(232,92,35)" rx="2" ry="2" />
<text  x="569.33" y="527.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, int&amp;&gt; (27 samples, 0.03%)</title><rect x="369.7" y="613" width="0.3" height="15.0" fill="rgb(243,149,42)" rx="2" ry="2" />
<text  x="372.66" y="623.5" ></text>
</g>
<g >
<title>ser_writedata32&lt;CHashWriter&gt; (16 samples, 0.02%)</title><rect x="499.9" y="309" width="0.2" height="15.0" fill="rgb(227,19,7)" rx="2" ry="2" />
<text  x="502.90" y="319.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, long&amp;&gt; (80 samples, 0.09%)</title><rect x="450.8" y="293" width="1.0" height="15.0" fill="rgb(233,222,25)" rx="2" ry="2" />
<text  x="453.76" y="303.5" ></text>
</g>
<g >
<title>__db_lput (36 samples, 0.04%)</title><rect x="81.7" y="437" width="0.4" height="15.0" fill="rgb(217,124,23)" rx="2" ry="2" />
<text  x="84.65" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_begin (8 samples, 0.01%)</title><rect x="567.1" y="485" width="0.1" height="15.0" fill="rgb(244,195,33)" rx="2" ry="2" />
<text  x="570.11" y="495.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (32 samples, 0.03%)</title><rect x="127.5" y="437" width="0.4" height="15.0" fill="rgb(247,50,11)" rx="2" ry="2" />
<text  x="130.51" y="447.5" ></text>
</g>
<g >
<title>CSHA256::Write (153 samples, 0.17%)</title><rect x="1126.2" y="597" width="1.9" height="15.0" fill="rgb(213,52,40)" rx="2" ry="2" />
<text  x="1129.18" y="607.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (26 samples, 0.03%)</title><rect x="133.5" y="469" width="0.3" height="15.0" fill="rgb(223,83,53)" rx="2" ry="2" />
<text  x="136.51" y="479.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (98 samples, 0.11%)</title><rect x="561.2" y="629" width="1.3" height="15.0" fill="rgb(209,178,37)" rx="2" ry="2" />
<text  x="564.23" y="639.5" ></text>
</g>
<g >
<title>local_Rb_tree_increment (11 samples, 0.01%)</title><rect x="548.3" y="549" width="0.2" height="15.0" fill="rgb(217,40,31)" rx="2" ry="2" />
<text  x="551.33" y="559.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, uint256&gt; (28 samples, 0.03%)</title><rect x="505.2" y="165" width="0.3" height="15.0" fill="rgb(249,94,39)" rx="2" ry="2" />
<text  x="508.18" y="175.5" ></text>
</g>
<g >
<title>__db_vrfy_getpageinfo (778 samples, 0.84%)</title><rect x="81.2" y="501" width="9.9" height="15.0" fill="rgb(250,36,1)" rx="2" ry="2" />
<text  x="84.15" y="511.5" ></text>
</g>
<g >
<title>_int_malloc (29 samples, 0.03%)</title><rect x="470.0" y="245" width="0.4" height="15.0" fill="rgb(248,80,39)" rx="2" ry="2" />
<text  x="473.03" y="255.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;unsigned char*&gt;::move_iterator (8 samples, 0.01%)</title><rect x="1097.7" y="597" width="0.1" height="15.0" fill="rgb(209,160,23)" rx="2" ry="2" />
<text  x="1100.73" y="607.5" ></text>
</g>
<g >
<title>CWalletTx::Unserialize&lt;CDataStream&gt; (901 samples, 0.98%)</title><rect x="1107.7" y="693" width="11.5" height="15.0" fill="rgb(242,189,37)" rx="2" ry="2" />
<text  x="1110.65" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::pop_back (47 samples, 0.05%)</title><rect x="1020.4" y="549" width="0.6" height="15.0" fill="rgb(246,8,28)" rx="2" ry="2" />
<text  x="1023.42" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;CTransaction const,  (8 samples, 0.01%)</title><rect x="1026.2" y="661" width="0.1" height="15.0" fill="rgb(254,166,41)" rx="2" ry="2" />
<text  x="1029.20" y="671.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl::_Vector_impl (26 samples, 0.03%)</title><rect x="766.6" y="421" width="0.4" height="15.0" fill="rgb(209,219,40)" rx="2" ry="2" />
<text  x="769.63" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned int const*, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt; &gt;::__normal_iterator (9 samples, 0.01%)</title><rect x="853.5" y="597" width="0.1" height="15.0" fill="rgb(237,213,26)" rx="2" ry="2" />
<text  x="856.48" y="607.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, char*&gt; &gt;*&amp;, std::_Rb_tree_node_base*&amp;, true&gt; (9 samples, 0.01%)</title><rect x="802.2" y="325" width="0.1" height="15.0" fill="rgb(253,187,17)" rx="2" ry="2" />
<text  x="805.16" y="335.5" ></text>
</g>
<g >
<title>uint160::uint160 (11 samples, 0.01%)</title><rect x="715.8" y="597" width="0.1" height="15.0" fill="rgb(242,88,38)" rx="2" ry="2" />
<text  x="718.80" y="607.5" ></text>
</g>
<g >
<title>__db_vrfy_getpageinfo (130 samples, 0.14%)</title><rect x="91.2" y="485" width="1.6" height="15.0" fill="rgb(220,168,34)" rx="2" ry="2" />
<text  x="94.16" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;char*, std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;&amp;&gt; (84 samples, 0.09%)</title><rect x="807.1" y="325" width="1.1" height="15.0" fill="rgb(233,20,53)" rx="2" ry="2" />
<text  x="810.10" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;::_Rb_tree_iterator (10 samples, 0.01%)</title><rect x="777.6" y="565" width="0.1" height="15.0" fill="rgb(254,103,41)" rx="2" ry="2" />
<text  x="780.58" y="575.5" ></text>
</g>
<g >
<title>[unknown] (27 samples, 0.03%)</title><rect x="123.5" y="389" width="0.3" height="15.0" fill="rgb(217,154,34)" rx="2" ry="2" />
<text  x="126.48" y="399.5" ></text>
</g>
<g >
<title>_mm_add_epi32 (15 samples, 0.02%)</title><rect x="1138.8" y="149" width="0.2" height="15.0" fill="rgb(221,47,50)" rx="2" ry="2" />
<text  x="1141.80" y="159.5" ></text>
</g>
<g >
<title>__os_malloc (9 samples, 0.01%)</title><rect x="78.7" y="373" width="0.1" height="15.0" fill="rgb(215,70,47)" rx="2" ry="2" />
<text  x="81.69" y="383.5" ></text>
</g>
<g >
<title>CKey::~CKey (1,023 samples, 1.11%)</title><rect x="626.5" y="677" width="13.1" height="15.0" fill="rgb(244,147,43)" rx="2" ry="2" />
<text  x="629.52" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (114 samples, 0.12%)</title><rect x="928.2" y="581" width="1.5" height="15.0" fill="rgb(219,103,0)" rx="2" ry="2" />
<text  x="931.22" y="591.5" ></text>
</g>
<g >
<title>__memp_fget (44 samples, 0.05%)</title><rect x="70.4" y="469" width="0.5" height="15.0" fill="rgb(235,97,36)" rx="2" ry="2" />
<text  x="73.37" y="479.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.01%)</title><rect x="123.7" y="341" width="0.1" height="15.0" fill="rgb(212,168,38)" rx="2" ry="2" />
<text  x="126.70" y="351.5" ></text>
</g>
<g >
<title>WriteLE64 (11 samples, 0.01%)</title><rect x="714.9" y="565" width="0.1" height="15.0" fill="rgb(209,137,5)" rx="2" ry="2" />
<text  x="717.89" y="575.5" ></text>
</g>
<g >
<title>__db_tas_mutex_readlock (8 samples, 0.01%)</title><rect x="105.1" y="389" width="0.1" height="15.0" fill="rgb(230,88,29)" rx="2" ry="2" />
<text  x="108.06" y="399.5" ></text>
</g>
<g >
<title>secp256k1_fe_mul (15 samples, 0.02%)</title><rect x="1149.6" y="597" width="0.2" height="15.0" fill="rgb(218,140,45)" rx="2" ry="2" />
<text  x="1152.61" y="607.5" ></text>
</g>
<g >
<title>CHash160::Write (11 samples, 0.01%)</title><rect x="736.5" y="581" width="0.2" height="15.0" fill="rgb(221,41,0)" rx="2" ry="2" />
<text  x="739.53" y="591.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (12 samples, 0.01%)</title><rect x="1102.5" y="597" width="0.2" height="15.0" fill="rgb(252,98,25)" rx="2" ry="2" />
<text  x="1105.51" y="607.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (14 samples, 0.02%)</title><rect x="137.1" y="453" width="0.2" height="15.0" fill="rgb(207,99,41)" rx="2" ry="2" />
<text  x="140.08" y="463.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt; (492 samples, 0.53%)</title><rect x="503.1" y="341" width="6.3" height="15.0" fill="rgb(246,30,0)" rx="2" ry="2" />
<text  x="506.05" y="351.5" ></text>
</g>
<g >
<title>std::forward&lt;char const&amp;&gt; (13 samples, 0.01%)</title><rect x="38.3" y="533" width="0.2" height="15.0" fill="rgb(247,19,6)" rx="2" ry="2" />
<text  x="41.29" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned char&gt;::allocator (14 samples, 0.02%)</title><rect x="766.8" y="405" width="0.2" height="15.0" fill="rgb(228,224,41)" rx="2" ry="2" />
<text  x="769.78" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;CMerkleTx, std::allocator&lt;CMerkleTx&gt; &gt;::~vector (60 samples, 0.07%)</title><rect x="556.6" y="629" width="0.7" height="15.0" fill="rgb(226,180,49)" rx="2" ry="2" />
<text  x="559.56" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;CTxOut const*, std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; &gt; (20 samples, 0.02%)</title><rect x="499.0" y="293" width="0.3" height="15.0" fill="rgb(219,189,42)" rx="2" ry="2" />
<text  x="501.99" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (148 samples, 0.16%)</title><rect x="1090.7" y="549" width="1.9" height="15.0" fill="rgb(223,32,51)" rx="2" ry="2" />
<text  x="1093.68" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt; &gt;::base (11 samples, 0.01%)</title><rect x="176.4" y="645" width="0.1" height="15.0" fill="rgb(205,118,19)" rx="2" ry="2" />
<text  x="179.36" y="655.5" ></text>
</g>
<g >
<title>_int_free (15 samples, 0.02%)</title><rect x="173.6" y="661" width="0.2" height="15.0" fill="rgb(210,71,8)" rx="2" ry="2" />
<text  x="176.64" y="671.5" ></text>
</g>
<g >
<title>__db_vrfy_putpageinfo (414 samples, 0.45%)</title><rect x="110.2" y="501" width="5.3" height="15.0" fill="rgb(213,197,38)" rx="2" ry="2" />
<text  x="113.24" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;char* const&amp;&gt;, std::tuple&lt;&gt; &gt; (142 samples, 0.15%)</title><rect x="1086.7" y="533" width="1.8" height="15.0" fill="rgb(225,2,29)" rx="2" ry="2" />
<text  x="1089.68" y="543.5" ></text>
</g>
<g >
<title>ShiftMessageB (10 samples, 0.01%)</title><rect x="1123.9" y="581" width="0.2" height="15.0" fill="rgb(222,158,46)" rx="2" ry="2" />
<text  x="1126.94" y="591.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (15 samples, 0.02%)</title><rect x="572.1" y="533" width="0.2" height="15.0" fill="rgb(236,95,33)" rx="2" ry="2" />
<text  x="575.08" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_S_key (68 samples, 0.07%)</title><rect x="683.6" y="533" width="0.8" height="15.0" fill="rgb(234,41,19)" rx="2" ry="2" />
<text  x="686.55" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_S_key (39 samples, 0.04%)</title><rect x="930.1" y="597" width="0.5" height="15.0" fill="rgb(227,0,51)" rx="2" ry="2" />
<text  x="933.05" y="607.5" ></text>
</g>
<g >
<title>_mm_set_epi64x (9 samples, 0.01%)</title><rect x="165.8" y="133" width="0.1" height="15.0" fill="rgb(213,210,18)" rx="2" ry="2" />
<text  x="168.81" y="143.5" ></text>
</g>
<g >
<title>std::sort&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, CBlockIndex*&gt;*, std::vector&lt;std::pair&lt;int, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;int, CBlockIndex*&gt; &gt; &gt; &gt; &gt; (27 samples, 0.03%)</title><rect x="48.8" y="677" width="0.4" height="15.0" fill="rgb(247,173,36)" rx="2" ry="2" />
<text  x="51.82" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::size (12 samples, 0.01%)</title><rect x="1038.6" y="533" width="0.1" height="15.0" fill="rgb(252,64,2)" rx="2" ry="2" />
<text  x="1041.59" y="543.5" ></text>
</g>
<g >
<title>CWallet::AddKeyPubKeyInner (460 samples, 0.50%)</title><rect x="1122.3" y="709" width="5.8" height="15.0" fill="rgb(254,139,6)" rx="2" ry="2" />
<text  x="1125.25" y="719.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.01%)</title><rect x="123.1" y="325" width="0.1" height="15.0" fill="rgb(239,117,54)" rx="2" ry="2" />
<text  x="126.08" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CBlockIndex*, CBlockIndex*, std::_Identity&lt;CBlockIndex*&gt;, CBlockIndexWorkComparator, std::allocator&lt;CBlockIndex*&gt; &gt;::_M_insert_&lt;CBlockIndex* const&amp;, std::_Rb_tree&lt;CBlockIndex*, CBlockIndex*, std::_Identity&lt;CBlockIndex*&gt;, CBlockIndexWorkComparator, std::allocator&lt;CBlockIndex*&gt; &gt;::_Alloc_node&gt; (18 samples, 0.02%)</title><rect x="48.6" y="645" width="0.2" height="15.0" fill="rgb(239,9,19)" rx="2" ry="2" />
<text  x="51.57" y="655.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;secure_allocator&lt;unsigned char&gt; &gt;::max_size (8 samples, 0.01%)</title><rect x="590.4" y="565" width="0.1" height="15.0" fill="rgb(233,229,47)" rx="2" ry="2" />
<text  x="593.43" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;CChainState, std::default_delete&lt;CChainState&gt; &gt;::get (69 samples, 0.07%)</title><rect x="959.0" y="613" width="0.9" height="15.0" fill="rgb(245,53,16)" rx="2" ry="2" />
<text  x="962.02" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::end (22 samples, 0.02%)</title><rect x="513.0" y="293" width="0.3" height="15.0" fill="rgb(254,4,35)" rx="2" ry="2" />
<text  x="515.99" y="303.5" ></text>
</g>
<g >
<title>__uint32_identity (9 samples, 0.01%)</title><rect x="431.5" y="357" width="0.1" height="15.0" fill="rgb(230,136,3)" rx="2" ry="2" />
<text  x="434.47" y="367.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (174 samples, 0.19%)</title><rect x="65.7" y="517" width="2.2" height="15.0" fill="rgb(244,16,2)" rx="2" ry="2" />
<text  x="68.70" y="527.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (11 samples, 0.01%)</title><rect x="448.2" y="341" width="0.1" height="15.0" fill="rgb(248,36,39)" rx="2" ry="2" />
<text  x="451.18" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::destroy&lt;char&gt; (59 samples, 0.06%)</title><rect x="591.6" y="565" width="0.8" height="15.0" fill="rgb(214,37,30)" rx="2" ry="2" />
<text  x="594.64" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_Rb_tree_iterator (13 samples, 0.01%)</title><rect x="1001.2" y="613" width="0.2" height="15.0" fill="rgb(247,156,34)" rx="2" ry="2" />
<text  x="1004.21" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt;::base (10 samples, 0.01%)</title><rect x="1096.4" y="613" width="0.2" height="15.0" fill="rgb(209,166,5)" rx="2" ry="2" />
<text  x="1099.43" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_S_use_relocate (8 samples, 0.01%)</title><rect x="623.6" y="629" width="0.1" height="15.0" fill="rgb(232,35,11)" rx="2" ry="2" />
<text  x="626.59" y="639.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, long&gt; (40 samples, 0.04%)</title><rect x="512.0" y="245" width="0.5" height="15.0" fill="rgb(235,45,35)" rx="2" ry="2" />
<text  x="514.98" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (124 samples, 0.13%)</title><rect x="964.9" y="565" width="1.6" height="15.0" fill="rgb(231,199,45)" rx="2" ry="2" />
<text  x="967.90" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_drop_node (25 samples, 0.03%)</title><rect x="610.9" y="501" width="0.3" height="15.0" fill="rgb(209,27,2)" rx="2" ry="2" />
<text  x="613.86" y="511.5" ></text>
</g>
<g >
<title>CHashWriter::write (279 samples, 0.30%)</title><rect x="1140.8" y="229" width="3.6" height="15.0" fill="rgb(226,74,54)" rx="2" ry="2" />
<text  x="1143.78" y="239.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (27 samples, 0.03%)</title><rect x="1097.1" y="565" width="0.3" height="15.0" fill="rgb(226,57,10)" rx="2" ry="2" />
<text  x="1100.08" y="575.5" ></text>
</g>
<g >
<title>__dbc_close (10 samples, 0.01%)</title><rect x="147.4" y="533" width="0.1" height="15.0" fill="rgb(219,37,49)" rx="2" ry="2" />
<text  x="150.35" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;void*, CLockLocation&gt;*, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;::operator++ (11 samples, 0.01%)</title><rect x="840.6" y="581" width="0.1" height="15.0" fill="rgb(246,175,21)" rx="2" ry="2" />
<text  x="843.58" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (63 samples, 0.07%)</title><rect x="356.5" y="597" width="0.8" height="15.0" fill="rgb(253,34,13)" rx="2" ry="2" />
<text  x="359.52" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::size (9 samples, 0.01%)</title><rect x="439.7" y="149" width="0.1" height="15.0" fill="rgb(247,13,17)" rx="2" ry="2" />
<text  x="442.66" y="159.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, true&gt; (24 samples, 0.03%)</title><rect x="553.9" y="581" width="0.3" height="15.0" fill="rgb(211,112,15)" rx="2" ry="2" />
<text  x="556.91" y="591.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (399 samples, 0.43%)</title><rect x="1184.5" y="693" width="5.1" height="15.0" fill="rgb(226,159,21)" rx="2" ry="2" />
<text  x="1187.48" y="703.5" ></text>
</g>
<g >
<title>boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt;::internal_apply_visitor_impl&lt;boost::detail::variant::destroyer, void*&gt; (34 samples, 0.04%)</title><rect x="771.1" y="565" width="0.4" height="15.0" fill="rgb(225,145,24)" rx="2" ry="2" />
<text  x="774.11" y="575.5" ></text>
</g>
<g >
<title>CWalletTx::~CWalletTx (120 samples, 0.13%)</title><rect x="1026.3" y="677" width="1.5" height="15.0" fill="rgb(210,81,31)" rx="2" ry="2" />
<text  x="1029.31" y="687.5" ></text>
</g>
<g >
<title>_mm_add_epi32 (24 samples, 0.03%)</title><rect x="1109.0" y="357" width="0.3" height="15.0" fill="rgb(221,50,11)" rx="2" ry="2" />
<text  x="1111.97" y="367.5" ></text>
</g>
<g >
<title>std::recursive_mutex::lock (33 samples, 0.04%)</title><rect x="850.1" y="597" width="0.4" height="15.0" fill="rgb(218,102,26)" rx="2" ry="2" />
<text  x="853.11" y="607.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (10 samples, 0.01%)</title><rect x="80.4" y="437" width="0.2" height="15.0" fill="rgb(252,229,44)" rx="2" ry="2" />
<text  x="83.44" y="447.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixEnv::BGThreadWrapper (34 samples, 0.04%)</title><rect x="1147.3" y="725" width="0.4" height="15.0" fill="rgb(248,45,9)" rx="2" ry="2" />
<text  x="1150.30" y="735.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (101 samples, 0.11%)</title><rect x="91.5" y="421" width="1.3" height="15.0" fill="rgb(207,67,12)" rx="2" ry="2" />
<text  x="94.51" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned int const*, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt; &gt; &gt; (72 samples, 0.08%)</title><rect x="852.5" y="613" width="0.9" height="15.0" fill="rgb(234,213,39)" rx="2" ry="2" />
<text  x="855.52" y="623.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (12 samples, 0.01%)</title><rect x="297.4" y="581" width="0.1" height="15.0" fill="rgb(243,58,7)" rx="2" ry="2" />
<text  x="300.35" y="591.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (24 samples, 0.03%)</title><rect x="338.0" y="533" width="0.3" height="15.0" fill="rgb(211,24,18)" rx="2" ry="2" />
<text  x="341.02" y="543.5" ></text>
</g>
<g >
<title>CDataStream::read (1,200 samples, 1.30%)</title><rect x="592.8" y="629" width="15.4" height="15.0" fill="rgb(212,229,22)" rx="2" ry="2" />
<text  x="595.80" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt; &gt; (235 samples, 0.26%)</title><rect x="1096.0" y="645" width="3.0" height="15.0" fill="rgb(247,225,29)" rx="2" ry="2" />
<text  x="1099.03" y="655.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, CTxOut, std::allocator&lt;CTxOut&gt;, CTxOut&gt; (9 samples, 0.01%)</title><rect x="24.7" y="757" width="0.2" height="15.0" fill="rgb(233,139,43)" rx="2" ry="2" />
<text  x="27.74" y="767.5" ></text>
</g>
<g >
<title>std::multimap&lt;unsigned long, char*, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::emplace&lt;unsigned long const&amp;, char*&amp;&gt; (10 samples, 0.01%)</title><rect x="610.3" y="549" width="0.2" height="15.0" fill="rgb(249,229,21)" rx="2" ry="2" />
<text  x="613.32" y="559.5" ></text>
</g>
<g >
<title>LoadBlockIndex (43 samples, 0.05%)</title><rect x="31.4" y="709" width="0.6" height="15.0" fill="rgb(223,82,14)" rx="2" ry="2" />
<text  x="34.40" y="719.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.01%)</title><rect x="92.7" y="309" width="0.1" height="15.0" fill="rgb(223,95,4)" rx="2" ry="2" />
<text  x="95.65" y="319.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;CTransaction const, std::allocator&lt;CTransaction&gt;, deserialize_type const&amp;, CDataStream&amp;&gt; (550 samples, 0.60%)</title><rect x="1137.3" y="709" width="7.1" height="15.0" fill="rgb(249,148,11)" rx="2" ry="2" />
<text  x="1140.31" y="719.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;CTxOut*, unsigned long&gt; (79 samples, 0.09%)</title><rect x="453.7" y="309" width="1.0" height="15.0" fill="rgb(224,103,27)" rx="2" ry="2" />
<text  x="456.72" y="319.5" ></text>
</g>
<g >
<title>__db_vrfy_putpageinfo (55 samples, 0.06%)</title><rect x="147.3" y="565" width="0.7" height="15.0" fill="rgb(234,136,9)" rx="2" ry="2" />
<text  x="150.30" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CBlockIndex*, std::pair&lt;CBlockIndex* const, CBlockIndex*&gt;, std::_Select1st&lt;std::pair&lt;CBlockIndex* const, CBlockIndex*&gt; &gt;, std::less&lt;CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;CBlockIndex* const, CBlockIndex*&gt; &gt; &gt;::_M_get_insert_equal_pos (25 samples, 0.03%)</title><rect x="50.3" y="645" width="0.4" height="15.0" fill="rgb(246,153,27)" rx="2" ry="2" />
<text  x="53.34" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::_M_lower_bound (752 samples, 0.82%)</title><rect x="827.1" y="581" width="9.7" height="15.0" fill="rgb(229,160,40)" rx="2" ry="2" />
<text  x="830.13" y="591.5" ></text>
</g>
<g >
<title>__db_vrfy_pgset_get (483 samples, 0.52%)</title><rect x="96.3" y="501" width="6.1" height="15.0" fill="rgb(211,67,30)" rx="2" ry="2" />
<text  x="99.25" y="511.5" ></text>
</g>
<g >
<title>CSizeComputer::operator&lt;&lt; &lt;std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt; (587 samples, 0.64%)</title><rect x="1031.2" y="581" width="7.5" height="15.0" fill="rgb(231,56,41)" rx="2" ry="2" />
<text  x="1034.22" y="591.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, uint256&amp;&gt; (1,212 samples, 1.32%)</title><rect x="592.6" y="661" width="15.6" height="15.0" fill="rgb(214,132,53)" rx="2" ry="2" />
<text  x="595.65" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Rb_tree_const_iterator (11 samples, 0.01%)</title><rect x="535.7" y="581" width="0.1" height="15.0" fill="rgb(226,219,23)" rx="2" ry="2" />
<text  x="538.66" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;CTxIn&gt; &gt;::max_size (12 samples, 0.01%)</title><rect x="446.4" y="293" width="0.1" height="15.0" fill="rgb(206,139,33)" rx="2" ry="2" />
<text  x="449.37" y="303.5" ></text>
</g>
<g >
<title>__memp_fget (235 samples, 0.26%)</title><rect x="99.1" y="405" width="3.0" height="15.0" fill="rgb(237,25,2)" rx="2" ry="2" />
<text  x="102.11" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;::operator (32 samples, 0.03%)</title><rect x="609.9" y="549" width="0.4" height="15.0" fill="rgb(251,134,30)" rx="2" ry="2" />
<text  x="612.87" y="559.5" ></text>
</g>
<g >
<title>CRIPEMD160::Write (1,482 samples, 1.61%)</title><rect x="695.7" y="565" width="19.0" height="15.0" fill="rgb(245,142,7)" rx="2" ry="2" />
<text  x="698.69" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl::_Vector_impl (15 samples, 0.02%)</title><rect x="518.9" y="277" width="0.2" height="15.0" fill="rgb(240,124,54)" rx="2" ry="2" />
<text  x="521.95" y="287.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CTransaction&gt; (7,941 samples, 8.62%)</title><rect x="426.8" y="613" width="101.7" height="15.0" fill="rgb(236,216,8)" rx="2" ry="2" />
<text  x="429.82" y="623.5" >Unserialize&lt;..</text>
</g>
<g >
<title>__bam_iitem (58 samples, 0.06%)</title><rect x="108.8" y="437" width="0.7" height="15.0" fill="rgb(231,123,18)" rx="2" ry="2" />
<text  x="111.76" y="447.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CWalletTx&amp;&gt; (901 samples, 0.98%)</title><rect x="1107.7" y="709" width="11.5" height="15.0" fill="rgb(229,20,28)" rx="2" ry="2" />
<text  x="1110.65" y="719.5" ></text>
</g>
<g >
<title>__db_tas_mutex_readlock (9 samples, 0.01%)</title><rect x="130.2" y="437" width="0.1" height="15.0" fill="rgb(228,2,20)" rx="2" ry="2" />
<text  x="133.15" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::push_back (90 samples, 0.10%)</title><rect x="949.5" y="533" width="1.1" height="15.0" fill="rgb(254,79,2)" rx="2" ry="2" />
<text  x="952.49" y="543.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (20 samples, 0.02%)</title><rect x="944.5" y="517" width="0.2" height="15.0" fill="rgb(228,22,17)" rx="2" ry="2" />
<text  x="947.47" y="527.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;CTransaction const&gt;::shared_ptr (38 samples, 0.04%)</title><rect x="1024.8" y="661" width="0.5" height="15.0" fill="rgb(216,27,7)" rx="2" ry="2" />
<text  x="1027.81" y="671.5" ></text>
</g>
<g >
<title>Hash&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (9 samples, 0.01%)</title><rect x="20.5" y="757" width="0.1" height="15.0" fill="rgb(250,157,0)" rx="2" ry="2" />
<text  x="23.53" y="767.5" ></text>
</g>
<g >
<title>Db::verify (8,448 samples, 9.17%)</title><rect x="53.8" y="629" width="108.2" height="15.0" fill="rgb(237,179,25)" rx="2" ry="2" />
<text  x="56.80" y="639.5" >Db::verify</text>
</g>
<g >
<title>CWallet::LoadToWallet (18 samples, 0.02%)</title><rect x="18.2" y="757" width="0.2" height="15.0" fill="rgb(206,225,7)" rx="2" ry="2" />
<text  x="21.18" y="767.5" ></text>
</g>
<g >
<title>std::operator==&lt;char*&gt; (57 samples, 0.06%)</title><rect x="294.5" y="565" width="0.8" height="15.0" fill="rgb(206,44,51)" rx="2" ry="2" />
<text  x="297.55" y="575.5" ></text>
</g>
<g >
<title>__lock_put (35 samples, 0.04%)</title><rect x="127.5" y="453" width="0.4" height="15.0" fill="rgb(225,199,52)" rx="2" ry="2" />
<text  x="130.47" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_M_get_Tp_allocator (12 samples, 0.01%)</title><rect x="816.5" y="453" width="0.2" height="15.0" fill="rgb(254,19,11)" rx="2" ry="2" />
<text  x="819.53" y="463.5" ></text>
</g>
<g >
<title>CDataStream::read (73 samples, 0.08%)</title><rect x="559.9" y="645" width="0.9" height="15.0" fill="rgb(227,47,6)" rx="2" ry="2" />
<text  x="562.89" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::begin (23 samples, 0.02%)</title><rect x="1056.0" y="597" width="0.3" height="15.0" fill="rgb(242,14,28)" rx="2" ry="2" />
<text  x="1058.98" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKeyMetadata&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt;::lower_bound (507 samples, 0.55%)</title><rect x="859.2" y="629" width="6.5" height="15.0" fill="rgb(207,204,40)" rx="2" ry="2" />
<text  x="862.17" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;LockedPool::LockedPageArena&gt;::_M_addr (8 samples, 0.01%)</title><rect x="815.1" y="341" width="0.1" height="15.0" fill="rgb(234,198,38)" rx="2" ry="2" />
<text  x="818.13" y="351.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, CTxOut, std::allocator&lt;CTxOut&gt;, CTxOut&gt; (362 samples, 0.39%)</title><rect x="495.2" y="309" width="4.6" height="15.0" fill="rgb(235,223,21)" rx="2" ry="2" />
<text  x="498.18" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::size (20 samples, 0.02%)</title><rect x="554.2" y="597" width="0.3" height="15.0" fill="rgb(227,141,22)" rx="2" ry="2" />
<text  x="557.22" y="607.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt;&gt; (183 samples, 0.20%)</title><rect x="164.7" y="261" width="2.3" height="15.0" fill="rgb(205,224,5)" rx="2" ry="2" />
<text  x="167.69" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::vector (12 samples, 0.01%)</title><rect x="855.6" y="501" width="0.1" height="15.0" fill="rgb(241,120,43)" rx="2" ry="2" />
<text  x="858.57" y="511.5" ></text>
</g>
<g >
<title>__bswap_32 (22 samples, 0.02%)</title><rect x="482.1" y="341" width="0.2" height="15.0" fill="rgb(226,123,46)" rx="2" ry="2" />
<text  x="485.05" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::destroy&lt;std::pair&lt;void*, CLockLocation&gt; &gt; (22 samples, 0.02%)</title><rect x="687.0" y="581" width="0.2" height="15.0" fill="rgb(225,31,12)" rx="2" ry="2" />
<text  x="689.96" y="591.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (15 samples, 0.02%)</title><rect x="526.8" y="485" width="0.2" height="15.0" fill="rgb(231,227,18)" rx="2" ry="2" />
<text  x="529.77" y="495.5" ></text>
</g>
<g >
<title>CMutableTransaction::Unserialize&lt;CDataStream&gt; (3,785 samples, 4.11%)</title><rect x="429.9" y="437" width="48.5" height="15.0" fill="rgb(224,200,2)" rx="2" ry="2" />
<text  x="432.93" y="447.5" >CMut..</text>
</g>
<g >
<title>Strengthen (399 samples, 0.43%)</title><rect x="1184.5" y="613" width="5.1" height="15.0" fill="rgb(208,75,24)" rx="2" ry="2" />
<text  x="1187.48" y="623.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (9 samples, 0.01%)</title><rect x="68.7" y="517" width="0.1" height="15.0" fill="rgb(245,176,40)" rx="2" ry="2" />
<text  x="71.73" y="527.5" ></text>
</g>
<g >
<title>__dbc_iget (22 samples, 0.02%)</title><rect x="74.1" y="485" width="0.3" height="15.0" fill="rgb(245,4,53)" rx="2" ry="2" />
<text  x="77.08" y="495.5" ></text>
</g>
<g >
<title>__bam_defcmp (13 samples, 0.01%)</title><rect x="103.8" y="389" width="0.1" height="15.0" fill="rgb(231,26,45)" rx="2" ry="2" />
<text  x="106.76" y="399.5" ></text>
</g>
<g >
<title>TLS wrapper function for g_thread_name (8 samples, 0.01%)</title><rect x="849.8" y="581" width="0.1" height="15.0" fill="rgb(226,40,19)" rx="2" ry="2" />
<text  x="852.82" y="591.5" ></text>
</g>
<g >
<title>std::set&lt;CBlockIndex*, CBlockIndexWorkComparator, std::allocator&lt;CBlockIndex*&gt; &gt;::count (21 samples, 0.02%)</title><rect x="50.8" y="677" width="0.2" height="15.0" fill="rgb(220,11,46)" rx="2" ry="2" />
<text  x="53.76" y="687.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;CTxIn*, unsigned long&gt; (72 samples, 0.08%)</title><rect x="443.9" y="309" width="0.9" height="15.0" fill="rgb(247,168,51)" rx="2" ry="2" />
<text  x="446.91" y="319.5" ></text>
</g>
<g >
<title>CScript::clear (22 samples, 0.02%)</title><rect x="454.3" y="229" width="0.3" height="15.0" fill="rgb(229,83,39)" rx="2" ry="2" />
<text  x="457.34" y="239.5" ></text>
</g>
<g >
<title>__dbt_userfree (36 samples, 0.04%)</title><rect x="350.3" y="645" width="0.5" height="15.0" fill="rgb(242,77,10)" rx="2" ry="2" />
<text  x="353.32" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (12 samples, 0.01%)</title><rect x="529.7" y="581" width="0.1" height="15.0" fill="rgb(216,30,27)" rx="2" ry="2" />
<text  x="532.67" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::size (12 samples, 0.01%)</title><rect x="363.6" y="421" width="0.2" height="15.0" fill="rgb(216,157,21)" rx="2" ry="2" />
<text  x="366.60" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;CKeyID const&amp;&gt;, std::tuple&lt;&gt; &gt; (110 samples, 0.12%)</title><rect x="854.8" y="597" width="1.4" height="15.0" fill="rgb(245,140,54)" rx="2" ry="2" />
<text  x="857.77" y="607.5" ></text>
</g>
<g >
<title>CLockLocation::CLockLocation (60 samples, 0.07%)</title><rect x="787.5" y="581" width="0.8" height="15.0" fill="rgb(237,3,2)" rx="2" ry="2" />
<text  x="790.51" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_M_deallocate (880 samples, 0.96%)</title><rect x="628.3" y="629" width="11.3" height="15.0" fill="rgb(220,117,52)" rx="2" ry="2" />
<text  x="631.29" y="639.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;unsigned char*, unsigned long, secure_allocator&lt;unsigned char&gt; &gt; (205 samples, 0.22%)</title><rect x="620.3" y="629" width="2.6" height="15.0" fill="rgb(233,178,34)" rx="2" ry="2" />
<text  x="623.26" y="639.5" ></text>
</g>
<g >
<title>std::move&lt;CTransaction const*&amp;&gt; (9 samples, 0.01%)</title><rect x="528.1" y="533" width="0.1" height="15.0" fill="rgb(218,205,30)" rx="2" ry="2" />
<text  x="531.08" y="543.5" ></text>
</g>
<g >
<title>CHash256::Write (22 samples, 0.02%)</title><rect x="493.6" y="245" width="0.3" height="15.0" fill="rgb(244,174,53)" rx="2" ry="2" />
<text  x="496.63" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::max_size (44 samples, 0.05%)</title><rect x="455.8" y="325" width="0.6" height="15.0" fill="rgb(233,63,44)" rx="2" ry="2" />
<text  x="458.82" y="335.5" ></text>
</g>
<g >
<title>_int_malloc (18 samples, 0.02%)</title><rect x="184.5" y="533" width="0.2" height="15.0" fill="rgb(216,177,42)" rx="2" ry="2" />
<text  x="187.48" y="543.5" ></text>
</g>
<g >
<title>WalletBatch::LoadWallet (9 samples, 0.01%)</title><rect x="27.6" y="757" width="0.1" height="15.0" fill="rgb(206,198,41)" rx="2" ry="2" />
<text  x="30.61" y="767.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (15 samples, 0.02%)</title><rect x="108.6" y="389" width="0.2" height="15.0" fill="rgb(249,56,25)" rx="2" ry="2" />
<text  x="111.57" y="399.5" ></text>
</g>
<g >
<title>CDataStream::read (18 samples, 0.02%)</title><rect x="564.2" y="629" width="0.3" height="15.0" fill="rgb(250,195,31)" rx="2" ry="2" />
<text  x="567.24" y="639.5" ></text>
</g>
<g >
<title>WriteBE32 (16 samples, 0.02%)</title><rect x="756.5" y="549" width="0.2" height="15.0" fill="rgb(217,171,1)" rx="2" ry="2" />
<text  x="759.54" y="559.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (204 samples, 0.22%)</title><rect x="152.7" y="517" width="2.6" height="15.0" fill="rgb(227,118,10)" rx="2" ry="2" />
<text  x="155.65" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_S_relocate (15 samples, 0.02%)</title><rect x="820.1" y="453" width="0.2" height="15.0" fill="rgb(252,9,49)" rx="2" ry="2" />
<text  x="823.11" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_S_value (29 samples, 0.03%)</title><rect x="927.7" y="565" width="0.4" height="15.0" fill="rgb(210,35,45)" rx="2" ry="2" />
<text  x="930.73" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::operator (14 samples, 0.02%)</title><rect x="967.4" y="661" width="0.2" height="15.0" fill="rgb(219,161,35)" rx="2" ry="2" />
<text  x="970.38" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;&gt; (316 samples, 0.34%)</title><rect x="414.5" y="549" width="4.0" height="15.0" fill="rgb(211,68,52)" rx="2" ry="2" />
<text  x="417.50" y="559.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;unsigned char*&gt;, unsigned char*&gt; (16 samples, 0.02%)</title><rect x="1097.5" y="581" width="0.2" height="15.0" fill="rgb(246,0,51)" rx="2" ry="2" />
<text  x="1100.49" y="591.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (13 samples, 0.01%)</title><rect x="852.7" y="533" width="0.2" height="15.0" fill="rgb(249,136,33)" rx="2" ry="2" />
<text  x="855.73" y="543.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node_base*&amp;, true&gt; (24 samples, 0.03%)</title><rect x="423.3" y="549" width="0.3" height="15.0" fill="rgb(209,181,20)" rx="2" ry="2" />
<text  x="426.26" y="559.5" ></text>
</g>
<g >
<title>util::ThreadGetInternalName[abi:cxx11] (23 samples, 0.02%)</title><rect x="950.6" y="549" width="0.3" height="15.0" fill="rgb(212,91,1)" rx="2" ry="2" />
<text  x="953.64" y="559.5" ></text>
</g>
<g >
<title>CDataStream::read (19 samples, 0.02%)</title><rect x="40.5" y="485" width="0.2" height="15.0" fill="rgb(238,134,46)" rx="2" ry="2" />
<text  x="43.45" y="495.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;unsigned char, unsigned char&gt; (8 samples, 0.01%)</title><rect x="1104.4" y="613" width="0.1" height="15.0" fill="rgb(237,229,13)" rx="2" ry="2" />
<text  x="1107.44" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::max_size (15 samples, 0.02%)</title><rect x="474.2" y="277" width="0.2" height="15.0" fill="rgb(254,0,50)" rx="2" ry="2" />
<text  x="477.20" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (12 samples, 0.01%)</title><rect x="1158.8" y="757" width="0.1" height="15.0" fill="rgb(240,150,32)" rx="2" ry="2" />
<text  x="1161.76" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, CWalletTx*&gt;, std::_Select1st&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::_S_key (23 samples, 0.02%)</title><rect x="1015.6" y="613" width="0.3" height="15.0" fill="rgb(232,148,46)" rx="2" ry="2" />
<text  x="1018.59" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_S_key (73 samples, 0.08%)</title><rect x="688.5" y="581" width="1.0" height="15.0" fill="rgb(224,58,32)" rx="2" ry="2" />
<text  x="691.53" y="591.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, 28u, unsigned char&gt; (10 samples, 0.01%)</title><rect x="24.6" y="757" width="0.1" height="15.0" fill="rgb(230,132,35)" rx="2" ry="2" />
<text  x="27.56" y="767.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;secure_allocator&lt;unsigned char&gt; &gt;::_S_destroy&lt;secure_allocator&lt;unsigned char&gt;, unsigned char&gt; (35 samples, 0.04%)</title><rect x="627.7" y="613" width="0.4" height="15.0" fill="rgb(222,79,12)" rx="2" ry="2" />
<text  x="630.70" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::size (26 samples, 0.03%)</title><rect x="472.5" y="309" width="0.4" height="15.0" fill="rgb(229,98,28)" rx="2" ry="2" />
<text  x="475.54" y="319.5" ></text>
</g>
<g >
<title>__bam_get_root (24 samples, 0.03%)</title><rect x="66.4" y="469" width="0.3" height="15.0" fill="rgb(229,189,32)" rx="2" ry="2" />
<text  x="69.36" y="479.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (11 samples, 0.01%)</title><rect x="838.8" y="565" width="0.1" height="15.0" fill="rgb(229,112,18)" rx="2" ry="2" />
<text  x="841.79" y="575.5" ></text>
</g>
<g >
<title>CScript::clear (11 samples, 0.01%)</title><rect x="16.4" y="757" width="0.2" height="15.0" fill="rgb(210,227,26)" rx="2" ry="2" />
<text  x="19.43" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;::_M_v (10 samples, 0.01%)</title><rect x="569.2" y="421" width="0.2" height="15.0" fill="rgb(237,60,30)" rx="2" ry="2" />
<text  x="572.23" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt; &gt;::deallocate (9 samples, 0.01%)</title><rect x="1092.1" y="469" width="0.1" height="15.0" fill="rgb(232,92,22)" rx="2" ry="2" />
<text  x="1095.08" y="479.5" ></text>
</g>
<g >
<title>CPubKey::GetID (1,418 samples, 1.54%)</title><rect x="640.9" y="677" width="18.2" height="15.0" fill="rgb(251,0,14)" rx="2" ry="2" />
<text  x="643.93" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;void*, CLockLocation&gt;*, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; (12 samples, 0.01%)</title><rect x="681.1" y="581" width="0.2" height="15.0" fill="rgb(248,65,48)" rx="2" ry="2" />
<text  x="684.12" y="591.5" ></text>
</g>
<g >
<title>CPubKey::IsValid (15 samples, 0.02%)</title><rect x="659.1" y="677" width="0.2" height="15.0" fill="rgb(227,69,47)" rx="2" ry="2" />
<text  x="662.09" y="687.5" ></text>
</g>
<g >
<title>__bam_search (44 samples, 0.05%)</title><rect x="138.6" y="485" width="0.6" height="15.0" fill="rgb(217,64,13)" rx="2" ry="2" />
<text  x="141.64" y="495.5" ></text>
</g>
<g >
<title>CScript::clear (14 samples, 0.02%)</title><rect x="494.9" y="277" width="0.2" height="15.0" fill="rgb(232,133,52)" rx="2" ry="2" />
<text  x="497.93" y="287.5" ></text>
</g>
<g >
<title>__memp_fput (9 samples, 0.01%)</title><rect x="115.3" y="437" width="0.1" height="15.0" fill="rgb(217,112,46)" rx="2" ry="2" />
<text  x="118.33" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::begin (10 samples, 0.01%)</title><rect x="518.2" y="293" width="0.1" height="15.0" fill="rgb(223,52,28)" rx="2" ry="2" />
<text  x="521.17" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (61 samples, 0.07%)</title><rect x="538.4" y="565" width="0.8" height="15.0" fill="rgb(248,138,7)" rx="2" ry="2" />
<text  x="541.44" y="575.5" ></text>
</g>
<g >
<title>std::allocator&lt;CMerkleTx&gt;::~allocator (9 samples, 0.01%)</title><rect x="557.2" y="581" width="0.1" height="15.0" fill="rgb(243,131,42)" rx="2" ry="2" />
<text  x="560.21" y="591.5" ></text>
</g>
<g >
<title>__db_vrfy_ccset (51 samples, 0.06%)</title><rect x="62.1" y="533" width="0.6" height="15.0" fill="rgb(224,141,5)" rx="2" ry="2" />
<text  x="65.07" y="543.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.01%)</title><rect x="838.1" y="565" width="0.1" height="15.0" fill="rgb(211,110,26)" rx="2" ry="2" />
<text  x="841.14" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt;, void&gt; (281 samples, 0.30%)</title><rect x="1095.8" y="677" width="3.6" height="15.0" fill="rgb(232,120,25)" rx="2" ry="2" />
<text  x="1098.77" y="687.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (10 samples, 0.01%)</title><rect x="156.2" y="565" width="0.1" height="15.0" fill="rgb(211,48,4)" rx="2" ry="2" />
<text  x="159.16" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_range_initialize&lt;char const*&gt; (53 samples, 0.06%)</title><rect x="36.3" y="613" width="0.7" height="15.0" fill="rgb(221,223,15)" rx="2" ry="2" />
<text  x="39.32" y="623.5" ></text>
</g>
<g >
<title>__memp_fget (12 samples, 0.01%)</title><rect x="95.9" y="389" width="0.2" height="15.0" fill="rgb(251,73,15)" rx="2" ry="2" />
<text  x="98.95" y="399.5" ></text>
</g>
<g >
<title>__memp_fget (42 samples, 0.05%)</title><rect x="104.8" y="405" width="0.5" height="15.0" fill="rgb(214,212,16)" rx="2" ry="2" />
<text  x="107.81" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;uint256 const, CBlockIndex*&gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::pair&lt;uint256, CBlockIndex*&gt; &gt; (12 samples, 0.01%)</title><rect x="45.6" y="549" width="0.2" height="15.0" fill="rgb(211,206,18)" rx="2" ry="2" />
<text  x="48.64" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~new_allocator (12 samples, 0.01%)</title><rect x="974.2" y="501" width="0.2" height="15.0" fill="rgb(241,154,1)" rx="2" ry="2" />
<text  x="977.25" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;char* const, unsigned long&gt;, char*, unsigned long&amp;&gt; (16 samples, 0.02%)</title><rect x="814.1" y="309" width="0.2" height="15.0" fill="rgb(233,188,47)" rx="2" ry="2" />
<text  x="817.06" y="319.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;unsigned char const*&gt; (9 samples, 0.01%)</title><rect x="768.6" y="405" width="0.1" height="15.0" fill="rgb(252,226,25)" rx="2" ry="2" />
<text  x="771.56" y="415.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;uint256, CBlockIndex*, BlockHasher, std::equal_to&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt; &gt;::find (129 samples, 0.14%)</title><rect x="51.8" y="597" width="1.6" height="15.0" fill="rgb(224,187,34)" rx="2" ry="2" />
<text  x="54.79" y="607.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (14 samples, 0.02%)</title><rect x="839.1" y="565" width="0.2" height="15.0" fill="rgb(224,110,37)" rx="2" ry="2" />
<text  x="842.11" y="575.5" ></text>
</g>
<g >
<title>CSHA256::Write (271 samples, 0.29%)</title><rect x="1107.7" y="405" width="3.4" height="15.0" fill="rgb(231,197,42)" rx="2" ry="2" />
<text  x="1110.65" y="415.5" ></text>
</g>
<g >
<title>_mm_add_epi32 (13 samples, 0.01%)</title><rect x="1124.9" y="549" width="0.2" height="15.0" fill="rgb(249,192,52)" rx="2" ry="2" />
<text  x="1127.92" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::end (16 samples, 0.02%)</title><rect x="793.4" y="533" width="0.2" height="15.0" fill="rgb(239,169,3)" rx="2" ry="2" />
<text  x="796.35" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (9 samples, 0.01%)</title><rect x="1161.7" y="741" width="0.1" height="15.0" fill="rgb(231,45,7)" rx="2" ry="2" />
<text  x="1164.70" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::lower_bound (95 samples, 0.10%)</title><rect x="804.5" y="357" width="1.2" height="15.0" fill="rgb(229,144,43)" rx="2" ry="2" />
<text  x="807.47" y="367.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;CTransaction const,  (338 samples, 0.37%)</title><rect x="1059.8" y="613" width="4.3" height="15.0" fill="rgb(216,93,19)" rx="2" ry="2" />
<text  x="1062.80" y="623.5" ></text>
</g>
<g >
<title>CPubKey::end (8 samples, 0.01%)</title><rect x="659.3" y="677" width="0.1" height="15.0" fill="rgb(240,53,13)" rx="2" ry="2" />
<text  x="662.33" y="687.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, CScript&gt; (183 samples, 0.20%)</title><rect x="164.7" y="357" width="2.3" height="15.0" fill="rgb(236,138,12)" rx="2" ry="2" />
<text  x="167.69" y="367.5" ></text>
</g>
<g >
<title>std::move&lt;std::__shared_ptr&lt;CTransaction const,  (11 samples, 0.01%)</title><rect x="528.2" y="565" width="0.1" height="15.0" fill="rgb(236,186,11)" rx="2" ry="2" />
<text  x="531.19" y="575.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::data (8 samples, 0.01%)</title><rect x="511.4" y="101" width="0.1" height="15.0" fill="rgb(216,149,15)" rx="2" ry="2" />
<text  x="514.39" y="111.5" ></text>
</g>
<g >
<title>__bam_cmp (34 samples, 0.04%)</title><rect x="111.9" y="405" width="0.5" height="15.0" fill="rgb(219,118,40)" rx="2" ry="2" />
<text  x="114.94" y="415.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::recursive_mutex&gt;::lock (13 samples, 0.01%)</title><rect x="686.5" y="613" width="0.2" height="15.0" fill="rgb(235,20,49)" rx="2" ry="2" />
<text  x="689.52" y="623.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (72 samples, 0.08%)</title><rect x="422.3" y="549" width="1.0" height="15.0" fill="rgb(206,188,50)" rx="2" ry="2" />
<text  x="425.33" y="559.5" ></text>
</g>
<g >
<title>__db_put (311 samples, 0.34%)</title><rect x="68.1" y="549" width="4.0" height="15.0" fill="rgb(215,217,48)" rx="2" ry="2" />
<text  x="71.10" y="559.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned int const*, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt; &gt;, unsigned int*&gt; (37 samples, 0.04%)</title><rect x="853.0" y="565" width="0.4" height="15.0" fill="rgb(211,46,8)" rx="2" ry="2" />
<text  x="855.97" y="575.5" ></text>
</g>
<g >
<title>__subvdi3 (8 samples, 0.01%)</title><rect x="1098.8" y="581" width="0.1" height="15.0" fill="rgb(250,146,19)" rx="2" ry="2" />
<text  x="1101.80" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_create_node&lt;COutPoint const&amp;&gt; (172 samples, 0.19%)</title><rect x="1046.8" y="597" width="2.2" height="15.0" fill="rgb(216,66,29)" rx="2" ry="2" />
<text  x="1049.84" y="607.5" ></text>
</g>
<g >
<title>ReadOrderPos (552 samples, 0.60%)</title><rect x="532.2" y="629" width="7.1" height="15.0" fill="rgb(230,87,22)" rx="2" ry="2" />
<text  x="535.21" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (30 samples, 0.03%)</title><rect x="810.7" y="325" width="0.4" height="15.0" fill="rgb(253,136,12)" rx="2" ry="2" />
<text  x="813.75" y="335.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, CTxOut, std::allocator&lt;CTxOut&gt;, CTxOut&gt; (183 samples, 0.20%)</title><rect x="164.7" y="421" width="2.3" height="15.0" fill="rgb(240,64,30)" rx="2" ry="2" />
<text  x="167.69" y="431.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::item_ptr (13 samples, 0.01%)</title><rect x="492.1" y="85" width="0.2" height="15.0" fill="rgb(235,128,12)" rx="2" ry="2" />
<text  x="495.10" y="95.5" ></text>
</g>
<g >
<title>CHashWriter::GetHash (49 samples, 0.05%)</title><rect x="42.6" y="613" width="0.7" height="15.0" fill="rgb(216,66,31)" rx="2" ry="2" />
<text  x="45.64" y="623.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CSizeComputer, CScript&gt; (81 samples, 0.09%)</title><rect x="1039.9" y="469" width="1.1" height="15.0" fill="rgb(211,24,51)" rx="2" ry="2" />
<text  x="1042.95" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (23 samples, 0.02%)</title><rect x="570.1" y="421" width="0.3" height="15.0" fill="rgb(228,218,3)" rx="2" ry="2" />
<text  x="573.08" y="431.5" ></text>
</g>
<g >
<title>__db_new (15 samples, 0.02%)</title><rect x="109.8" y="421" width="0.2" height="15.0" fill="rgb(245,18,33)" rx="2" ry="2" />
<text  x="112.78" y="431.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter&gt; (12 samples, 0.01%)</title><rect x="520.2" y="325" width="0.2" height="15.0" fill="rgb(243,162,39)" rx="2" ry="2" />
<text  x="523.23" y="335.5" ></text>
</g>
<g >
<title>base_blob&lt;160u&gt;::Compare (324 samples, 0.35%)</title><rect x="861.5" y="565" width="4.2" height="15.0" fill="rgb(230,33,7)" rx="2" ry="2" />
<text  x="864.51" y="575.5" ></text>
</g>
<g >
<title>__memp_fput (11 samples, 0.01%)</title><rect x="123.9" y="501" width="0.1" height="15.0" fill="rgb(238,186,13)" rx="2" ry="2" />
<text  x="126.85" y="511.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (13 samples, 0.01%)</title><rect x="681.3" y="581" width="0.1" height="15.0" fill="rgb(227,27,46)" rx="2" ry="2" />
<text  x="684.27" y="591.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;CTxIn*, unsigned long, CTxIn&gt; (84 samples, 0.09%)</title><rect x="443.8" y="325" width="1.0" height="15.0" fill="rgb(221,106,12)" rx="2" ry="2" />
<text  x="446.76" y="335.5" ></text>
</g>
<g >
<title>__db_verify (8,318 samples, 9.03%)</title><rect x="55.5" y="597" width="106.5" height="15.0" fill="rgb(253,84,7)" rx="2" ry="2" />
<text  x="58.46" y="607.5" >__db_verify</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::max_size (8 samples, 0.01%)</title><rect x="419.2" y="501" width="0.1" height="15.0" fill="rgb(243,25,14)" rx="2" ry="2" />
<text  x="422.20" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;CTransaction&gt; &gt;::destroy&lt;CTransaction const&gt; (32 samples, 0.03%)</title><rect x="527.6" y="501" width="0.4" height="15.0" fill="rgb(215,36,1)" rx="2" ry="2" />
<text  x="530.57" y="511.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::IsNull (33 samples, 0.04%)</title><rect x="34.4" y="597" width="0.4" height="15.0" fill="rgb(241,149,49)" rx="2" ry="2" />
<text  x="37.40" y="607.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.01%)</title><rect x="146.0" y="405" width="0.1" height="15.0" fill="rgb(214,4,0)" rx="2" ry="2" />
<text  x="148.99" y="415.5" ></text>
</g>
<g >
<title>Unserialize_impl&lt;CDataStream, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (1,411 samples, 1.53%)</title><rect x="456.8" y="373" width="18.1" height="15.0" fill="rgb(217,196,50)" rx="2" ry="2" />
<text  x="459.78" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;unsigned char*&gt;, unsigned char*, unsigned char&gt; (61 samples, 0.07%)</title><rect x="1101.0" y="613" width="0.8" height="15.0" fill="rgb(246,53,40)" rx="2" ry="2" />
<text  x="1104.02" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt;::base (8 samples, 0.01%)</title><rect x="693.7" y="549" width="0.1" height="15.0" fill="rgb(253,143,47)" rx="2" ry="2" />
<text  x="696.72" y="559.5" ></text>
</g>
<g >
<title>std::forward&lt;char const  (8 samples, 0.01%)</title><rect x="952.4" y="613" width="0.1" height="15.0" fill="rgb(206,15,29)" rx="2" ry="2" />
<text  x="955.40" y="623.5" ></text>
</g>
<g >
<title>std::make_shared&lt;CTransaction const, deserialize_type const&amp;, CDataStream&amp;&gt; (550 samples, 0.60%)</title><rect x="1137.3" y="725" width="7.1" height="15.0" fill="rgb(207,179,3)" rx="2" ry="2" />
<text  x="1140.31" y="735.5" ></text>
</g>
<g >
<title>__dbc_iput (40 samples, 0.04%)</title><rect x="147.5" y="533" width="0.5" height="15.0" fill="rgb(210,177,39)" rx="2" ry="2" />
<text  x="150.48" y="543.5" ></text>
</g>
<g >
<title>CBlockHeader::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (31 samples, 0.03%)</title><rect x="43.3" y="565" width="0.4" height="15.0" fill="rgb(235,22,49)" rx="2" ry="2" />
<text  x="46.28" y="575.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::recursive_mutex&gt;::~unique_lock (52 samples, 0.06%)</title><rect x="1021.0" y="581" width="0.7" height="15.0" fill="rgb(215,191,13)" rx="2" ry="2" />
<text  x="1024.04" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;::operator-- (25 samples, 0.03%)</title><rect x="823.7" y="581" width="0.3" height="15.0" fill="rgb(229,96,10)" rx="2" ry="2" />
<text  x="826.69" y="591.5" ></text>
</g>
<g >
<title>__mutex_alloc_int (9 samples, 0.01%)</title><rect x="79.1" y="389" width="0.2" height="15.0" fill="rgb(237,81,20)" rx="2" ry="2" />
<text  x="82.14" y="399.5" ></text>
</g>
<g >
<title>__db_put (58 samples, 0.06%)</title><rect x="61.3" y="533" width="0.7" height="15.0" fill="rgb(251,72,19)" rx="2" ry="2" />
<text  x="64.28" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::new_allocator (8 samples, 0.01%)</title><rect x="1025.8" y="597" width="0.1" height="15.0" fill="rgb(231,106,39)" rx="2" ry="2" />
<text  x="1028.81" y="607.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::iterator::iterator (12 samples, 0.01%)</title><rect x="762.4" y="437" width="0.1" height="15.0" fill="rgb(246,85,3)" rx="2" ry="2" />
<text  x="765.37" y="447.5" ></text>
</g>
<g >
<title>QuadRound (209 samples, 0.23%)</title><rect x="1111.5" y="373" width="2.7" height="15.0" fill="rgb(252,212,23)" rx="2" ry="2" />
<text  x="1114.48" y="383.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (172 samples, 0.19%)</title><rect x="65.7" y="501" width="2.2" height="15.0" fill="rgb(210,107,8)" rx="2" ry="2" />
<text  x="68.72" y="511.5" ></text>
</g>
<g >
<title>__db_cursor_int (19 samples, 0.02%)</title><rect x="124.5" y="517" width="0.3" height="15.0" fill="rgb(209,43,24)" rx="2" ry="2" />
<text  x="127.54" y="527.5" ></text>
</g>
<g >
<title>CSHA256::CSHA256 (8 samples, 0.01%)</title><rect x="738.3" y="565" width="0.1" height="15.0" fill="rgb(237,47,17)" rx="2" ry="2" />
<text  x="741.30" y="575.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;void*, void*&gt; &gt;::operator (8 samples, 0.01%)</title><rect x="793.6" y="533" width="0.1" height="15.0" fill="rgb(245,91,44)" rx="2" ry="2" />
<text  x="796.56" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~vector (45 samples, 0.05%)</title><rect x="768.9" y="469" width="0.6" height="15.0" fill="rgb(228,154,37)" rx="2" ry="2" />
<text  x="771.92" y="479.5" ></text>
</g>
<g >
<title>CScript::SerializationOp&lt;CDataStream, CSerActionUnserialize&gt; (178 samples, 0.19%)</title><rect x="376.7" y="629" width="2.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="379.67" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator* (10 samples, 0.01%)</title><rect x="554.9" y="613" width="0.1" height="15.0" fill="rgb(206,189,48)" rx="2" ry="2" />
<text  x="557.88" y="623.5" ></text>
</g>
<g >
<title>interfaces::(anonymous namespace)::WalletClientImpl::start (266 samples, 0.29%)</title><rect x="32.6" y="709" width="3.4" height="15.0" fill="rgb(210,76,11)" rx="2" ry="2" />
<text  x="35.62" y="719.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;CTxOut*, unsigned long, CTxOut&gt; (81 samples, 0.09%)</title><rect x="453.7" y="325" width="1.0" height="15.0" fill="rgb(205,202,34)" rx="2" ry="2" />
<text  x="456.70" y="335.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::operator[] (31 samples, 0.03%)</title><rect x="440.5" y="165" width="0.4" height="15.0" fill="rgb(240,211,24)" rx="2" ry="2" />
<text  x="443.51" y="175.5" ></text>
</g>
<g >
<title>CDataStream::read (10 samples, 0.01%)</title><rect x="369.8" y="549" width="0.1" height="15.0" fill="rgb(208,222,34)" rx="2" ry="2" />
<text  x="372.78" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt;, false, true&gt;::_Node_iterator (9 samples, 0.01%)</title><rect x="967.2" y="597" width="0.1" height="15.0" fill="rgb(224,123,47)" rx="2" ry="2" />
<text  x="970.19" y="607.5" ></text>
</g>
<g >
<title>util::ThreadGetInternalName[abi:cxx11] (11 samples, 0.01%)</title><rect x="849.8" y="597" width="0.1" height="15.0" fill="rgb(213,187,30)" rx="2" ry="2" />
<text  x="852.78" y="607.5" ></text>
</g>
<g >
<title>__os_malloc (11 samples, 0.01%)</title><rect x="120.3" y="453" width="0.1" height="15.0" fill="rgb(231,63,23)" rx="2" ry="2" />
<text  x="123.30" y="463.5" ></text>
</g>
<g >
<title>__memp_fput (8 samples, 0.01%)</title><rect x="151.7" y="517" width="0.1" height="15.0" fill="rgb(235,208,22)" rx="2" ry="2" />
<text  x="154.68" y="527.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;CTransaction const&gt;::shared_ptr&lt;std::allocator&lt;CTransaction&gt;&gt; (339 samples, 0.37%)</title><rect x="1059.8" y="629" width="4.3" height="15.0" fill="rgb(250,173,46)" rx="2" ry="2" />
<text  x="1062.78" y="639.5" ></text>
</g>
<g >
<title>__os_id (68 samples, 0.07%)</title><rect x="348.1" y="581" width="0.9" height="15.0" fill="rgb(224,179,5)" rx="2" ry="2" />
<text  x="351.12" y="591.5" ></text>
</g>
<g >
<title>_mm_add_epi32 (17 samples, 0.02%)</title><rect x="165.6" y="133" width="0.2" height="15.0" fill="rgb(227,41,49)" rx="2" ry="2" />
<text  x="168.59" y="143.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTxIn, std::allocator&lt;CTxIn&gt; &gt; (748 samples, 0.81%)</title><rect x="485.1" y="325" width="9.5" height="15.0" fill="rgb(219,86,14)" rx="2" ry="2" />
<text  x="488.06" y="335.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::recursive_mutex&gt;::lock (15 samples, 0.02%)</title><rect x="794.3" y="597" width="0.2" height="15.0" fill="rgb(233,72,34)" rx="2" ry="2" />
<text  x="797.26" y="607.5" ></text>
</g>
<g >
<title>std::make_shared&lt;CTransaction const, deserialize_type const&amp;, CDataStream&amp;&gt; (901 samples, 0.98%)</title><rect x="1107.7" y="645" width="11.5" height="15.0" fill="rgb(228,216,46)" rx="2" ry="2" />
<text  x="1110.65" y="655.5" ></text>
</g>
<g >
<title>CDataStream::read (10 samples, 0.01%)</title><rect x="362.5" y="549" width="0.1" height="15.0" fill="rgb(246,174,40)" rx="2" ry="2" />
<text  x="365.50" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (16 samples, 0.02%)</title><rect x="1092.7" y="517" width="0.2" height="15.0" fill="rgb(253,143,31)" rx="2" ry="2" />
<text  x="1095.71" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (40 samples, 0.04%)</title><rect x="633.5" y="485" width="0.5" height="15.0" fill="rgb(250,155,3)" rx="2" ry="2" />
<text  x="636.48" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (22 samples, 0.02%)</title><rect x="471.3" y="245" width="0.3" height="15.0" fill="rgb(222,81,22)" rx="2" ry="2" />
<text  x="474.28" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::pop_back (43 samples, 0.05%)</title><rect x="794.8" y="581" width="0.5" height="15.0" fill="rgb(247,85,14)" rx="2" ry="2" />
<text  x="797.79" y="591.5" ></text>
</g>
<g >
<title>CDataStream::read (14 samples, 0.02%)</title><rect x="365.4" y="485" width="0.1" height="15.0" fill="rgb(236,65,29)" rx="2" ry="2" />
<text  x="368.36" y="495.5" ></text>
</g>
<g >
<title>__memp_fget (27 samples, 0.03%)</title><rect x="153.5" y="469" width="0.3" height="15.0" fill="rgb(217,34,18)" rx="2" ry="2" />
<text  x="156.47" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_right (12 samples, 0.01%)</title><rect x="979.5" y="613" width="0.2" height="15.0" fill="rgb(213,195,20)" rx="2" ry="2" />
<text  x="982.52" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_Rb_tree_iterator (17 samples, 0.02%)</title><rect x="871.3" y="565" width="0.2" height="15.0" fill="rgb(245,201,29)" rx="2" ry="2" />
<text  x="874.31" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_S_value (108 samples, 0.12%)</title><rect x="907.8" y="565" width="1.4" height="15.0" fill="rgb(244,85,18)" rx="2" ry="2" />
<text  x="910.78" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, CWalletTx*&gt;, std::_Select1st&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::_M_emplace_equal&lt;std::pair&lt;long, CWalletTx*&gt; &gt; (1,248 samples, 1.35%)</title><rect x="1001.6" y="645" width="16.0" height="15.0" fill="rgb(218,179,41)" rx="2" ry="2" />
<text  x="1004.58" y="655.5" ></text>
</g>
<g >
<title>CDataStream::read (10 samples, 0.01%)</title><rect x="14.1" y="757" width="0.1" height="15.0" fill="rgb(246,82,13)" rx="2" ry="2" />
<text  x="17.07" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_S_right (28 samples, 0.03%)</title><rect x="909.9" y="581" width="0.4" height="15.0" fill="rgb(236,218,29)" rx="2" ry="2" />
<text  x="912.89" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::size (10 samples, 0.01%)</title><rect x="499.7" y="293" width="0.1" height="15.0" fill="rgb(213,180,43)" rx="2" ry="2" />
<text  x="502.69" y="303.5" ></text>
</g>
<g >
<title>__memp_alloc (192 samples, 0.21%)</title><rect x="87.2" y="389" width="2.4" height="15.0" fill="rgb(226,123,25)" rx="2" ry="2" />
<text  x="90.17" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::end (15 samples, 0.02%)</title><rect x="1042.3" y="533" width="0.2" height="15.0" fill="rgb(234,127,12)" rx="2" ry="2" />
<text  x="1045.28" y="543.5" ></text>
</g>
<g >
<title>COutPoint::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (167 samples, 0.18%)</title><rect x="487.3" y="181" width="2.2" height="15.0" fill="rgb(212,160,18)" rx="2" ry="2" />
<text  x="490.33" y="191.5" ></text>
</g>
<g >
<title>ReadCompactSize&lt;CDataStream&gt; (20 samples, 0.02%)</title><rect x="448.1" y="357" width="0.2" height="15.0" fill="rgb(252,122,25)" rx="2" ry="2" />
<text  x="451.06" y="367.5" ></text>
</g>
<g >
<title>RewindBlockIndex (20 samples, 0.02%)</title><rect x="32.3" y="709" width="0.3" height="15.0" fill="rgb(240,90,3)" rx="2" ry="2" />
<text  x="35.35" y="719.5" ></text>
</g>
<g >
<title>__lock_get (17 samples, 0.02%)</title><rect x="107.7" y="389" width="0.2" height="15.0" fill="rgb(206,116,47)" rx="2" ry="2" />
<text  x="110.68" y="399.5" ></text>
</g>
<g >
<title>_int_free (33 samples, 0.04%)</title><rect x="122.1" y="453" width="0.5" height="15.0" fill="rgb(238,145,54)" rx="2" ry="2" />
<text  x="125.13" y="463.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;CTxIn*, CTxIn&gt; (8 samples, 0.01%)</title><rect x="521.2" y="325" width="0.1" height="15.0" fill="rgb(229,70,15)" rx="2" ry="2" />
<text  x="524.16" y="335.5" ></text>
</g>
<g >
<title>operator new (43 samples, 0.05%)</title><rect x="822.2" y="533" width="0.5" height="15.0" fill="rgb(211,206,31)" rx="2" ry="2" />
<text  x="825.19" y="543.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (901 samples, 0.98%)</title><rect x="1107.7" y="581" width="11.5" height="15.0" fill="rgb(223,220,24)" rx="2" ry="2" />
<text  x="1110.65" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_drop_node (83 samples, 0.09%)</title><rect x="544.9" y="565" width="1.1" height="15.0" fill="rgb(249,145,51)" rx="2" ry="2" />
<text  x="547.91" y="575.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;CTxIn const*, CTxIn*&gt; (11 samples, 0.01%)</title><rect x="445.1" y="293" width="0.1" height="15.0" fill="rgb(235,77,52)" rx="2" ry="2" />
<text  x="448.09" y="303.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (45 samples, 0.05%)</title><rect x="370.6" y="597" width="0.5" height="15.0" fill="rgb(210,54,32)" rx="2" ry="2" />
<text  x="373.56" y="607.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char*&gt; (8 samples, 0.01%)</title><rect x="843.3" y="501" width="0.1" height="15.0" fill="rgb(212,104,2)" rx="2" ry="2" />
<text  x="846.26" y="511.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt; &gt;::operator[] (403 samples, 0.44%)</title><rect x="1085.3" y="565" width="5.2" height="15.0" fill="rgb(235,142,9)" rx="2" ry="2" />
<text  x="1088.34" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::erase[abi:cxx11] (11 samples, 0.01%)</title><rect x="1161.2" y="757" width="0.2" height="15.0" fill="rgb(253,120,21)" rx="2" ry="2" />
<text  x="1164.21" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::resize (332 samples, 0.36%)</title><rect x="442.4" y="357" width="4.3" height="15.0" fill="rgb(226,205,54)" rx="2" ry="2" />
<text  x="445.40" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt;::construct&lt;std::pair&lt;char* const, unsigned long&gt;, char*, unsigned long&amp;&gt; (11 samples, 0.01%)</title><rect x="618.1" y="469" width="0.2" height="15.0" fill="rgb(208,45,14)" rx="2" ry="2" />
<text  x="621.13" y="479.5" ></text>
</g>
<g >
<title>CHashWriter::write (18 samples, 0.02%)</title><rect x="510.9" y="101" width="0.2" height="15.0" fill="rgb(229,222,29)" rx="2" ry="2" />
<text  x="513.87" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_get_node (17 samples, 0.02%)</title><rect x="629.5" y="501" width="0.2" height="15.0" fill="rgb(248,133,32)" rx="2" ry="2" />
<text  x="632.51" y="511.5" ></text>
</g>
<g >
<title>CWalletTx::Confirmation::Confirmation (10 samples, 0.01%)</title><rect x="1022.7" y="661" width="0.1" height="15.0" fill="rgb(207,62,33)" rx="2" ry="2" />
<text  x="1025.69" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_value (130 samples, 0.14%)</title><rect x="977.4" y="597" width="1.6" height="15.0" fill="rgb(226,90,10)" rx="2" ry="2" />
<text  x="980.37" y="607.5" ></text>
</g>
<g >
<title>__lock_get_internal (37 samples, 0.04%)</title><rect x="98.3" y="373" width="0.4" height="15.0" fill="rgb(249,43,10)" rx="2" ry="2" />
<text  x="101.28" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_deallocate (9 samples, 0.01%)</title><rect x="640.6" y="613" width="0.1" height="15.0" fill="rgb(222,114,10)" rx="2" ry="2" />
<text  x="643.60" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;::_M_ptr (13 samples, 0.01%)</title><rect x="777.2" y="565" width="0.1" height="15.0" fill="rgb(227,64,21)" rx="2" ry="2" />
<text  x="780.18" y="575.5" ></text>
</g>
<g >
<title>base_blob&lt;160u&gt;::base_blob (8 samples, 0.01%)</title><rect x="736.7" y="565" width="0.2" height="15.0" fill="rgb(235,205,33)" rx="2" ry="2" />
<text  x="739.75" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;::_M_ptr (24 samples, 0.03%)</title><rect x="689.1" y="533" width="0.3" height="15.0" fill="rgb(238,181,2)" rx="2" ry="2" />
<text  x="692.10" y="543.5" ></text>
</g>
<g >
<title>CHash256::Write (10 samples, 0.01%)</title><rect x="502.9" y="277" width="0.1" height="15.0" fill="rgb(207,13,27)" rx="2" ry="2" />
<text  x="505.90" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~_Vector_base (22 samples, 0.02%)</title><rect x="519.5" y="293" width="0.3" height="15.0" fill="rgb(246,70,9)" rx="2" ry="2" />
<text  x="522.51" y="303.5" ></text>
</g>
<g >
<title>base_uint&lt;256u&gt;::operator&gt;&gt;= (32 samples, 0.03%)</title><rect x="47.0" y="629" width="0.4" height="15.0" fill="rgb(234,119,28)" rx="2" ry="2" />
<text  x="49.97" y="639.5" ></text>
</g>
<g >
<title>ECCVerifyHandle::ECCVerifyHandle (32 samples, 0.03%)</title><rect x="1149.5" y="677" width="0.4" height="15.0" fill="rgb(232,85,17)" rx="2" ry="2" />
<text  x="1152.48" y="687.5" ></text>
</g>
<g >
<title>__db_cursor_int (15 samples, 0.02%)</title><rect x="151.9" y="533" width="0.2" height="15.0" fill="rgb(213,1,41)" rx="2" ry="2" />
<text  x="154.87" y="543.5" ></text>
</g>
<g >
<title>sha256_shani::Transform (127 samples, 0.14%)</title><rect x="1120.6" y="613" width="1.7" height="15.0" fill="rgb(241,16,15)" rx="2" ry="2" />
<text  x="1123.63" y="623.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CSizeComputer, 28u, unsigned char&gt; (59 samples, 0.06%)</title><rect x="1036.4" y="357" width="0.8" height="15.0" fill="rgb(228,150,21)" rx="2" ry="2" />
<text  x="1039.41" y="367.5" ></text>
</g>
<g >
<title>_mm_sha256rnds2_epu32 (126 samples, 0.14%)</title><rect x="1116.9" y="229" width="1.6" height="15.0" fill="rgb(210,80,30)" rx="2" ry="2" />
<text  x="1119.93" y="239.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, long&amp;&gt; (33 samples, 0.04%)</title><rect x="370.1" y="597" width="0.4" height="15.0" fill="rgb(227,59,23)" rx="2" ry="2" />
<text  x="373.06" y="607.5" ></text>
</g>
<g >
<title>std::less&lt;COutPoint&gt;::operator (376 samples, 0.41%)</title><rect x="898.2" y="597" width="4.8" height="15.0" fill="rgb(221,3,52)" rx="2" ry="2" />
<text  x="901.20" y="607.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (12 samples, 0.01%)</title><rect x="815.5" y="389" width="0.2" height="15.0" fill="rgb(237,23,49)" rx="2" ry="2" />
<text  x="818.54" y="399.5" ></text>
</g>
<g >
<title>std::make_pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false, false&gt;, bool&gt; (23 samples, 0.02%)</title><rect x="808.3" y="325" width="0.3" height="15.0" fill="rgb(211,35,18)" rx="2" ry="2" />
<text  x="811.30" y="335.5" ></text>
</g>
<g >
<title>__lock_get (8 samples, 0.01%)</title><rect x="94.2" y="373" width="0.1" height="15.0" fill="rgb(246,160,0)" rx="2" ry="2" />
<text  x="97.16" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_default_append (102 samples, 0.11%)</title><rect x="363.9" y="453" width="1.3" height="15.0" fill="rgb(214,133,51)" rx="2" ry="2" />
<text  x="366.91" y="463.5" ></text>
</g>
<g >
<title>__mutex_alloc_int (9 samples, 0.01%)</title><rect x="161.3" y="549" width="0.1" height="15.0" fill="rgb(234,51,8)" rx="2" ry="2" />
<text  x="164.32" y="559.5" ></text>
</g>
<g >
<title>CWalletTx::Confirmation::Confirmation (9 samples, 0.01%)</title><rect x="531.9" y="613" width="0.1" height="15.0" fill="rgb(220,0,51)" rx="2" ry="2" />
<text  x="534.93" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_valptr (97 samples, 0.11%)</title><rect x="936.6" y="565" width="1.3" height="15.0" fill="rgb(244,199,31)" rx="2" ry="2" />
<text  x="939.65" y="575.5" ></text>
</g>
<g >
<title>CKey::CKey (1,820 samples, 1.98%)</title><rect x="797.7" y="501" width="23.3" height="15.0" fill="rgb(227,180,23)" rx="2" ry="2" />
<text  x="800.68" y="511.5" >C..</text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::operator (102 samples, 0.11%)</title><rect x="880.7" y="533" width="1.3" height="15.0" fill="rgb(229,116,10)" rx="2" ry="2" />
<text  x="883.71" y="543.5" ></text>
</g>
<g >
<title>CheckTransaction (2,050 samples, 2.22%)</title><rect x="1027.8" y="677" width="26.3" height="15.0" fill="rgb(230,92,11)" rx="2" ry="2" />
<text  x="1030.84" y="687.5" >C..</text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned char&gt; (10 samples, 0.01%)</title><rect x="1097.2" y="533" width="0.1" height="15.0" fill="rgb(230,212,30)" rx="2" ry="2" />
<text  x="1100.19" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt; &gt;::deallocate (13 samples, 0.01%)</title><rect x="637.4" y="453" width="0.2" height="15.0" fill="rgb(246,98,5)" rx="2" ry="2" />
<text  x="640.40" y="463.5" ></text>
</g>
<g >
<title>ShiftMessageB (8 samples, 0.01%)</title><rect x="1120.5" y="629" width="0.1" height="15.0" fill="rgb(222,47,39)" rx="2" ry="2" />
<text  x="1123.47" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, CWalletTx*&gt;, std::_Select1st&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;long, CWalletTx*&gt; &gt; (11 samples, 0.01%)</title><rect x="1157.4" y="757" width="0.1" height="15.0" fill="rgb(223,29,26)" rx="2" ry="2" />
<text  x="1160.39" y="767.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;interfaces::(anonymous namespace)::LockImpl, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt;, void&gt; (70 samples, 0.08%)</title><rect x="952.6" y="613" width="0.9" height="15.0" fill="rgb(243,123,31)" rx="2" ry="2" />
<text  x="955.57" y="623.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, unsigned int&gt; (43 samples, 0.05%)</title><rect x="507.6" y="229" width="0.6" height="15.0" fill="rgb(227,90,1)" rx="2" ry="2" />
<text  x="510.63" y="239.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (411 samples, 0.45%)</title><rect x="388.7" y="517" width="5.3" height="15.0" fill="rgb(219,120,0)" rx="2" ry="2" />
<text  x="391.70" y="527.5" ></text>
</g>
<g >
<title>CScriptID::CScriptID (1,320 samples, 1.43%)</title><rect x="662.7" y="645" width="16.9" height="15.0" fill="rgb(233,115,8)" rx="2" ry="2" />
<text  x="665.73" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (8 samples, 0.01%)</title><rect x="838.3" y="565" width="0.1" height="15.0" fill="rgb(254,3,52)" rx="2" ry="2" />
<text  x="841.32" y="575.5" ></text>
</g>
<g >
<title>std::default_delete&lt;BerkeleyDatabase&gt;::operator (13 samples, 0.01%)</title><rect x="162.4" y="661" width="0.1" height="15.0" fill="rgb(226,223,18)" rx="2" ry="2" />
<text  x="165.36" y="671.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::operator[] (14 samples, 0.02%)</title><rect x="450.1" y="165" width="0.2" height="15.0" fill="rgb(230,203,48)" rx="2" ry="2" />
<text  x="453.11" y="175.5" ></text>
</g>
<g >
<title>CTransaction::CTransaction (352 samples, 0.38%)</title><rect x="162.5" y="565" width="4.5" height="15.0" fill="rgb(223,124,49)" rx="2" ry="2" />
<text  x="165.53" y="575.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, unsigned char  (24 samples, 0.03%)</title><rect x="365.3" y="533" width="0.3" height="15.0" fill="rgb(216,32,6)" rx="2" ry="2" />
<text  x="368.27" y="543.5" ></text>
</g>
<g >
<title>__memp_fget (434 samples, 0.47%)</title><rect x="84.9" y="405" width="5.6" height="15.0" fill="rgb(249,196,14)" rx="2" ry="2" />
<text  x="87.94" y="415.5" ></text>
</g>
<g >
<title>__dbc_cleanup (8 samples, 0.01%)</title><rect x="68.0" y="517" width="0.1" height="15.0" fill="rgb(207,86,44)" rx="2" ry="2" />
<text  x="70.98" y="527.5" ></text>
</g>
<g >
<title>__lock_get_internal (26 samples, 0.03%)</title><rect x="70.0" y="437" width="0.4" height="15.0" fill="rgb(211,148,5)" rx="2" ry="2" />
<text  x="73.04" y="447.5" ></text>
</g>
<g >
<title>CSHA256::Write (38 samples, 0.04%)</title><rect x="491.2" y="69" width="0.5" height="15.0" fill="rgb(240,172,18)" rx="2" ry="2" />
<text  x="494.21" y="79.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (19 samples, 0.02%)</title><rect x="131.5" y="421" width="0.3" height="15.0" fill="rgb(247,207,51)" rx="2" ry="2" />
<text  x="134.51" y="431.5" ></text>
</g>
<g >
<title>__db_lput (31 samples, 0.03%)</title><rect x="133.4" y="501" width="0.4" height="15.0" fill="rgb(253,88,29)" rx="2" ry="2" />
<text  x="136.44" y="511.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::operator* (35 samples, 0.04%)</title><rect x="1055.1" y="613" width="0.5" height="15.0" fill="rgb(239,95,50)" rx="2" ry="2" />
<text  x="1058.11" y="623.5" ></text>
</g>
<g >
<title>ser_readdata32&lt;CDataStream&gt; (13 samples, 0.01%)</title><rect x="369.8" y="565" width="0.1" height="15.0" fill="rgb(215,133,24)" rx="2" ry="2" />
<text  x="372.76" y="575.5" ></text>
</g>
<g >
<title>UniqueLock&lt;AnnotatedMixin&lt;std::recursive_mutex&gt;, std::unique_lock&lt;std::recursive_mutex&gt; &gt;::Enter (1,047 samples, 1.14%)</title><rect x="837.2" y="629" width="13.4" height="15.0" fill="rgb(243,68,8)" rx="2" ry="2" />
<text  x="840.18" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;interfaces::(anonymous namespace)::LockImpl, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt;::_M_ptr (18 samples, 0.02%)</title><rect x="952.8" y="581" width="0.3" height="15.0" fill="rgb(231,26,40)" rx="2" ry="2" />
<text  x="955.83" y="591.5" ></text>
</g>
<g >
<title>__db_lget (22 samples, 0.02%)</title><rect x="104.4" y="405" width="0.3" height="15.0" fill="rgb(247,180,29)" rx="2" ry="2" />
<text  x="107.38" y="415.5" ></text>
</g>
<g >
<title>ser_writedata32&lt;CHashWriter&gt; (23 samples, 0.02%)</title><rect x="505.7" y="117" width="0.3" height="15.0" fill="rgb(212,134,22)" rx="2" ry="2" />
<text  x="508.69" y="127.5" ></text>
</g>
<g >
<title>CSHA256::Finalize (33 samples, 0.04%)</title><rect x="678.7" y="597" width="0.4" height="15.0" fill="rgb(244,177,26)" rx="2" ry="2" />
<text  x="681.66" y="607.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::is_direct (11 samples, 0.01%)</title><rect x="1040.7" y="325" width="0.2" height="15.0" fill="rgb(221,183,32)" rx="2" ry="2" />
<text  x="1043.71" y="335.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::end (11 samples, 0.01%)</title><rect x="679.5" y="629" width="0.1" height="15.0" fill="rgb(225,8,11)" rx="2" ry="2" />
<text  x="682.49" y="639.5" ></text>
</g>
<g >
<title>std::map&lt;uint256, CWalletTx, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::lower_bound (1,528 samples, 1.66%)</title><rect x="871.6" y="597" width="19.6" height="15.0" fill="rgb(248,228,36)" rx="2" ry="2" />
<text  x="874.64" y="607.5" ></text>
</g>
<g >
<title>CTransaction::ComputeHash (1,565 samples, 1.70%)</title><rect x="480.1" y="437" width="20.0" height="15.0" fill="rgb(232,123,28)" rx="2" ry="2" />
<text  x="483.07" y="447.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (11 samples, 0.01%)</title><rect x="1168.0" y="741" width="0.1" height="15.0" fill="rgb(230,178,54)" rx="2" ry="2" />
<text  x="1170.96" y="751.5" ></text>
</g>
<g >
<title>std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::pair&lt;char*&amp;&amp;, 0ul&gt; (13 samples, 0.01%)</title><rect x="635.7" y="453" width="0.1" height="15.0" fill="rgb(245,58,46)" rx="2" ry="2" />
<text  x="638.67" y="463.5" ></text>
</g>
<g >
<title>ThreadScriptCheck (24 samples, 0.03%)</title><rect x="1145.9" y="677" width="0.3" height="15.0" fill="rgb(243,65,41)" rx="2" ry="2" />
<text  x="1148.87" y="687.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::item_ptr (9 samples, 0.01%)</title><rect x="1151.8" y="757" width="0.2" height="15.0" fill="rgb(205,44,53)" rx="2" ry="2" />
<text  x="1154.84" y="767.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;interfaces::(anonymous namespace)::LockImpl, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt;::get_deleter (30 samples, 0.03%)</title><rect x="954.6" y="613" width="0.4" height="15.0" fill="rgb(220,175,19)" rx="2" ry="2" />
<text  x="957.64" y="623.5" ></text>
</g>
<g >
<title>std::forward&lt;uint256&gt; (13 samples, 0.01%)</title><rect x="905.2" y="517" width="0.1" height="15.0" fill="rgb(251,86,1)" rx="2" ry="2" />
<text  x="908.16" y="527.5" ></text>
</g>
<g >
<title>CuckooCache::bit_packed_atomic_flags::bit_packed_atomic_flags (14 samples, 0.02%)</title><rect x="30.5" y="645" width="0.2" height="15.0" fill="rgb(244,222,54)" rx="2" ry="2" />
<text  x="33.53" y="655.5" ></text>
</g>
<g >
<title>std::forward&lt;long&amp;&gt; (9 samples, 0.01%)</title><rect x="968.0" y="645" width="0.1" height="15.0" fill="rgb(249,73,38)" rx="2" ry="2" />
<text  x="971.00" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;CMerkleTx, std::allocator&lt;CMerkleTx&gt; &gt;::vector (50 samples, 0.05%)</title><rect x="555.9" y="629" width="0.7" height="15.0" fill="rgb(230,58,3)" rx="2" ry="2" />
<text  x="558.92" y="639.5" ></text>
</g>
<g >
<title>__db_cursor_int (23 samples, 0.02%)</title><rect x="96.3" y="453" width="0.3" height="15.0" fill="rgb(225,105,28)" rx="2" ry="2" />
<text  x="99.33" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::clear (28 samples, 0.03%)</title><rect x="459.6" y="325" width="0.4" height="15.0" fill="rgb(226,58,35)" rx="2" ry="2" />
<text  x="462.63" y="335.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (12 samples, 0.01%)</title><rect x="139.2" y="437" width="0.2" height="15.0" fill="rgb(215,34,53)" rx="2" ry="2" />
<text  x="142.23" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_deallocate (14 samples, 0.02%)</title><rect x="769.2" y="437" width="0.2" height="15.0" fill="rgb(254,207,1)" rx="2" ry="2" />
<text  x="772.24" y="447.5" ></text>
</g>
<g >
<title>CWallet::Verify (8,490 samples, 9.21%)</title><rect x="53.8" y="693" width="108.7" height="15.0" fill="rgb(209,226,30)" rx="2" ry="2" />
<text  x="56.80" y="703.5" >CWallet::Verify</text>
</g>
<g >
<title>ser_writedata8&lt;CHashWriter&gt; (22 samples, 0.02%)</title><rect x="511.1" y="85" width="0.3" height="15.0" fill="rgb(212,7,38)" rx="2" ry="2" />
<text  x="514.11" y="95.5" ></text>
</g>
<g >
<title>COutPoint::SerializationOp&lt;CSizeComputer, CSerActionSerialize&gt; (96 samples, 0.10%)</title><rect x="1034.2" y="421" width="1.2" height="15.0" fill="rgb(237,158,44)" rx="2" ry="2" />
<text  x="1037.18" y="431.5" ></text>
</g>
<g >
<title>__db_get (772 samples, 0.84%)</title><rect x="81.2" y="485" width="9.9" height="15.0" fill="rgb(253,10,14)" rx="2" ry="2" />
<text  x="84.23" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::_M_ptr (53 samples, 0.06%)</title><rect x="908.5" y="533" width="0.7" height="15.0" fill="rgb(254,27,53)" rx="2" ry="2" />
<text  x="911.49" y="543.5" ></text>
</g>
<g >
<title>ShiftMessageC (10 samples, 0.01%)</title><rect x="1114.2" y="357" width="0.2" height="15.0" fill="rgb(222,195,29)" rx="2" ry="2" />
<text  x="1117.22" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (25 samples, 0.03%)</title><rect x="518.8" y="309" width="0.3" height="15.0" fill="rgb(210,132,38)" rx="2" ry="2" />
<text  x="521.82" y="319.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;unsigned int&gt; (23 samples, 0.02%)</title><rect x="499.8" y="341" width="0.3" height="15.0" fill="rgb(254,207,47)" rx="2" ry="2" />
<text  x="502.81" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (17 samples, 0.02%)</title><rect x="542.7" y="581" width="0.2" height="15.0" fill="rgb(252,133,36)" rx="2" ry="2" />
<text  x="545.69" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned char&gt; &gt;::max_size (25 samples, 0.03%)</title><rect x="467.6" y="261" width="0.3" height="15.0" fill="rgb(223,104,15)" rx="2" ry="2" />
<text  x="470.62" y="271.5" ></text>
</g>
<g >
<title>__memp_fput (25 samples, 0.03%)</title><rect x="105.3" y="405" width="0.4" height="15.0" fill="rgb(246,208,13)" rx="2" ry="2" />
<text  x="108.35" y="415.5" ></text>
</g>
<g >
<title>CTxIn::Serialize&lt;CSizeComputer&gt; (357 samples, 0.39%)</title><rect x="1033.2" y="517" width="4.5" height="15.0" fill="rgb(225,6,39)" rx="2" ry="2" />
<text  x="1036.17" y="527.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (12 samples, 0.01%)</title><rect x="692.3" y="629" width="0.1" height="15.0" fill="rgb(218,42,20)" rx="2" ry="2" />
<text  x="695.28" y="639.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; &gt; (404 samples, 0.44%)</title><rect x="494.6" y="341" width="5.2" height="15.0" fill="rgb(234,140,54)" rx="2" ry="2" />
<text  x="497.64" y="351.5" ></text>
</g>
<g >
<title>std::__sort&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, CBlockIndex*&gt;*, std::vector&lt;std::pair&lt;int, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;int, CBlockIndex*&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (27 samples, 0.03%)</title><rect x="48.8" y="661" width="0.4" height="15.0" fill="rgb(244,159,33)" rx="2" ry="2" />
<text  x="51.82" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::size (15 samples, 0.02%)</title><rect x="39.9" y="629" width="0.2" height="15.0" fill="rgb(218,57,12)" rx="2" ry="2" />
<text  x="42.88" y="639.5" ></text>
</g>
<g >
<title>std::operator==&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (31 samples, 0.03%)</title><rect x="1054.7" y="597" width="0.4" height="15.0" fill="rgb(213,80,35)" rx="2" ry="2" />
<text  x="1057.71" y="607.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (55 samples, 0.06%)</title><rect x="160.5" y="533" width="0.7" height="15.0" fill="rgb(221,215,20)" rx="2" ry="2" />
<text  x="163.45" y="543.5" ></text>
</g>
<g >
<title>__memp_fput (30 samples, 0.03%)</title><rect x="70.9" y="469" width="0.4" height="15.0" fill="rgb(215,132,4)" rx="2" ry="2" />
<text  x="73.93" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (46 samples, 0.05%)</title><rect x="1067.2" y="661" width="0.6" height="15.0" fill="rgb(219,5,8)" rx="2" ry="2" />
<text  x="1070.21" y="671.5" ></text>
</g>
<g >
<title>ser_writedata32&lt;CHashWriter&gt; (14 samples, 0.02%)</title><rect x="502.9" y="309" width="0.2" height="15.0" fill="rgb(252,190,17)" rx="2" ry="2" />
<text  x="505.87" y="319.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;CTransaction const,  (44 samples, 0.05%)</title><rect x="33.7" y="597" width="0.6" height="15.0" fill="rgb(215,56,37)" rx="2" ry="2" />
<text  x="36.71" y="607.5" ></text>
</g>
<g >
<title>__db_get (378 samples, 0.41%)</title><rect x="141.8" y="565" width="4.9" height="15.0" fill="rgb(241,225,12)" rx="2" ry="2" />
<text  x="144.84" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, CWalletTx*&gt;, std::_Select1st&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::_S_left (28 samples, 0.03%)</title><rect x="1006.6" y="613" width="0.3" height="15.0" fill="rgb(254,129,33)" rx="2" ry="2" />
<text  x="1009.57" y="623.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.01%)</title><rect x="146.0" y="421" width="0.1" height="15.0" fill="rgb(220,16,8)" rx="2" ry="2" />
<text  x="148.99" y="431.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (30 samples, 0.03%)</title><rect x="947.0" y="501" width="0.4" height="15.0" fill="rgb(225,125,15)" rx="2" ry="2" />
<text  x="950.05" y="511.5" ></text>
</g>
<g >
<title>CRIPEMD160::Write (10 samples, 0.01%)</title><rect x="715.0" y="581" width="0.2" height="15.0" fill="rgb(230,46,46)" rx="2" ry="2" />
<text  x="718.03" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::operator+ (9 samples, 0.01%)</title><rect x="1099.5" y="661" width="0.1" height="15.0" fill="rgb(245,106,41)" rx="2" ry="2" />
<text  x="1102.47" y="671.5" ></text>
</g>
<g >
<title>__uint32_identity (13 samples, 0.01%)</title><rect x="714.4" y="533" width="0.2" height="15.0" fill="rgb(216,151,25)" rx="2" ry="2" />
<text  x="717.43" y="543.5" ></text>
</g>
<g >
<title>CHash160::Finalize (112 samples, 0.12%)</title><rect x="1119.2" y="693" width="1.4" height="15.0" fill="rgb(222,194,17)" rx="2" ry="2" />
<text  x="1122.19" y="703.5" ></text>
</g>
<g >
<title>std::multimap&lt;unsigned long, char*, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::emplace&lt;unsigned long const&amp;, char*&amp;&gt; (204 samples, 0.22%)</title><rect x="800.5" y="373" width="2.6" height="15.0" fill="rgb(240,168,40)" rx="2" ry="2" />
<text  x="803.49" y="383.5" ></text>
</g>
<g >
<title>LeaveCritical (25 samples, 0.03%)</title><rect x="850.7" y="629" width="0.3" height="15.0" fill="rgb(226,3,12)" rx="2" ry="2" />
<text  x="853.73" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;interfaces::(anonymous namespace)::LockImpl, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt;::_M_ptr (8 samples, 0.01%)</title><rect x="955.1" y="597" width="0.1" height="15.0" fill="rgb(206,6,38)" rx="2" ry="2" />
<text  x="958.11" y="607.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;LockedPool::LockedPageArena&gt;::operator++ (11 samples, 0.01%)</title><rect x="815.2" y="389" width="0.2" height="15.0" fill="rgb(207,151,32)" rx="2" ry="2" />
<text  x="818.23" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node_ptr (22 samples, 0.02%)</title><rect x="568.5" y="437" width="0.3" height="15.0" fill="rgb(235,86,37)" rx="2" ry="2" />
<text  x="571.50" y="447.5" ></text>
</g>
<g >
<title>CWallet::LoadKey (460 samples, 0.50%)</title><rect x="1122.3" y="725" width="5.8" height="15.0" fill="rgb(246,68,42)" rx="2" ry="2" />
<text  x="1125.25" y="735.5" ></text>
</g>
<g >
<title>CSHA256::Finalize (13 samples, 0.01%)</title><rect x="15.9" y="757" width="0.2" height="15.0" fill="rgb(224,198,12)" rx="2" ry="2" />
<text  x="18.89" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (70 samples, 0.08%)</title><rect x="533.5" y="613" width="0.9" height="15.0" fill="rgb(230,123,6)" rx="2" ry="2" />
<text  x="536.46" y="623.5" ></text>
</g>
<g >
<title>CWallet::SyncMetaData (10 samples, 0.01%)</title><rect x="18.4" y="757" width="0.1" height="15.0" fill="rgb(224,54,3)" rx="2" ry="2" />
<text  x="21.41" y="767.5" ></text>
</g>
<g >
<title>CScript::clear (62 samples, 0.07%)</title><rect x="759.3" y="469" width="0.8" height="15.0" fill="rgb(219,184,36)" rx="2" ry="2" />
<text  x="762.31" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::_S_destroy&lt;zero_after_free_allocator&lt;char&gt;, char&gt; (34 samples, 0.04%)</title><rect x="1172.6" y="741" width="0.4" height="15.0" fill="rgb(227,212,37)" rx="2" ry="2" />
<text  x="1175.56" y="751.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (63 samples, 0.07%)</title><rect x="809.1" y="325" width="0.8" height="15.0" fill="rgb(245,90,9)" rx="2" ry="2" />
<text  x="812.13" y="335.5" ></text>
</g>
<g >
<title>CHash256::Write (42 samples, 0.05%)</title><rect x="491.2" y="85" width="0.5" height="15.0" fill="rgb(245,17,28)" rx="2" ry="2" />
<text  x="494.16" y="95.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::construct&lt;std::pair&lt;void*, CLockLocation&gt;, std::pair&lt;void*, CLockLocation&gt; &gt; (34 samples, 0.04%)</title><rect x="849.3" y="549" width="0.5" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="852.32" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;BerkeleyDatabase, std::default_delete&lt;BerkeleyDatabase&gt; &gt;::~unique_ptr (13 samples, 0.01%)</title><rect x="162.4" y="677" width="0.1" height="15.0" fill="rgb(205,202,16)" rx="2" ry="2" />
<text  x="165.36" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_select_on_copy (47 samples, 0.05%)</title><rect x="971.2" y="485" width="0.6" height="15.0" fill="rgb(208,92,49)" rx="2" ry="2" />
<text  x="974.17" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::vector (8 samples, 0.01%)</title><rect x="1031.8" y="517" width="0.1" height="15.0" fill="rgb(222,69,25)" rx="2" ry="2" />
<text  x="1034.81" y="527.5" ></text>
</g>
<g >
<title>operator&lt; (310 samples, 0.34%)</title><rect x="899.0" y="581" width="4.0" height="15.0" fill="rgb(229,129,4)" rx="2" ry="2" />
<text  x="902.05" y="591.5" ></text>
</g>
<g >
<title>std::recursive_mutex::lock (54 samples, 0.06%)</title><rect x="951.1" y="549" width="0.7" height="15.0" fill="rgb(237,7,10)" rx="2" ry="2" />
<text  x="954.14" y="559.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (11 samples, 0.01%)</title><rect x="815.8" y="357" width="0.1" height="15.0" fill="rgb(240,105,31)" rx="2" ry="2" />
<text  x="818.77" y="367.5" ></text>
</g>
<g >
<title>CScriptWitness::CScriptWitness (11 samples, 0.01%)</title><rect x="503.5" y="293" width="0.1" height="15.0" fill="rgb(216,32,54)" rx="2" ry="2" />
<text  x="506.45" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::begin (16 samples, 0.02%)</title><rect x="516.6" y="245" width="0.2" height="15.0" fill="rgb(221,193,25)" rx="2" ry="2" />
<text  x="519.64" y="255.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;char*&gt;::move_iterator (97 samples, 0.11%)</title><rect x="292.5" y="581" width="1.3" height="15.0" fill="rgb(228,217,51)" rx="2" ry="2" />
<text  x="295.54" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_Rb_tree_impl&lt;std::less&lt;COutPoint&gt;, true&gt;::_Rb_tree_impl (38 samples, 0.04%)</title><rect x="1050.5" y="629" width="0.5" height="15.0" fill="rgb(232,60,38)" rx="2" ry="2" />
<text  x="1053.47" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::~vector (38 samples, 0.04%)</title><rect x="1032.2" y="517" width="0.4" height="15.0" fill="rgb(248,147,17)" rx="2" ry="2" />
<text  x="1035.16" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;CKeyID&gt;::operator (13 samples, 0.01%)</title><rect x="857.6" y="613" width="0.2" height="15.0" fill="rgb(235,133,21)" rx="2" ry="2" />
<text  x="860.62" y="623.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, CBlockIndex*&gt;*, std::vector&lt;std::pair&lt;int, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;int, CBlockIndex*&gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (18 samples, 0.02%)</title><rect x="48.9" y="629" width="0.2" height="15.0" fill="rgb(246,78,23)" rx="2" ry="2" />
<text  x="51.91" y="639.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;*&amp;, std::_Rb_tree_node_base*&amp;, true&gt; (15 samples, 0.02%)</title><rect x="927.2" y="581" width="0.2" height="15.0" fill="rgb(237,189,4)" rx="2" ry="2" />
<text  x="930.20" y="591.5" ></text>
</g>
<g >
<title>std::mutex::unlock (11 samples, 0.01%)</title><rect x="1094.6" y="565" width="0.1" height="15.0" fill="rgb(233,4,53)" rx="2" ry="2" />
<text  x="1097.60" y="575.5" ></text>
</g>
<g >
<title>__bamc_compress_dup (19 samples, 0.02%)</title><rect x="343.6" y="613" width="0.2" height="15.0" fill="rgb(231,111,30)" rx="2" ry="2" />
<text  x="346.57" y="623.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::resize (43 samples, 0.05%)</title><rect x="660.5" y="581" width="0.6" height="15.0" fill="rgb(233,215,18)" rx="2" ry="2" />
<text  x="663.52" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt;::deallocate (9 samples, 0.01%)</title><rect x="637.4" y="437" width="0.2" height="15.0" fill="rgb(221,84,45)" rx="2" ry="2" />
<text  x="640.45" y="447.5" ></text>
</g>
<g >
<title>__db_lput (26 samples, 0.03%)</title><rect x="110.9" y="437" width="0.3" height="15.0" fill="rgb(219,26,32)" rx="2" ry="2" />
<text  x="113.89" y="447.5" ></text>
</g>
<g >
<title>CHashWriter::write (19 samples, 0.02%)</title><rect x="511.1" y="69" width="0.3" height="15.0" fill="rgb(218,209,0)" rx="2" ry="2" />
<text  x="514.15" y="79.5" ></text>
</g>
<g >
<title>CChain::Contains (76 samples, 0.08%)</title><rect x="957.7" y="645" width="0.9" height="15.0" fill="rgb(205,128,35)" rx="2" ry="2" />
<text  x="960.66" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, CWalletTx*&gt;, std::_Select1st&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;long, CWalletTx*&gt; &gt; (173 samples, 0.19%)</title><rect x="1001.8" y="629" width="2.2" height="15.0" fill="rgb(243,40,12)" rx="2" ry="2" />
<text  x="1004.79" y="639.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned (12 samples, 0.01%)</title><rect x="30.3" y="533" width="0.2" height="15.0" fill="rgb(226,27,53)" rx="2" ry="2" />
<text  x="33.32" y="543.5" ></text>
</g>
<g >
<title>CScript::SerializationOp&lt;CSizeComputer, CSerActionSerialize&gt; (60 samples, 0.07%)</title><rect x="1040.1" y="421" width="0.8" height="15.0" fill="rgb(242,59,43)" rx="2" ry="2" />
<text  x="1043.11" y="431.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.01%)</title><rect x="92.7" y="277" width="0.1" height="15.0" fill="rgb(241,198,13)" rx="2" ry="2" />
<text  x="95.68" y="287.5" ></text>
</g>
<g >
<title>Dbt::set_flags (19 samples, 0.02%)</title><rect x="169.9" y="661" width="0.2" height="15.0" fill="rgb(215,158,4)" rx="2" ry="2" />
<text  x="172.86" y="671.5" ></text>
</g>
<g >
<title>CTxOut::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (183 samples, 0.20%)</title><rect x="164.7" y="373" width="2.3" height="15.0" fill="rgb(223,36,23)" rx="2" ry="2" />
<text  x="167.69" y="383.5" ></text>
</g>
<g >
<title>CSHA256::Write (16 samples, 0.02%)</title><rect x="43.4" y="453" width="0.2" height="15.0" fill="rgb(253,2,47)" rx="2" ry="2" />
<text  x="46.41" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (16 samples, 0.02%)</title><rect x="948.5" y="453" width="0.2" height="15.0" fill="rgb(243,133,0)" rx="2" ry="2" />
<text  x="951.45" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::operator[] (11 samples, 0.01%)</title><rect x="565.0" y="629" width="0.1" height="15.0" fill="rgb(213,109,6)" rx="2" ry="2" />
<text  x="567.99" y="639.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator (8 samples, 0.01%)</title><rect x="425.8" y="549" width="0.1" height="15.0" fill="rgb(207,200,18)" rx="2" ry="2" />
<text  x="428.79" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt; &gt;::__normal_iterator (35 samples, 0.04%)</title><rect x="301.2" y="629" width="0.4" height="15.0" fill="rgb(213,79,10)" rx="2" ry="2" />
<text  x="304.17" y="639.5" ></text>
</g>
<g >
<title>__db_verify_internal (10 samples, 0.01%)</title><rect x="1144.7" y="629" width="0.1" height="15.0" fill="rgb(248,157,0)" rx="2" ry="2" />
<text  x="1147.70" y="639.5" ></text>
</g>
<g >
<title>std::forward&lt;std::_Rb_tree_node&lt;COutPoint&gt;*&amp;&gt; (9 samples, 0.01%)</title><rect x="1046.2" y="597" width="0.1" height="15.0" fill="rgb(219,21,38)" rx="2" ry="2" />
<text  x="1049.23" y="607.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::resize (21 samples, 0.02%)</title><rect x="440.2" y="149" width="0.3" height="15.0" fill="rgb(236,221,39)" rx="2" ry="2" />
<text  x="443.24" y="159.5" ></text>
</g>
<g >
<title>std::operator!= (8 samples, 0.01%)</title><rect x="941.4" y="645" width="0.1" height="15.0" fill="rgb(252,55,4)" rx="2" ry="2" />
<text  x="944.37" y="655.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (18 samples, 0.02%)</title><rect x="71.1" y="453" width="0.2" height="15.0" fill="rgb(237,92,36)" rx="2" ry="2" />
<text  x="74.09" y="463.5" ></text>
</g>
<g >
<title>ser_writedata32&lt;CHashWriter&gt; (10 samples, 0.01%)</title><rect x="520.3" y="309" width="0.1" height="15.0" fill="rgb(233,77,49)" rx="2" ry="2" />
<text  x="523.25" y="319.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;::operator (10 samples, 0.01%)</title><rect x="779.7" y="533" width="0.1" height="15.0" fill="rgb(246,100,16)" rx="2" ry="2" />
<text  x="782.71" y="543.5" ></text>
</g>
<g >
<title>__lock_put (17 samples, 0.02%)</title><rect x="68.5" y="485" width="0.2" height="15.0" fill="rgb(208,3,53)" rx="2" ry="2" />
<text  x="71.46" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::end (20 samples, 0.02%)</title><rect x="1038.3" y="533" width="0.3" height="15.0" fill="rgb(205,31,7)" rx="2" ry="2" />
<text  x="1041.33" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_erase_aux (58 samples, 0.06%)</title><rect x="610.8" y="517" width="0.7" height="15.0" fill="rgb(222,24,12)" rx="2" ry="2" />
<text  x="613.76" y="527.5" ></text>
</g>
<g >
<title>std::multimap&lt;unsigned long, char*, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::erase[abi:cxx11] (81 samples, 0.09%)</title><rect x="610.6" y="549" width="1.0" height="15.0" fill="rgb(229,229,37)" rx="2" ry="2" />
<text  x="613.60" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (10 samples, 0.01%)</title><rect x="952.2" y="597" width="0.1" height="15.0" fill="rgb(254,79,9)" rx="2" ry="2" />
<text  x="955.18" y="607.5" ></text>
</g>
<g >
<title>AppInit (34 samples, 0.04%)</title><rect x="1149.5" y="709" width="0.4" height="15.0" fill="rgb(205,55,35)" rx="2" ry="2" />
<text  x="1152.47" y="719.5" ></text>
</g>
<g >
<title>__db_cursor (28 samples, 0.03%)</title><rect x="102.5" y="469" width="0.3" height="15.0" fill="rgb(248,91,54)" rx="2" ry="2" />
<text  x="105.46" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (10 samples, 0.01%)</title><rect x="843.4" y="533" width="0.1" height="15.0" fill="rgb(205,127,10)" rx="2" ry="2" />
<text  x="846.36" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;&gt; (939 samples, 1.02%)</title><rect x="413.9" y="581" width="12.0" height="15.0" fill="rgb(220,126,23)" rx="2" ry="2" />
<text  x="416.92" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;COutPoint, uint256&gt; &gt; (205 samples, 0.22%)</title><rect x="903.6" y="597" width="2.7" height="15.0" fill="rgb(232,202,13)" rx="2" ry="2" />
<text  x="906.64" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, char*&gt; &gt;::_M_valptr (21 samples, 0.02%)</title><rect x="566.0" y="501" width="0.3" height="15.0" fill="rgb(230,116,11)" rx="2" ry="2" />
<text  x="569.00" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::erase[abi:cxx11] (64 samples, 0.07%)</title><rect x="803.6" y="357" width="0.8" height="15.0" fill="rgb(206,89,38)" rx="2" ry="2" />
<text  x="806.60" y="367.5" ></text>
</g>
<g >
<title>CTxIn::SerializationOp&lt;CSizeComputer, CSerActionSerialize&gt; (340 samples, 0.37%)</title><rect x="1033.3" y="501" width="4.4" height="15.0" fill="rgb(213,75,28)" rx="2" ry="2" />
<text  x="1036.32" y="511.5" ></text>
</g>
<g >
<title>CTxIn::~CTxIn (59 samples, 0.06%)</title><rect x="503.6" y="309" width="0.7" height="15.0" fill="rgb(237,76,21)" rx="2" ry="2" />
<text  x="506.59" y="319.5" ></text>
</g>
<g >
<title>CLockLocation::~CLockLocation (15 samples, 0.02%)</title><rect x="687.0" y="533" width="0.2" height="15.0" fill="rgb(222,19,24)" rx="2" ry="2" />
<text  x="690.05" y="543.5" ></text>
</g>
<g >
<title>__os_io (28 samples, 0.03%)</title><rect x="79.3" y="389" width="0.3" height="15.0" fill="rgb(254,112,41)" rx="2" ry="2" />
<text  x="82.26" y="399.5" ></text>
</g>
<g >
<title>ser_writedata8&lt;CHashWriter&gt; (25 samples, 0.03%)</title><rect x="491.7" y="85" width="0.3" height="15.0" fill="rgb(229,84,11)" rx="2" ry="2" />
<text  x="494.71" y="95.5" ></text>
</g>
<g >
<title>__memp_fput (29 samples, 0.03%)</title><rect x="137.3" y="469" width="0.3" height="15.0" fill="rgb(233,83,26)" rx="2" ry="2" />
<text  x="140.26" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (10 samples, 0.01%)</title><rect x="120.3" y="437" width="0.1" height="15.0" fill="rgb(232,96,17)" rx="2" ry="2" />
<text  x="123.32" y="447.5" ></text>
</g>
<g >
<title>_int_malloc (9 samples, 0.01%)</title><rect x="975.7" y="533" width="0.1" height="15.0" fill="rgb(248,84,30)" rx="2" ry="2" />
<text  x="978.72" y="543.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (24 samples, 0.03%)</title><rect x="313.4" y="533" width="0.3" height="15.0" fill="rgb(240,80,0)" rx="2" ry="2" />
<text  x="316.43" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::construct&lt;char, char const&amp;&gt; (61 samples, 0.07%)</title><rect x="1171.3" y="741" width="0.8" height="15.0" fill="rgb(220,167,30)" rx="2" ry="2" />
<text  x="1174.29" y="751.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned char*, unsigned char&gt; (21 samples, 0.02%)</title><rect x="475.5" y="357" width="0.2" height="15.0" fill="rgb(218,130,32)" rx="2" ry="2" />
<text  x="478.46" y="367.5" ></text>
</g>
<g >
<title>CWalletTx::Unserialize&lt;CDataStream&gt; (36 samples, 0.04%)</title><rect x="18.8" y="757" width="0.5" height="15.0" fill="rgb(234,63,16)" rx="2" ry="2" />
<text  x="21.84" y="767.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (12 samples, 0.01%)</title><rect x="1098.4" y="597" width="0.1" height="15.0" fill="rgb(223,35,25)" rx="2" ry="2" />
<text  x="1101.38" y="607.5" ></text>
</g>
<g >
<title>std::tuple&lt;CScriptID const&amp;&gt;::tuple&lt;void, true&gt; (17 samples, 0.02%)</title><rect x="786.9" y="597" width="0.2" height="15.0" fill="rgb(238,160,39)" rx="2" ry="2" />
<text  x="789.93" y="607.5" ></text>
</g>
<g >
<title>__db_tas_mutex_readlock (81 samples, 0.09%)</title><rect x="321.9" y="581" width="1.0" height="15.0" fill="rgb(225,8,41)" rx="2" ry="2" />
<text  x="324.89" y="591.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (10 samples, 0.01%)</title><rect x="70.8" y="453" width="0.1" height="15.0" fill="rgb(212,135,50)" rx="2" ry="2" />
<text  x="73.81" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::max_size (12 samples, 0.01%)</title><rect x="623.0" y="613" width="0.2" height="15.0" fill="rgb(250,222,38)" rx="2" ry="2" />
<text  x="626.04" y="623.5" ></text>
</g>
<g >
<title>CTxIn::SerializationOp&lt;CDataStream, CSerActionUnserialize&gt; (550 samples, 0.60%)</title><rect x="435.2" y="325" width="7.0" height="15.0" fill="rgb(210,92,51)" rx="2" ry="2" />
<text  x="438.19" y="335.5" ></text>
</g>
<g >
<title>std::multimap&lt;unsigned long, char*, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::lower_bound (99 samples, 0.11%)</title><rect x="804.4" y="373" width="1.3" height="15.0" fill="rgb(233,226,33)" rx="2" ry="2" />
<text  x="807.42" y="383.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (28 samples, 0.03%)</title><rect x="553.6" y="533" width="0.3" height="15.0" fill="rgb(236,149,11)" rx="2" ry="2" />
<text  x="556.55" y="543.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTransaction&gt; (271 samples, 0.29%)</title><rect x="1137.3" y="517" width="3.5" height="15.0" fill="rgb(215,212,49)" rx="2" ry="2" />
<text  x="1140.31" y="527.5" ></text>
</g>
<g >
<title>CHashWriter::write (271 samples, 0.29%)</title><rect x="1137.3" y="229" width="3.5" height="15.0" fill="rgb(238,29,14)" rx="2" ry="2" />
<text  x="1140.31" y="239.5" ></text>
</g>
<g >
<title>ShiftMessageB (14 samples, 0.02%)</title><rect x="1110.7" y="373" width="0.1" height="15.0" fill="rgb(221,96,10)" rx="2" ry="2" />
<text  x="1113.66" y="383.5" ></text>
</g>
<g >
<title>ShiftMessageB (11 samples, 0.01%)</title><rect x="166.7" y="149" width="0.2" height="15.0" fill="rgb(209,134,14)" rx="2" ry="2" />
<text  x="169.73" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_valptr (20 samples, 0.02%)</title><rect x="969.3" y="597" width="0.2" height="15.0" fill="rgb(239,152,29)" rx="2" ry="2" />
<text  x="972.25" y="607.5" ></text>
</g>
<g >
<title>__dbc_iget (605 samples, 0.66%)</title><rect x="125.2" y="533" width="7.7" height="15.0" fill="rgb(230,214,42)" rx="2" ry="2" />
<text  x="128.16" y="543.5" ></text>
</g>
<g >
<title>__lock_get (48 samples, 0.05%)</title><rect x="112.7" y="389" width="0.6" height="15.0" fill="rgb(237,29,25)" rx="2" ry="2" />
<text  x="115.67" y="399.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTxIn&gt; (283 samples, 0.31%)</title><rect x="504.6" y="293" width="3.6" height="15.0" fill="rgb(205,211,49)" rx="2" ry="2" />
<text  x="507.58" y="303.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 0.05%)</title><rect x="160.6" y="437" width="0.5" height="15.0" fill="rgb(227,12,16)" rx="2" ry="2" />
<text  x="163.58" y="447.5" ></text>
</g>
<g >
<title>[unknown] (23 samples, 0.02%)</title><rect x="101.8" y="293" width="0.3" height="15.0" fill="rgb(211,145,4)" rx="2" ry="2" />
<text  x="104.82" y="303.5" ></text>
</g>
<g >
<title>CScriptWitness::CScriptWitness (9 samples, 0.01%)</title><rect x="16.8" y="757" width="0.1" height="15.0" fill="rgb(210,48,20)" rx="2" ry="2" />
<text  x="19.76" y="767.5" ></text>
</g>
<g >
<title>base_uint&lt;256u&gt;::operator&lt;&lt;= (13 samples, 0.01%)</title><rect x="46.1" y="645" width="0.1" height="15.0" fill="rgb(234,186,18)" rx="2" ry="2" />
<text  x="49.05" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::end (21 samples, 0.02%)</title><rect x="848.0" y="549" width="0.3" height="15.0" fill="rgb(230,188,32)" rx="2" ry="2" />
<text  x="850.99" y="559.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (12 samples, 0.01%)</title><rect x="76.1" y="373" width="0.1" height="15.0" fill="rgb(216,69,44)" rx="2" ry="2" />
<text  x="79.09" y="383.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;BerkeleyEnvironment,  (13 samples, 0.01%)</title><rect x="162.4" y="613" width="0.1" height="15.0" fill="rgb(232,49,13)" rx="2" ry="2" />
<text  x="165.36" y="623.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;&amp;&gt; (53 samples, 0.06%)</title><rect x="529.3" y="629" width="0.6" height="15.0" fill="rgb(253,11,9)" rx="2" ry="2" />
<text  x="532.27" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (13 samples, 0.01%)</title><rect x="630.9" y="533" width="0.1" height="15.0" fill="rgb(207,6,29)" rx="2" ry="2" />
<text  x="633.88" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned char&gt;::destroy&lt;unsigned char&gt; (61 samples, 0.07%)</title><rect x="1079.2" y="613" width="0.8" height="15.0" fill="rgb(237,185,51)" rx="2" ry="2" />
<text  x="1082.21" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::end (17 samples, 0.02%)</title><rect x="682.6" y="565" width="0.2" height="15.0" fill="rgb(235,117,2)" rx="2" ry="2" />
<text  x="685.59" y="575.5" ></text>
</g>
<g >
<title>std::multimap&lt;COutPoint, uint256, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::equal_range (852 samples, 0.92%)</title><rect x="892.3" y="629" width="11.0" height="15.0" fill="rgb(215,209,8)" rx="2" ry="2" />
<text  x="895.35" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_erase_at_end (291 samples, 0.32%)</title><rect x="365.8" y="517" width="3.7" height="15.0" fill="rgb(234,62,33)" rx="2" ry="2" />
<text  x="368.81" y="527.5" ></text>
</g>
<g >
<title>CDataStream::read (11 samples, 0.01%)</title><rect x="448.2" y="325" width="0.1" height="15.0" fill="rgb(245,88,5)" rx="2" ry="2" />
<text  x="451.18" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::~vector (12 samples, 0.01%)</title><rect x="527.7" y="453" width="0.1" height="15.0" fill="rgb(217,87,53)" rx="2" ry="2" />
<text  x="530.69" y="463.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.02%)</title><rect x="948.5" y="469" width="0.2" height="15.0" fill="rgb(216,122,15)" rx="2" ry="2" />
<text  x="951.45" y="479.5" ></text>
</g>
<g >
<title>memory_cleanse (35 samples, 0.04%)</title><rect x="173.9" y="661" width="0.4" height="15.0" fill="rgb(243,27,44)" rx="2" ry="2" />
<text  x="176.86" y="671.5" ></text>
</g>
<g >
<title>CSHA256::Finalize (269 samples, 0.29%)</title><rect x="1111.1" y="421" width="3.5" height="15.0" fill="rgb(232,62,8)" rx="2" ry="2" />
<text  x="1114.12" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::size (12 samples, 0.01%)</title><rect x="458.8" y="309" width="0.1" height="15.0" fill="rgb(252,56,30)" rx="2" ry="2" />
<text  x="461.76" y="319.5" ></text>
</g>
<g >
<title>secp256k1_gej_add_ge_var (22 samples, 0.02%)</title><rect x="1149.6" y="613" width="0.3" height="15.0" fill="rgb(224,179,50)" rx="2" ry="2" />
<text  x="1152.61" y="623.5" ></text>
</g>
<g >
<title>std::move&lt;prevector&lt;28u, unsigned char, unsigned int, int&gt;::direct_or_indirect&amp;&gt; (14 samples, 0.02%)</title><rect x="737.5" y="549" width="0.2" height="15.0" fill="rgb(237,67,48)" rx="2" ry="2" />
<text  x="740.50" y="559.5" ></text>
</g>
<g >
<title>__memp_pgread (9 samples, 0.01%)</title><rect x="146.0" y="469" width="0.1" height="15.0" fill="rgb(228,53,52)" rx="2" ry="2" />
<text  x="148.99" y="479.5" ></text>
</g>
<g >
<title>operator&lt; (253 samples, 0.27%)</title><rect x="980.2" y="597" width="3.2" height="15.0" fill="rgb(218,161,40)" rx="2" ry="2" />
<text  x="983.18" y="607.5" ></text>
</g>
<g >
<title>__lock_put (23 samples, 0.02%)</title><rect x="76.6" y="405" width="0.3" height="15.0" fill="rgb(210,135,1)" rx="2" ry="2" />
<text  x="79.61" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~vector (51 samples, 0.06%)</title><rect x="519.1" y="309" width="0.7" height="15.0" fill="rgb(223,86,36)" rx="2" ry="2" />
<text  x="522.14" y="319.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;CTransaction const&gt;::shared_ptr (47 samples, 0.05%)</title><rect x="971.9" y="533" width="0.6" height="15.0" fill="rgb(208,148,36)" rx="2" ry="2" />
<text  x="974.90" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::clear (48 samples, 0.05%)</title><rect x="40.9" y="501" width="0.6" height="15.0" fill="rgb(247,199,35)" rx="2" ry="2" />
<text  x="43.90" y="511.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::operator (9 samples, 0.01%)</title><rect x="928.1" y="565" width="0.1" height="15.0" fill="rgb(212,172,53)" rx="2" ry="2" />
<text  x="931.11" y="575.5" ></text>
</g>
<g >
<title>__os_io (45 samples, 0.05%)</title><rect x="132.0" y="437" width="0.6" height="15.0" fill="rgb(221,56,28)" rx="2" ry="2" />
<text  x="134.98" y="447.5" ></text>
</g>
<g >
<title>interfaces::(anonymous namespace)::LockImpl::getBlockHeight (12 samples, 0.01%)</title><rect x="1150.6" y="757" width="0.1" height="15.0" fill="rgb(231,110,33)" rx="2" ry="2" />
<text  x="1153.57" y="767.5" ></text>
</g>
<g >
<title>__bam_ritem (10 samples, 0.01%)</title><rect x="115.2" y="421" width="0.1" height="15.0" fill="rgb(209,190,22)" rx="2" ry="2" />
<text  x="118.18" y="431.5" ></text>
</g>
<g >
<title>__libc_pread (36 samples, 0.04%)</title><rect x="161.5" y="533" width="0.4" height="15.0" fill="rgb(220,29,11)" rx="2" ry="2" />
<text  x="164.48" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::_S_key (128 samples, 0.14%)</title><rect x="827.9" y="565" width="1.6" height="15.0" fill="rgb(223,52,19)" rx="2" ry="2" />
<text  x="830.87" y="575.5" ></text>
</g>
<g >
<title>__dbc_close (21 samples, 0.02%)</title><rect x="115.5" y="501" width="0.3" height="15.0" fill="rgb(243,94,0)" rx="2" ry="2" />
<text  x="118.54" y="511.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (88 samples, 0.10%)</title><rect x="411.0" y="549" width="1.1" height="15.0" fill="rgb(244,63,32)" rx="2" ry="2" />
<text  x="413.96" y="559.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (31 samples, 0.03%)</title><rect x="1162.0" y="757" width="0.4" height="15.0" fill="rgb(242,213,33)" rx="2" ry="2" />
<text  x="1165.00" y="767.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned char const*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt; (14 samples, 0.02%)</title><rect x="693.6" y="565" width="0.2" height="15.0" fill="rgb(211,63,10)" rx="2" ry="2" />
<text  x="696.64" y="575.5" ></text>
</g>
<g >
<title>AppInitMain (509 samples, 0.55%)</title><rect x="29.5" y="725" width="6.5" height="15.0" fill="rgb(212,206,20)" rx="2" ry="2" />
<text  x="32.50" y="735.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;&gt; (235 samples, 0.26%)</title><rect x="415.5" y="533" width="3.0" height="15.0" fill="rgb(242,33,39)" rx="2" ry="2" />
<text  x="418.46" y="543.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (8 samples, 0.01%)</title><rect x="555.8" y="517" width="0.1" height="15.0" fill="rgb(222,96,6)" rx="2" ry="2" />
<text  x="558.80" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::end (10 samples, 0.01%)</title><rect x="961.8" y="613" width="0.1" height="15.0" fill="rgb(213,128,17)" rx="2" ry="2" />
<text  x="964.76" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::end (15 samples, 0.02%)</title><rect x="949.3" y="533" width="0.2" height="15.0" fill="rgb(227,214,44)" rx="2" ry="2" />
<text  x="952.30" y="543.5" ></text>
</g>
<g >
<title>std::map&lt;std::pair&lt;void*, void*&gt;, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::count (274 samples, 0.30%)</title><rect x="682.5" y="581" width="3.5" height="15.0" fill="rgb(223,35,18)" rx="2" ry="2" />
<text  x="685.50" y="591.5" ></text>
</g>
<g >
<title>__dbc_iget (51 samples, 0.06%)</title><rect x="62.1" y="517" width="0.6" height="15.0" fill="rgb(231,33,53)" rx="2" ry="2" />
<text  x="65.07" y="527.5" ></text>
</g>
<g >
<title>CWallet::LoadCScript (2,467 samples, 2.68%)</title><rect x="660.2" y="677" width="31.6" height="15.0" fill="rgb(246,63,3)" rx="2" ry="2" />
<text  x="663.22" y="687.5" >CW..</text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (50 samples, 0.05%)</title><rect x="1062.8" y="581" width="0.6" height="15.0" fill="rgb(210,119,34)" rx="2" ry="2" />
<text  x="1065.80" y="591.5" ></text>
</g>
<g >
<title>base_uint&lt;256u&gt;::operator/= (68 samples, 0.07%)</title><rect x="46.5" y="645" width="0.9" height="15.0" fill="rgb(207,167,32)" rx="2" ry="2" />
<text  x="49.52" y="655.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound (54 samples, 0.06%)</title><rect x="555.2" y="613" width="0.7" height="15.0" fill="rgb(231,63,10)" rx="2" ry="2" />
<text  x="558.22" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_Rb_tree_impl (28 samples, 0.03%)</title><rect x="1024.2" y="629" width="0.4" height="15.0" fill="rgb(231,126,2)" rx="2" ry="2" />
<text  x="1027.22" y="639.5" ></text>
</g>
<g >
<title>__bamc_refresh (43 samples, 0.05%)</title><rect x="346.4" y="597" width="0.5" height="15.0" fill="rgb(212,111,9)" rx="2" ry="2" />
<text  x="349.38" y="607.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.02%)</title><rect x="856.5" y="565" width="0.3" height="15.0" fill="rgb(227,0,43)" rx="2" ry="2" />
<text  x="859.52" y="575.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (85 samples, 0.09%)</title><rect x="554.8" y="629" width="1.1" height="15.0" fill="rgb(242,86,43)" rx="2" ry="2" />
<text  x="557.83" y="639.5" ></text>
</g>
<g >
<title>CScript::operator= (70 samples, 0.08%)</title><rect x="736.9" y="613" width="0.9" height="15.0" fill="rgb(251,210,12)" rx="2" ry="2" />
<text  x="739.93" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;char*, unsigned long&amp;&gt; (100 samples, 0.11%)</title><rect x="617.2" y="501" width="1.2" height="15.0" fill="rgb(244,146,4)" rx="2" ry="2" />
<text  x="620.16" y="511.5" ></text>
</g>
<g >
<title>std::bitset&lt;8ul&gt;::bitset (18 samples, 0.02%)</title><rect x="1023.5" y="645" width="0.2" height="15.0" fill="rgb(212,22,54)" rx="2" ry="2" />
<text  x="1026.51" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (10 samples, 0.01%)</title><rect x="1164.4" y="757" width="0.2" height="15.0" fill="rgb(244,121,29)" rx="2" ry="2" />
<text  x="1167.43" y="767.5" ></text>
</g>
<g >
<title>__db_cursor_int (9 samples, 0.01%)</title><rect x="92.8" y="437" width="0.1" height="15.0" fill="rgb(224,111,43)" rx="2" ry="2" />
<text  x="95.83" y="447.5" ></text>
</g>
<g >
<title>__dbc_destroy (88 samples, 0.10%)</title><rect x="54.3" y="565" width="1.2" height="15.0" fill="rgb(244,37,35)" rx="2" ry="2" />
<text  x="57.34" y="575.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned char*, unsigned char&gt; (8 samples, 0.01%)</title><rect x="769.1" y="453" width="0.1" height="15.0" fill="rgb(245,87,35)" rx="2" ry="2" />
<text  x="772.07" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_S_key (10 samples, 0.01%)</title><rect x="630.4" y="517" width="0.2" height="15.0" fill="rgb(247,135,26)" rx="2" ry="2" />
<text  x="633.43" y="527.5" ></text>
</g>
<g >
<title>BlockHasher::operator (27 samples, 0.03%)</title><rect x="966.6" y="581" width="0.4" height="15.0" fill="rgb(235,179,27)" rx="2" ry="2" />
<text  x="969.61" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::end (20 samples, 0.02%)</title><rect x="494.3" y="293" width="0.3" height="15.0" fill="rgb(224,151,39)" rx="2" ry="2" />
<text  x="497.32" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_get_insert_unique_pos (15 samples, 0.02%)</title><rect x="1155.6" y="757" width="0.2" height="15.0" fill="rgb(221,6,42)" rx="2" ry="2" />
<text  x="1158.59" y="767.5" ></text>
</g>
<g >
<title>__gthread_recursive_mutex_unlock (30 samples, 0.03%)</title><rect x="1021.3" y="533" width="0.4" height="15.0" fill="rgb(246,35,44)" rx="2" ry="2" />
<text  x="1024.32" y="543.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned char*&gt; (8 samples, 0.01%)</title><rect x="519.4" y="277" width="0.1" height="15.0" fill="rgb(240,149,3)" rx="2" ry="2" />
<text  x="522.38" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;::operator (37 samples, 0.04%)</title><rect x="565.8" y="517" width="0.5" height="15.0" fill="rgb(230,73,23)" rx="2" ry="2" />
<text  x="568.79" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::_M_get_node (78 samples, 0.08%)</title><rect x="821.7" y="581" width="1.0" height="15.0" fill="rgb(223,203,20)" rx="2" ry="2" />
<text  x="824.75" y="591.5" ></text>
</g>
<g >
<title>boost::detail::variant::visitation_impl_invoke_impl&lt;boost::detail::variant::invoke_visitor&lt;(anonymous namespace)::CScriptVisitor const, false&gt;, void const*, WitnessV0KeyHash&gt; (836 samples, 0.91%)</title><rect x="758.8" y="501" width="10.7" height="15.0" fill="rgb(230,1,21)" rx="2" ry="2" />
<text  x="761.79" y="511.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::operator (27 samples, 0.03%)</title><rect x="909.2" y="565" width="0.3" height="15.0" fill="rgb(231,176,30)" rx="2" ry="2" />
<text  x="912.16" y="575.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt; &gt;::emplace&lt;char*, std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;&amp;&gt; (233 samples, 0.25%)</title><rect x="805.7" y="373" width="3.0" height="15.0" fill="rgb(248,167,5)" rx="2" ry="2" />
<text  x="808.74" y="383.5" ></text>
</g>
<g >
<title>CHash256::Write (32 samples, 0.03%)</title><rect x="496.5" y="85" width="0.4" height="15.0" fill="rgb(250,106,12)" rx="2" ry="2" />
<text  x="499.48" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;::_Rb_tree_const_iterator (9 samples, 0.01%)</title><rect x="776.9" y="597" width="0.1" height="15.0" fill="rgb(241,53,11)" rx="2" ry="2" />
<text  x="779.86" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_drop_node (27 samples, 0.03%)</title><rect x="547.1" y="549" width="0.4" height="15.0" fill="rgb(228,191,41)" rx="2" ry="2" />
<text  x="550.12" y="559.5" ></text>
</g>
<g >
<title>SerializeHash&lt;CTransaction&gt; (271 samples, 0.29%)</title><rect x="1137.3" y="549" width="3.5" height="15.0" fill="rgb(245,114,28)" rx="2" ry="2" />
<text  x="1140.31" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_left (26 samples, 0.03%)</title><rect x="990.0" y="613" width="0.3" height="15.0" fill="rgb(237,122,21)" rx="2" ry="2" />
<text  x="992.96" y="623.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;CTransaction&gt; (279 samples, 0.30%)</title><rect x="1140.8" y="533" width="3.6" height="15.0" fill="rgb(209,161,12)" rx="2" ry="2" />
<text  x="1143.78" y="543.5" ></text>
</g>
<g >
<title>CSHA256::Write (20 samples, 0.02%)</title><rect x="493.7" y="229" width="0.2" height="15.0" fill="rgb(205,114,41)" rx="2" ry="2" />
<text  x="496.65" y="239.5" ></text>
</g>
<g >
<title>[unknown] (39 samples, 0.04%)</title><rect x="160.6" y="421" width="0.5" height="15.0" fill="rgb(234,226,32)" rx="2" ry="2" />
<text  x="163.63" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char*&amp;&amp;&gt;::_Tuple_impl&lt;char*&gt; (13 samples, 0.01%)</title><rect x="1090.2" y="501" width="0.1" height="15.0" fill="rgb(242,140,25)" rx="2" ry="2" />
<text  x="1093.16" y="511.5" ></text>
</g>
<g >
<title>CKeyMetadata::SetNull (24 samples, 0.03%)</title><rect x="855.2" y="517" width="0.3" height="15.0" fill="rgb(214,224,36)" rx="2" ry="2" />
<text  x="858.21" y="527.5" ></text>
</g>
<g >
<title>__db_put (403 samples, 0.44%)</title><rect x="110.3" y="485" width="5.2" height="15.0" fill="rgb(233,36,31)" rx="2" ry="2" />
<text  x="113.31" y="495.5" ></text>
</g>
<g >
<title>__db_cursor_int (25 samples, 0.03%)</title><rect x="141.9" y="533" width="0.3" height="15.0" fill="rgb(213,146,0)" rx="2" ry="2" />
<text  x="144.91" y="543.5" ></text>
</g>
<g >
<title>__uint32_identity (21 samples, 0.02%)</title><rect x="735.2" y="517" width="0.3" height="15.0" fill="rgb(226,49,17)" rx="2" ry="2" />
<text  x="738.21" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_S_left (10 samples, 0.01%)</title><rect x="792.1" y="517" width="0.2" height="15.0" fill="rgb(254,15,34)" rx="2" ry="2" />
<text  x="795.12" y="527.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::empty (20 samples, 0.02%)</title><rect x="1036.8" y="341" width="0.3" height="15.0" fill="rgb(248,220,31)" rx="2" ry="2" />
<text  x="1039.79" y="351.5" ></text>
</g>
<g >
<title>CSHA256::Finalize (43 samples, 0.05%)</title><rect x="736.0" y="565" width="0.5" height="15.0" fill="rgb(246,94,27)" rx="2" ry="2" />
<text  x="738.98" y="575.5" ></text>
</g>
<g >
<title>CKeyMetadata::operator= (156 samples, 0.17%)</title><rect x="852.0" y="661" width="2.0" height="15.0" fill="rgb(216,26,42)" rx="2" ry="2" />
<text  x="854.96" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_S_do_relocate (47 samples, 0.05%)</title><rect x="472.9" y="309" width="0.6" height="15.0" fill="rgb(245,150,23)" rx="2" ry="2" />
<text  x="475.93" y="319.5" ></text>
</g>
<g >
<title>__lock_get_internal (16 samples, 0.02%)</title><rect x="107.7" y="373" width="0.2" height="15.0" fill="rgb(209,227,45)" rx="2" ry="2" />
<text  x="110.69" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocator (15 samples, 0.02%)</title><rect x="971.6" y="453" width="0.2" height="15.0" fill="rgb(233,220,33)" rx="2" ry="2" />
<text  x="974.58" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;CKeyID, CKeyMetadata, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt;::lower_bound (508 samples, 0.55%)</title><rect x="859.2" y="645" width="6.5" height="15.0" fill="rgb(251,220,19)" rx="2" ry="2" />
<text  x="862.15" y="655.5" ></text>
</g>
<g >
<title>std::multimap&lt;unsigned long, char*, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::erase (11 samples, 0.01%)</title><rect x="630.6" y="549" width="0.1" height="15.0" fill="rgb(212,57,51)" rx="2" ry="2" />
<text  x="633.57" y="559.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Compare (369 samples, 0.40%)</title><rect x="886.5" y="517" width="4.7" height="15.0" fill="rgb(235,211,48)" rx="2" ry="2" />
<text  x="889.48" y="527.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (48 samples, 0.05%)</title><rect x="159.4" y="533" width="0.6" height="15.0" fill="rgb(214,84,5)" rx="2" ry="2" />
<text  x="162.41" y="543.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, CBlockIndex*&gt;*, std::vector&lt;std::pair&lt;int, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;int, CBlockIndex*&gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (20 samples, 0.02%)</title><rect x="48.9" y="645" width="0.3" height="15.0" fill="rgb(229,50,51)" rx="2" ry="2" />
<text  x="51.91" y="655.5" ></text>
</g>
<g >
<title>WalletBatch::LoadWallet (73,429 samples, 79.69%)</title><rect x="167.0" y="709" width="940.4" height="15.0" fill="rgb(248,20,27)" rx="2" ry="2" />
<text  x="170.03" y="719.5" >WalletBatch::LoadWallet</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned long const, char*&gt;, unsigned long&amp;, char*&amp;&gt; (40 samples, 0.04%)</title><rect x="1082.2" y="501" width="0.6" height="15.0" fill="rgb(238,33,10)" rx="2" ry="2" />
<text  x="1085.25" y="511.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (222 samples, 0.24%)</title><rect x="597.6" y="565" width="2.8" height="15.0" fill="rgb(228,202,10)" rx="2" ry="2" />
<text  x="600.61" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (74 samples, 0.08%)</title><rect x="1015.9" y="613" width="0.9" height="15.0" fill="rgb(244,144,2)" rx="2" ry="2" />
<text  x="1018.88" y="623.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (17 samples, 0.02%)</title><rect x="815.7" y="389" width="0.2" height="15.0" fill="rgb(248,29,7)" rx="2" ry="2" />
<text  x="818.69" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::operator++ (12 samples, 0.01%)</title><rect x="517.7" y="293" width="0.2" height="15.0" fill="rgb(216,48,33)" rx="2" ry="2" />
<text  x="520.74" y="303.5" ></text>
</g>
<g >
<title>FillableSigningProvider::AddKeyPubKey (11,286 samples, 12.25%)</title><rect x="692.4" y="645" width="144.6" height="15.0" fill="rgb(234,51,1)" rx="2" ry="2" />
<text  x="695.44" y="655.5" >FillableSigningPro..</text>
</g>
<g >
<title>CTxOut::SerializationOp&lt;CSizeComputer, CSerActionSerialize&gt; (149 samples, 0.16%)</title><rect x="1039.7" y="501" width="1.9" height="15.0" fill="rgb(245,108,43)" rx="2" ry="2" />
<text  x="1042.73" y="511.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt;&gt; (169 samples, 0.18%)</title><rect x="162.5" y="261" width="2.2" height="15.0" fill="rgb(232,115,21)" rx="2" ry="2" />
<text  x="165.53" y="271.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;::operator (12 samples, 0.01%)</title><rect x="792.0" y="501" width="0.1" height="15.0" fill="rgb(229,39,23)" rx="2" ry="2" />
<text  x="794.97" y="511.5" ></text>
</g>
<g >
<title>ser_writedata8&lt;CHashWriter&gt; (21 samples, 0.02%)</title><rect x="517.4" y="277" width="0.2" height="15.0" fill="rgb(207,22,0)" rx="2" ry="2" />
<text  x="520.36" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;CTransaction&gt; &gt;::construct&lt;CTransaction const&gt; (135 samples, 0.15%)</title><rect x="1061.1" y="565" width="1.7" height="15.0" fill="rgb(217,173,2)" rx="2" ry="2" />
<text  x="1064.08" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (21 samples, 0.02%)</title><rect x="788.0" y="565" width="0.2" height="15.0" fill="rgb(239,115,27)" rx="2" ry="2" />
<text  x="790.98" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (62 samples, 0.07%)</title><rect x="562.5" y="645" width="0.8" height="15.0" fill="rgb(215,221,42)" rx="2" ry="2" />
<text  x="565.49" y="655.5" ></text>
</g>
<g >
<title>local_Rb_tree_increment (20 samples, 0.02%)</title><rect x="869.5" y="581" width="0.2" height="15.0" fill="rgb(247,175,45)" rx="2" ry="2" />
<text  x="872.46" y="591.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream&gt; (22 samples, 0.02%)</title><rect x="476.6" y="389" width="0.3" height="15.0" fill="rgb(208,121,23)" rx="2" ry="2" />
<text  x="479.60" y="399.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; &gt; (169 samples, 0.18%)</title><rect x="162.5" y="453" width="2.2" height="15.0" fill="rgb(235,25,31)" rx="2" ry="2" />
<text  x="165.53" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::equal_range (421 samples, 0.46%)</title><rect x="548.8" y="597" width="5.4" height="15.0" fill="rgb(242,102,7)" rx="2" ry="2" />
<text  x="551.82" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;::_M_addr (17 samples, 0.02%)</title><rect x="829.0" y="501" width="0.2" height="15.0" fill="rgb(251,49,20)" rx="2" ry="2" />
<text  x="831.99" y="511.5" ></text>
</g>
<g >
<title>__bam_search (30 samples, 0.03%)</title><rect x="94.8" y="405" width="0.4" height="15.0" fill="rgb(252,221,47)" rx="2" ry="2" />
<text  x="97.79" y="415.5" ></text>
</g>
<g >
<title>ShiftMessageC (22 samples, 0.02%)</title><rect x="1136.8" y="645" width="0.3" height="15.0" fill="rgb(205,87,7)" rx="2" ry="2" />
<text  x="1139.80" y="655.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (15 samples, 0.02%)</title><rect x="114.1" y="389" width="0.2" height="15.0" fill="rgb(241,197,31)" rx="2" ry="2" />
<text  x="117.09" y="399.5" ></text>
</g>
<g >
<title>__memp_alloc (31 samples, 0.03%)</title><rect x="140.4" y="453" width="0.4" height="15.0" fill="rgb(242,132,37)" rx="2" ry="2" />
<text  x="143.45" y="463.5" ></text>
</g>
<g >
<title>CTransaction::Serialize&lt;CHashWriter&gt; (279 samples, 0.30%)</title><rect x="1140.8" y="501" width="3.6" height="15.0" fill="rgb(247,58,12)" rx="2" ry="2" />
<text  x="1143.78" y="511.5" ></text>
</g>
<g >
<title>LookupBlockIndex (526 samples, 0.57%)</title><rect x="960.6" y="645" width="6.7" height="15.0" fill="rgb(216,167,53)" rx="2" ry="2" />
<text  x="963.57" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::max_size (50 samples, 0.05%)</title><rect x="464.9" y="277" width="0.6" height="15.0" fill="rgb(236,138,11)" rx="2" ry="2" />
<text  x="467.88" y="287.5" ></text>
</g>
<g >
<title>CHashWriter::CHashWriter (33 samples, 0.04%)</title><rect x="480.5" y="405" width="0.4" height="15.0" fill="rgb(241,26,7)" rx="2" ry="2" />
<text  x="483.51" y="415.5" ></text>
</g>
<g >
<title>__env_attach_regions (27 samples, 0.03%)</title><rect x="162.0" y="597" width="0.3" height="15.0" fill="rgb(221,131,10)" rx="2" ry="2" />
<text  x="165.00" y="607.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTransaction&gt; (1,334 samples, 1.45%)</title><rect x="483.0" y="389" width="17.1" height="15.0" fill="rgb(207,11,6)" rx="2" ry="2" />
<text  x="486.02" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_M_emplace_equal&lt;std::pair&lt;COutPoint, uint256&gt; &gt; (2,121 samples, 2.30%)</title><rect x="903.4" y="613" width="27.2" height="15.0" fill="rgb(236,159,15)" rx="2" ry="2" />
<text  x="906.41" y="623.5" >s..</text>
</g>
<g >
<title>_mm_sha256rnds2_epu32 (95 samples, 0.10%)</title><rect x="1142.8" y="149" width="1.2" height="15.0" fill="rgb(248,24,54)" rx="2" ry="2" />
<text  x="1145.82" y="159.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, interfaces::Chain::Lock*, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt;::_M_head (21 samples, 0.02%)</title><rect x="1018.4" y="581" width="0.3" height="15.0" fill="rgb(242,32,4)" rx="2" ry="2" />
<text  x="1021.43" y="591.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::Next (8 samples, 0.01%)</title><rect x="1147.4" y="613" width="0.1" height="15.0" fill="rgb(228,183,18)" rx="2" ry="2" />
<text  x="1150.38" y="623.5" ></text>
</g>
<g >
<title>__memp_bhwrite (24 samples, 0.03%)</title><rect x="89.0" y="373" width="0.3" height="15.0" fill="rgb(245,118,30)" rx="2" ry="2" />
<text  x="92.02" y="383.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (10 samples, 0.01%)</title><rect x="787.8" y="549" width="0.2" height="15.0" fill="rgb(242,192,27)" rx="2" ry="2" />
<text  x="790.85" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;char*, unsigned long&amp;&gt; (236 samples, 0.26%)</title><rect x="615.8" y="517" width="3.1" height="15.0" fill="rgb(224,107,42)" rx="2" ry="2" />
<text  x="618.84" y="527.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;unsigned char const*, unsigned char*&gt; (40 samples, 0.04%)</title><rect x="767.9" y="389" width="0.5" height="15.0" fill="rgb(211,118,44)" rx="2" ry="2" />
<text  x="770.89" y="399.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::data (12 samples, 0.01%)</title><rect x="497.2" y="101" width="0.2" height="15.0" fill="rgb(241,62,11)" rx="2" ry="2" />
<text  x="500.20" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned char&gt; &gt;::deallocate (12 samples, 0.01%)</title><rect x="769.3" y="421" width="0.1" height="15.0" fill="rgb(224,173,49)" rx="2" ry="2" />
<text  x="772.26" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_deallocate (9 samples, 0.01%)</title><rect x="462.5" y="293" width="0.2" height="15.0" fill="rgb(219,175,49)" rx="2" ry="2" />
<text  x="465.55" y="303.5" ></text>
</g>
<g >
<title>std::mutex::lock (10 samples, 0.01%)</title><rect x="619.6" y="549" width="0.1" height="15.0" fill="rgb(249,207,46)" rx="2" ry="2" />
<text  x="622.56" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (62 samples, 0.07%)</title><rect x="616.1" y="501" width="0.8" height="15.0" fill="rgb(222,0,32)" rx="2" ry="2" />
<text  x="619.15" y="511.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;char const*, char*, zero_after_free_allocator&lt;char&gt; &gt; (40 samples, 0.04%)</title><rect x="36.4" y="597" width="0.5" height="15.0" fill="rgb(214,153,17)" rx="2" ry="2" />
<text  x="39.42" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (9 samples, 0.01%)</title><rect x="550.6" y="565" width="0.1" height="15.0" fill="rgb(221,135,46)" rx="2" ry="2" />
<text  x="553.59" y="575.5" ></text>
</g>
<g >
<title>__dbc_close (42 samples, 0.05%)</title><rect x="53.8" y="565" width="0.5" height="15.0" fill="rgb(249,86,52)" rx="2" ry="2" />
<text  x="56.80" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::begin (11 samples, 0.01%)</title><rect x="931.5" y="581" width="0.1" height="15.0" fill="rgb(237,11,45)" rx="2" ry="2" />
<text  x="934.47" y="591.5" ></text>
</g>
<g >
<title>GetLockData (10 samples, 0.01%)</title><rect x="840.2" y="581" width="0.1" height="15.0" fill="rgb(213,7,19)" rx="2" ry="2" />
<text  x="843.20" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_insert_dispatch&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt; &gt; (239 samples, 0.26%)</title><rect x="1096.0" y="661" width="3.0" height="15.0" fill="rgb(241,137,17)" rx="2" ry="2" />
<text  x="1098.97" y="671.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (9 samples, 0.01%)</title><rect x="616.0" y="501" width="0.1" height="15.0" fill="rgb(227,158,18)" rx="2" ry="2" />
<text  x="618.96" y="511.5" ></text>
</g>
<g >
<title>CHash256::Write (11 samples, 0.01%)</title><rect x="489.2" y="85" width="0.1" height="15.0" fill="rgb(222,153,18)" rx="2" ry="2" />
<text  x="492.16" y="95.5" ></text>
</g>
<g >
<title>UnserializeTransaction&lt;CDataStream, CMutableTransaction&gt; (23 samples, 0.02%)</title><rect x="26.9" y="757" width="0.2" height="15.0" fill="rgb(217,206,54)" rx="2" ry="2" />
<text  x="29.85" y="767.5" ></text>
</g>
<g >
<title>__os_io (42 samples, 0.05%)</title><rect x="328.1" y="565" width="0.6" height="15.0" fill="rgb(233,174,34)" rx="2" ry="2" />
<text  x="331.13" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::_S_right (18 samples, 0.02%)</title><rect x="829.7" y="565" width="0.2" height="15.0" fill="rgb(249,167,52)" rx="2" ry="2" />
<text  x="832.66" y="575.5" ></text>
</g>
<g >
<title>std::recursive_mutex::unlock (16 samples, 0.02%)</title><rect x="851.1" y="597" width="0.2" height="15.0" fill="rgb(245,52,1)" rx="2" ry="2" />
<text  x="854.14" y="607.5" ></text>
</g>
<g >
<title>CTransaction::CTransaction&lt;CDataStream&gt; (7,314 samples, 7.94%)</title><rect x="429.6" y="469" width="93.7" height="15.0" fill="rgb(254,174,53)" rx="2" ry="2" />
<text  x="432.63" y="479.5" >CTransactio..</text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt;&gt; (279 samples, 0.30%)</title><rect x="1140.8" y="277" width="3.6" height="15.0" fill="rgb(217,88,12)" rx="2" ry="2" />
<text  x="1143.78" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (901 samples, 0.98%)</title><rect x="1107.7" y="565" width="11.5" height="15.0" fill="rgb(244,84,50)" rx="2" ry="2" />
<text  x="1110.65" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_S_max_size (15 samples, 0.02%)</title><rect x="590.4" y="581" width="0.2" height="15.0" fill="rgb(213,182,10)" rx="2" ry="2" />
<text  x="593.41" y="591.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, CScript&gt; (117 samples, 0.13%)</title><rect x="510.5" y="229" width="1.5" height="15.0" fill="rgb(227,195,13)" rx="2" ry="2" />
<text  x="513.48" y="239.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.01%)</title><rect x="661.7" y="581" width="0.2" height="15.0" fill="rgb(231,144,17)" rx="2" ry="2" />
<text  x="664.74" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;CScriptID const, CScript&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;CScriptID const&amp;&gt;, std::tuple&lt;&gt; &gt; (106 samples, 0.12%)</title><rect x="772.4" y="549" width="1.3" height="15.0" fill="rgb(210,226,21)" rx="2" ry="2" />
<text  x="775.35" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (118 samples, 0.13%)</title><rect x="822.9" y="597" width="1.5" height="15.0" fill="rgb(228,197,30)" rx="2" ry="2" />
<text  x="825.92" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::_Rb_tree_iterator (12 samples, 0.01%)</title><rect x="930.9" y="613" width="0.2" height="15.0" fill="rgb(226,228,33)" rx="2" ry="2" />
<text  x="933.90" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;::_M_v (14 samples, 0.02%)</title><rect x="633.6" y="453" width="0.2" height="15.0" fill="rgb(247,131,15)" rx="2" ry="2" />
<text  x="636.60" y="463.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;void*, void*&gt; (38 samples, 0.04%)</title><rect x="684.9" y="517" width="0.5" height="15.0" fill="rgb(233,139,15)" rx="2" ry="2" />
<text  x="687.92" y="527.5" ></text>
</g>
<g >
<title>__bam_search (45 samples, 0.05%)</title><rect x="62.1" y="469" width="0.6" height="15.0" fill="rgb(216,149,39)" rx="2" ry="2" />
<text  x="65.08" y="479.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 0.05%)</title><rect x="132.0" y="405" width="0.6" height="15.0" fill="rgb(239,164,52)" rx="2" ry="2" />
<text  x="135.01" y="415.5" ></text>
</g>
<g >
<title>std::__distance&lt;char const*&gt; (14 samples, 0.02%)</title><rect x="295.5" y="597" width="0.1" height="15.0" fill="rgb(215,30,12)" rx="2" ry="2" />
<text  x="298.46" y="607.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;false&gt;::__uninit_default_n&lt;CTxOut*, unsigned long&gt; (74 samples, 0.08%)</title><rect x="453.8" y="293" width="0.9" height="15.0" fill="rgb(208,139,39)" rx="2" ry="2" />
<text  x="456.79" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;CTxIn const*, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt; (12 samples, 0.01%)</title><rect x="508.6" y="293" width="0.2" height="15.0" fill="rgb(227,36,36)" rx="2" ry="2" />
<text  x="511.61" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::begin (10 samples, 0.01%)</title><rect x="765.5" y="453" width="0.1" height="15.0" fill="rgb(211,147,14)" rx="2" ry="2" />
<text  x="768.51" y="463.5" ></text>
</g>
<g >
<title>CKeyMetadata::CKeyMetadata (49 samples, 0.05%)</title><rect x="855.1" y="533" width="0.6" height="15.0" fill="rgb(250,41,20)" rx="2" ry="2" />
<text  x="858.11" y="543.5" ></text>
</g>
<g >
<title>QuadRound (203 samples, 0.22%)</title><rect x="1108.1" y="373" width="2.6" height="15.0" fill="rgb(221,109,27)" rx="2" ry="2" />
<text  x="1111.06" y="383.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, interfaces::Chain::Lock*, false&gt;::_Head_base&lt;interfaces::Chain::Lock*&amp;&gt; (11 samples, 0.01%)</title><rect x="954.1" y="565" width="0.2" height="15.0" fill="rgb(223,159,8)" rx="2" ry="2" />
<text  x="957.12" y="575.5" ></text>
</g>
<g >
<title>__memp_fget (17 samples, 0.02%)</title><rect x="143.7" y="469" width="0.2" height="15.0" fill="rgb(232,14,27)" rx="2" ry="2" />
<text  x="146.73" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;unsigned char*, unsigned long&gt; (96 samples, 0.10%)</title><rect x="463.2" y="261" width="1.2" height="15.0" fill="rgb(230,128,21)" rx="2" ry="2" />
<text  x="466.20" y="271.5" ></text>
</g>
<g >
<title>CSizeComputer::operator&lt;&lt; &lt;int&gt; (51 samples, 0.06%)</title><rect x="1030.6" y="581" width="0.6" height="15.0" fill="rgb(229,181,53)" rx="2" ry="2" />
<text  x="1033.57" y="591.5" ></text>
</g>
<g >
<title>Hash160&lt;unsigned char const*&gt; (46 samples, 0.05%)</title><rect x="865.9" y="645" width="0.6" height="15.0" fill="rgb(215,136,48)" rx="2" ry="2" />
<text  x="868.92" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;::_M_ptr (9 samples, 0.01%)</title><rect x="1002.3" y="581" width="0.1" height="15.0" fill="rgb(208,126,34)" rx="2" ry="2" />
<text  x="1005.27" y="591.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CSizeComputer, CTxOut, std::allocator&lt;CTxOut&gt;, CTxOut&gt; (259 samples, 0.28%)</title><rect x="1039.3" y="549" width="3.3" height="15.0" fill="rgb(217,207,16)" rx="2" ry="2" />
<text  x="1042.30" y="559.5" ></text>
</g>
<g >
<title>std::make_pair&lt;void* const&amp;, void*&amp;&gt; (8 samples, 0.01%)</title><rect x="1174.8" y="757" width="0.1" height="15.0" fill="rgb(238,120,3)" rx="2" ry="2" />
<text  x="1177.76" y="767.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (13 samples, 0.01%)</title><rect x="74.1" y="469" width="0.2" height="15.0" fill="rgb(232,225,27)" rx="2" ry="2" />
<text  x="77.10" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (19 samples, 0.02%)</title><rect x="413.4" y="597" width="0.2" height="15.0" fill="rgb(220,11,2)" rx="2" ry="2" />
<text  x="416.40" y="607.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;&gt; (39 samples, 0.04%)</title><rect x="471.1" y="277" width="0.5" height="15.0" fill="rgb(251,226,28)" rx="2" ry="2" />
<text  x="474.06" y="287.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, interfaces::Chain::Lock*, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt; (8 samples, 0.01%)</title><rect x="1173.8" y="741" width="0.1" height="15.0" fill="rgb(229,201,41)" rx="2" ry="2" />
<text  x="1176.77" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKeyMetadata&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt;::_M_get_node (44 samples, 0.05%)</title><rect x="856.2" y="613" width="0.6" height="15.0" fill="rgb(225,84,52)" rx="2" ry="2" />
<text  x="859.23" y="623.5" ></text>
</g>
<g >
<title>CDataStream::read (357 samples, 0.39%)</title><rect x="371.6" y="629" width="4.5" height="15.0" fill="rgb(238,61,23)" rx="2" ry="2" />
<text  x="374.56" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (39 samples, 0.04%)</title><rect x="547.0" y="565" width="0.5" height="15.0" fill="rgb(215,171,17)" rx="2" ry="2" />
<text  x="549.98" y="575.5" ></text>
</g>
<g >
<title>std::move&lt;CScript&amp;&gt; (14 samples, 0.02%)</title><rect x="787.1" y="613" width="0.2" height="15.0" fill="rgb(219,120,36)" rx="2" ry="2" />
<text  x="790.14" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (43 samples, 0.05%)</title><rect x="613.4" y="485" width="0.5" height="15.0" fill="rgb(225,144,31)" rx="2" ry="2" />
<text  x="616.40" y="495.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;CTransaction const&gt;::shared_ptr&lt;std::allocator&lt;CTransaction&gt;, deserialize_type const&amp;, CDataStream&amp;&gt; (352 samples, 0.38%)</title><rect x="162.5" y="677" width="4.5" height="15.0" fill="rgb(221,175,29)" rx="2" ry="2" />
<text  x="165.53" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (22 samples, 0.02%)</title><rect x="73.8" y="453" width="0.3" height="15.0" fill="rgb(248,127,13)" rx="2" ry="2" />
<text  x="76.80" y="463.5" ></text>
</g>
<g >
<title>EnterCritical (623 samples, 0.68%)</title><rect x="943.0" y="565" width="7.9" height="15.0" fill="rgb(214,12,10)" rx="2" ry="2" />
<text  x="945.96" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_construct_node&lt;unsigned long&amp;, char*&amp;&gt; (22 samples, 0.02%)</title><rect x="629.2" y="501" width="0.3" height="15.0" fill="rgb(216,151,12)" rx="2" ry="2" />
<text  x="632.22" y="511.5" ></text>
</g>
<g >
<title>CScript::Serialize&lt;CHashWriter&gt; (100 samples, 0.11%)</title><rect x="510.6" y="197" width="1.3" height="15.0" fill="rgb(217,202,51)" rx="2" ry="2" />
<text  x="513.64" y="207.5" ></text>
</g>
<g >
<title>CLockLocation::CLockLocation (114 samples, 0.12%)</title><rect x="842.0" y="549" width="1.5" height="15.0" fill="rgb(249,31,35)" rx="2" ry="2" />
<text  x="845.03" y="559.5" ></text>
</g>
<g >
<title>__uint64_identity (8 samples, 0.01%)</title><rect x="1152.8" y="741" width="0.1" height="15.0" fill="rgb(219,123,20)" rx="2" ry="2" />
<text  x="1155.77" y="751.5" ></text>
</g>
<g >
<title>Dbt::get_data (18 samples, 0.02%)</title><rect x="170.8" y="661" width="0.2" height="15.0" fill="rgb(211,117,25)" rx="2" ry="2" />
<text  x="173.80" y="671.5" ></text>
</g>
<g >
<title>Serialize&lt;CSizeComputer, CTxIn, std::allocator&lt;CTxIn&gt; &gt; (582 samples, 0.63%)</title><rect x="1031.3" y="565" width="7.4" height="15.0" fill="rgb(240,144,16)" rx="2" ry="2" />
<text  x="1034.29" y="575.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::size (8 samples, 0.01%)</title><rect x="440.4" y="133" width="0.1" height="15.0" fill="rgb(246,122,46)" rx="2" ry="2" />
<text  x="443.40" y="143.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node&lt;COutPoint&gt;*&amp;, std::_Rb_tree_node_base*&amp;, true&gt; (23 samples, 0.02%)</title><rect x="1046.1" y="613" width="0.3" height="15.0" fill="rgb(228,75,27)" rx="2" ry="2" />
<text  x="1049.14" y="623.5" ></text>
</g>
<g >
<title>__lock_put (11 samples, 0.01%)</title><rect x="104.7" y="389" width="0.1" height="15.0" fill="rgb(225,143,2)" rx="2" ry="2" />
<text  x="107.67" y="399.5" ></text>
</g>
<g >
<title>CHash160::Finalize (10 samples, 0.01%)</title><rect x="14.5" y="757" width="0.1" height="15.0" fill="rgb(243,150,52)" rx="2" ry="2" />
<text  x="17.50" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::operator* (26 samples, 0.03%)</title><rect x="763.8" y="421" width="0.4" height="15.0" fill="rgb(228,164,32)" rx="2" ry="2" />
<text  x="766.85" y="431.5" ></text>
</g>
<g >
<title>__bam_search (99 samples, 0.11%)</title><rect x="91.5" y="405" width="1.3" height="15.0" fill="rgb(229,46,44)" rx="2" ry="2" />
<text  x="94.54" y="415.5" ></text>
</g>
<g >
<title>CHash160::CHash160 (10 samples, 0.01%)</title><rect x="738.3" y="581" width="0.1" height="15.0" fill="rgb(213,44,26)" rx="2" ry="2" />
<text  x="741.27" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::size (18 samples, 0.02%)</title><rect x="562.3" y="597" width="0.2" height="15.0" fill="rgb(238,71,44)" rx="2" ry="2" />
<text  x="565.26" y="607.5" ></text>
</g>
<g >
<title>ser_readdata64&lt;CDataStream&gt; (50 samples, 0.05%)</title><rect x="451.1" y="261" width="0.6" height="15.0" fill="rgb(234,192,23)" rx="2" ry="2" />
<text  x="454.06" y="271.5" ></text>
</g>
<g >
<title>std::__make_move_if_noexcept_iterator&lt;char, std::move_iterator&lt;char*&gt; &gt; (153 samples, 0.17%)</title><rect x="291.8" y="597" width="2.0" height="15.0" fill="rgb(244,37,13)" rx="2" ry="2" />
<text  x="294.82" y="607.5" ></text>
</g>
<g >
<title>std::forward&lt;std::tuple&lt;&gt; &gt; (10 samples, 0.01%)</title><rect x="1088.4" y="517" width="0.1" height="15.0" fill="rgb(231,40,43)" rx="2" ry="2" />
<text  x="1091.37" y="527.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (46 samples, 0.05%)</title><rect x="523.5" y="517" width="0.6" height="15.0" fill="rgb(242,190,49)" rx="2" ry="2" />
<text  x="526.51" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Rb_tree_const_iterator (17 samples, 0.02%)</title><rect x="412.9" y="597" width="0.2" height="15.0" fill="rgb(220,149,10)" rx="2" ry="2" />
<text  x="415.91" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;CTxOut const*, std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; &gt; (17 samples, 0.02%)</title><rect x="1041.9" y="533" width="0.3" height="15.0" fill="rgb(228,179,33)" rx="2" ry="2" />
<text  x="1044.94" y="543.5" ></text>
</g>
<g >
<title>SerializeHash&lt;CTransaction&gt; (279 samples, 0.30%)</title><rect x="1140.8" y="549" width="3.6" height="15.0" fill="rgb(220,25,24)" rx="2" ry="2" />
<text  x="1143.78" y="559.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::DBIter::ParseKey (15 samples, 0.02%)</title><rect x="41.9" y="613" width="0.1" height="15.0" fill="rgb(247,47,2)" rx="2" ry="2" />
<text  x="44.85" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;char*, std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;&amp;&gt; (10 samples, 0.01%)</title><rect x="612.4" y="517" width="0.1" height="15.0" fill="rgb(234,20,29)" rx="2" ry="2" />
<text  x="615.37" y="527.5" ></text>
</g>
<g >
<title>__memp_alloc (81 samples, 0.09%)</title><rect x="78.2" y="405" width="1.1" height="15.0" fill="rgb(222,88,5)" rx="2" ry="2" />
<text  x="81.22" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (25 samples, 0.03%)</title><rect x="412.2" y="549" width="0.3" height="15.0" fill="rgb(251,164,24)" rx="2" ry="2" />
<text  x="415.23" y="559.5" ></text>
</g>
<g >
<title>__db_cursor_int (13 samples, 0.01%)</title><rect x="148.0" y="533" width="0.2" height="15.0" fill="rgb(209,78,27)" rx="2" ry="2" />
<text  x="151.03" y="543.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::recursive_mutex&gt;::unlock (42 samples, 0.05%)</title><rect x="1021.2" y="565" width="0.5" height="15.0" fill="rgb(223,132,48)" rx="2" ry="2" />
<text  x="1024.17" y="575.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream&gt; (43 samples, 0.05%)</title><rect x="431.0" y="389" width="0.6" height="15.0" fill="rgb(225,132,22)" rx="2" ry="2" />
<text  x="434.03" y="399.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt; &gt; (271 samples, 0.29%)</title><rect x="1137.3" y="293" width="3.5" height="15.0" fill="rgb(215,8,31)" rx="2" ry="2" />
<text  x="1140.31" y="303.5" ></text>
</g>
<g >
<title>[unknown] (26 samples, 0.03%)</title><rect x="160.8" y="405" width="0.3" height="15.0" fill="rgb(238,97,32)" rx="2" ry="2" />
<text  x="163.80" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CBlockIndex*, std::pair&lt;CBlockIndex* const, CBlockIndex*&gt;, std::_Select1st&lt;std::pair&lt;CBlockIndex* const, CBlockIndex*&gt; &gt;, std::less&lt;CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;CBlockIndex* const, CBlockIndex*&gt; &gt; &gt;::_S_key (14 samples, 0.02%)</title><rect x="50.5" y="629" width="0.1" height="15.0" fill="rgb(210,210,34)" rx="2" ry="2" />
<text  x="53.47" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_value (45 samples, 0.05%)</title><rect x="551.6" y="565" width="0.6" height="15.0" fill="rgb(238,215,12)" rx="2" ry="2" />
<text  x="554.63" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::end (12 samples, 0.01%)</title><rect x="694.5" y="597" width="0.2" height="15.0" fill="rgb(222,118,53)" rx="2" ry="2" />
<text  x="697.53" y="607.5" ></text>
</g>
<g >
<title>CTxOut::Serialize&lt;CHashWriter&gt; (248 samples, 0.27%)</title><rect x="495.5" y="277" width="3.2" height="15.0" fill="rgb(249,0,16)" rx="2" ry="2" />
<text  x="498.51" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_S_select_on_copy (24 samples, 0.03%)</title><rect x="972.9" y="517" width="0.3" height="15.0" fill="rgb(222,151,13)" rx="2" ry="2" />
<text  x="975.93" y="527.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (665 samples, 0.72%)</title><rect x="992.5" y="565" width="8.5" height="15.0" fill="rgb(253,136,41)" rx="2" ry="2" />
<text  x="995.52" y="575.5" ></text>
</g>
<g >
<title>CWalletTx::IsCoinBase (59 samples, 0.06%)</title><rect x="34.3" y="645" width="0.7" height="15.0" fill="rgb(241,103,7)" rx="2" ry="2" />
<text  x="37.27" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (35 samples, 0.04%)</title><rect x="534.4" y="613" width="0.4" height="15.0" fill="rgb(219,191,16)" rx="2" ry="2" />
<text  x="537.35" y="623.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTxOut, std::allocator&lt;CTxOut&gt; &gt; (183 samples, 0.20%)</title><rect x="164.7" y="437" width="2.3" height="15.0" fill="rgb(209,129,32)" rx="2" ry="2" />
<text  x="167.69" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;CTxIn const*, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt; (13 samples, 0.01%)</title><rect x="957.1" y="661" width="0.2" height="15.0" fill="rgb(226,20,3)" rx="2" ry="2" />
<text  x="960.12" y="671.5" ></text>
</g>
<g >
<title>CDataStream::read (9 samples, 0.01%)</title><rect x="476.5" y="357" width="0.1" height="15.0" fill="rgb(243,193,41)" rx="2" ry="2" />
<text  x="479.45" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::size (9 samples, 0.01%)</title><rect x="376.4" y="581" width="0.2" height="15.0" fill="rgb(229,93,53)" rx="2" ry="2" />
<text  x="379.45" y="591.5" ></text>
</g>
<g >
<title>CLockLocation::~CLockLocation (10 samples, 0.01%)</title><rect x="848.7" y="565" width="0.1" height="15.0" fill="rgb(209,167,51)" rx="2" ry="2" />
<text  x="851.68" y="575.5" ></text>
</g>
<g >
<title>CDataStream::CDataStream (57 samples, 0.06%)</title><rect x="36.3" y="645" width="0.7" height="15.0" fill="rgb(231,7,14)" rx="2" ry="2" />
<text  x="39.29" y="655.5" ></text>
</g>
<g >
<title>CHash256::Write (10 samples, 0.01%)</title><rect x="505.4" y="85" width="0.1" height="15.0" fill="rgb(254,201,48)" rx="2" ry="2" />
<text  x="508.38" y="95.5" ></text>
</g>
<g >
<title>CDiskBlockIndex::CDiskBlockIndex (9 samples, 0.01%)</title><rect x="42.5" y="661" width="0.1" height="15.0" fill="rgb(224,216,10)" rx="2" ry="2" />
<text  x="45.46" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::destroy&lt;char&gt; (167 samples, 0.18%)</title><rect x="406.1" y="485" width="2.1" height="15.0" fill="rgb(253,117,54)" rx="2" ry="2" />
<text  x="409.06" y="495.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;&amp;&gt; (1,177 samples, 1.28%)</title><rect x="431.6" y="405" width="15.1" height="15.0" fill="rgb(254,68,9)" rx="2" ry="2" />
<text  x="434.58" y="415.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (17 samples, 0.02%)</title><rect x="457.4" y="341" width="0.3" height="15.0" fill="rgb(250,22,42)" rx="2" ry="2" />
<text  x="460.45" y="351.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (188 samples, 0.20%)</title><rect x="68.9" y="501" width="2.4" height="15.0" fill="rgb(232,157,0)" rx="2" ry="2" />
<text  x="71.92" y="511.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (9 samples, 0.01%)</title><rect x="95.6" y="437" width="0.1" height="15.0" fill="rgb(233,130,13)" rx="2" ry="2" />
<text  x="98.57" y="447.5" ></text>
</g>
<g >
<title>std::map&lt;CKeyID, CKeyMetadata, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt;::end (8 samples, 0.01%)</title><rect x="859.0" y="645" width="0.1" height="15.0" fill="rgb(241,76,14)" rx="2" ry="2" />
<text  x="862.04" y="655.5" ></text>
</g>
<g >
<title>std::recursive_mutex::lock (14 samples, 0.02%)</title><rect x="794.3" y="581" width="0.2" height="15.0" fill="rgb(252,52,30)" rx="2" ry="2" />
<text  x="797.28" y="591.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::map (111 samples, 0.12%)</title><rect x="970.5" y="533" width="1.4" height="15.0" fill="rgb(223,21,36)" rx="2" ry="2" />
<text  x="973.48" y="543.5" ></text>
</g>
<g >
<title>LoadBlockIndex (1,016 samples, 1.10%)</title><rect x="36.2" y="725" width="13.0" height="15.0" fill="rgb(237,217,32)" rx="2" ry="2" />
<text  x="39.16" y="735.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, long&amp;&gt; (37 samples, 0.04%)</title><rect x="370.0" y="613" width="0.5" height="15.0" fill="rgb(253,126,5)" rx="2" ry="2" />
<text  x="373.01" y="623.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, uint256&amp;&gt; (23 samples, 0.02%)</title><rect x="37.0" y="613" width="0.3" height="15.0" fill="rgb(254,222,23)" rx="2" ry="2" />
<text  x="40.05" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::allocate (34 samples, 0.04%)</title><rect x="905.8" y="549" width="0.4" height="15.0" fill="rgb(247,24,8)" rx="2" ry="2" />
<text  x="908.77" y="559.5" ></text>
</g>
<g >
<title>__bam_cmp (32 samples, 0.03%)</title><rect x="125.8" y="469" width="0.4" height="15.0" fill="rgb(243,199,3)" rx="2" ry="2" />
<text  x="128.84" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;CTxOut*, CTxOut*, std::allocator&lt;CTxOut&gt; &gt; (29 samples, 0.03%)</title><rect x="454.7" y="325" width="0.4" height="15.0" fill="rgb(224,145,48)" rx="2" ry="2" />
<text  x="457.73" y="335.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.01%)</title><rect x="1047.8" y="533" width="0.1" height="15.0" fill="rgb(214,23,33)" rx="2" ry="2" />
<text  x="1050.76" y="543.5" ></text>
</g>
<g >
<title>COutPoint::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (69 samples, 0.07%)</title><rect x="505.1" y="181" width="0.9" height="15.0" fill="rgb(209,201,10)" rx="2" ry="2" />
<text  x="508.14" y="191.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (64 samples, 0.07%)</title><rect x="120.8" y="453" width="0.8" height="15.0" fill="rgb(235,150,17)" rx="2" ry="2" />
<text  x="123.80" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Rb_tree_const_iterator (10 samples, 0.01%)</title><rect x="547.8" y="581" width="0.1" height="15.0" fill="rgb(228,120,11)" rx="2" ry="2" />
<text  x="550.77" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (23 samples, 0.02%)</title><rect x="1106.9" y="693" width="0.3" height="15.0" fill="rgb(229,35,15)" rx="2" ry="2" />
<text  x="1109.95" y="703.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::~_Vector_base (26 samples, 0.03%)</title><rect x="479.5" y="421" width="0.3" height="15.0" fill="rgb(247,167,19)" rx="2" ry="2" />
<text  x="482.45" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_S_max_size (35 samples, 0.04%)</title><rect x="465.1" y="261" width="0.4" height="15.0" fill="rgb(228,118,49)" rx="2" ry="2" />
<text  x="468.07" y="271.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::end (43 samples, 0.05%)</title><rect x="760.6" y="453" width="0.5" height="15.0" fill="rgb(216,123,50)" rx="2" ry="2" />
<text  x="763.59" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_M_lower_bound (471 samples, 0.51%)</title><rect x="935.0" y="613" width="6.0" height="15.0" fill="rgb(245,97,45)" rx="2" ry="2" />
<text  x="937.98" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_Rb_tree_iterator (9 samples, 0.01%)</title><rect x="883.3" y="549" width="0.2" height="15.0" fill="rgb(237,127,19)" rx="2" ry="2" />
<text  x="886.35" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl::~_Vector_impl (18 samples, 0.02%)</title><rect x="476.0" y="341" width="0.3" height="15.0" fill="rgb(226,211,11)" rx="2" ry="2" />
<text  x="479.03" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_insert_&lt;COutPoint const&amp;, std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_Alloc_node&gt; (244 samples, 0.26%)</title><rect x="1046.4" y="629" width="3.2" height="15.0" fill="rgb(218,6,28)" rx="2" ry="2" />
<text  x="1049.44" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (13 samples, 0.01%)</title><rect x="613.8" y="453" width="0.1" height="15.0" fill="rgb(217,123,50)" rx="2" ry="2" />
<text  x="616.78" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::_M_valptr (10 samples, 0.01%)</title><rect x="1156.7" y="741" width="0.1" height="15.0" fill="rgb(211,55,32)" rx="2" ry="2" />
<text  x="1159.68" y="751.5" ></text>
</g>
<g >
<title>__bam_copy (8 samples, 0.01%)</title><rect x="109.6" y="405" width="0.1" height="15.0" fill="rgb(211,34,31)" rx="2" ry="2" />
<text  x="112.58" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;char const&amp;&gt; (9 samples, 0.01%)</title><rect x="1172.4" y="741" width="0.1" height="15.0" fill="rgb(213,188,54)" rx="2" ry="2" />
<text  x="1175.35" y="751.5" ></text>
</g>
<g >
<title>__dbc_get_arg (119 samples, 0.13%)</title><rect x="304.3" y="645" width="1.5" height="15.0" fill="rgb(215,26,40)" rx="2" ry="2" />
<text  x="307.26" y="655.5" ></text>
</g>
<g >
<title>WriteCompactSize&lt;CHashWriter&gt; (23 samples, 0.02%)</title><rect x="511.1" y="101" width="0.3" height="15.0" fill="rgb(220,1,8)" rx="2" ry="2" />
<text  x="514.10" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt;::allocate (9 samples, 0.01%)</title><rect x="634.6" y="485" width="0.1" height="15.0" fill="rgb(227,149,21)" rx="2" ry="2" />
<text  x="637.58" y="495.5" ></text>
</g>
<g >
<title>__memp_alloc (29 samples, 0.03%)</title><rect x="92.3" y="373" width="0.3" height="15.0" fill="rgb(230,86,34)" rx="2" ry="2" />
<text  x="95.27" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_S_key (49 samples, 0.05%)</title><rect x="927.6" y="581" width="0.6" height="15.0" fill="rgb(247,121,49)" rx="2" ry="2" />
<text  x="930.59" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::size (27 samples, 0.03%)</title><rect x="411.7" y="517" width="0.4" height="15.0" fill="rgb(224,123,6)" rx="2" ry="2" />
<text  x="414.74" y="527.5" ></text>
</g>
<g >
<title>__dbc_iget (38 samples, 0.04%)</title><rect x="94.0" y="453" width="0.5" height="15.0" fill="rgb(216,18,34)" rx="2" ry="2" />
<text  x="96.99" y="463.5" ></text>
</g>
<g >
<title>boost::aligned_storage&lt;48ul, 4ul&gt;::address (8 samples, 0.01%)</title><rect x="770.1" y="581" width="0.1" height="15.0" fill="rgb(217,91,30)" rx="2" ry="2" />
<text  x="773.11" y="591.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (31 samples, 0.03%)</title><rect x="946.5" y="501" width="0.4" height="15.0" fill="rgb(228,81,35)" rx="2" ry="2" />
<text  x="949.47" y="511.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, unsigned char const*, unsigned char*&gt; (24 samples, 0.03%)</title><rect x="768.0" y="357" width="0.4" height="15.0" fill="rgb(235,143,0)" rx="2" ry="2" />
<text  x="771.05" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::max_size (202 samples, 0.22%)</title><rect x="296.8" y="597" width="2.6" height="15.0" fill="rgb(233,216,27)" rx="2" ry="2" />
<text  x="299.80" y="607.5" ></text>
</g>
<g >
<title>BlockManager::InsertBlockIndex (106 samples, 0.12%)</title><rect x="44.5" y="613" width="1.3" height="15.0" fill="rgb(222,69,47)" rx="2" ry="2" />
<text  x="47.48" y="623.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;CTransaction const&gt;::~shared_ptr (23 samples, 0.02%)</title><rect x="1027.0" y="661" width="0.3" height="15.0" fill="rgb(241,30,53)" rx="2" ry="2" />
<text  x="1029.97" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::begin (12 samples, 0.01%)</title><rect x="853.4" y="613" width="0.2" height="15.0" fill="rgb(210,167,42)" rx="2" ry="2" />
<text  x="856.44" y="623.5" ></text>
</g>
<g >
<title>std::less&lt;uint256&gt;::operator (797 samples, 0.86%)</title><rect x="990.8" y="613" width="10.2" height="15.0" fill="rgb(211,183,43)" rx="2" ry="2" />
<text  x="993.83" y="623.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::recursive_mutex&gt; (8 samples, 0.01%)</title><rect x="952.0" y="565" width="0.1" height="15.0" fill="rgb(252,105,46)" rx="2" ry="2" />
<text  x="955.03" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt;::operator* (15 samples, 0.02%)</title><rect x="858.8" y="645" width="0.1" height="15.0" fill="rgb(227,192,0)" rx="2" ry="2" />
<text  x="861.76" y="655.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;secure_allocator&lt;unsigned char&gt; &gt;::construct&lt;unsigned char&gt; (139 samples, 0.15%)</title><rect x="621.1" y="613" width="1.8" height="15.0" fill="rgb(254,113,45)" rx="2" ry="2" />
<text  x="624.11" y="623.5" ></text>
</g>
<g >
<title>_int_free (9 samples, 0.01%)</title><rect x="614.5" y="421" width="0.1" height="15.0" fill="rgb(237,204,26)" rx="2" ry="2" />
<text  x="617.47" y="431.5" ></text>
</g>
<g >
<title>COutPoint::COutPoint (12 samples, 0.01%)</title><rect x="431.9" y="357" width="0.2" height="15.0" fill="rgb(248,184,26)" rx="2" ry="2" />
<text  x="434.94" y="367.5" ></text>
</g>
<g >
<title>interfaces::(anonymous namespace)::LockImpl::getBlockDepth (73 samples, 0.08%)</title><rect x="32.7" y="629" width="1.0" height="15.0" fill="rgb(224,149,12)" rx="2" ry="2" />
<text  x="35.73" y="639.5" ></text>
</g>
<g >
<title>SerializeTransaction&lt;CHashWriter, CTransaction&gt; (271 samples, 0.29%)</title><rect x="1137.3" y="485" width="3.5" height="15.0" fill="rgb(243,197,24)" rx="2" ry="2" />
<text  x="1140.31" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;::allocate (16 samples, 0.02%)</title><rect x="629.5" y="485" width="0.2" height="15.0" fill="rgb(252,112,47)" rx="2" ry="2" />
<text  x="632.52" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_Rb_tree_iterator (9 samples, 0.01%)</title><rect x="941.2" y="597" width="0.1" height="15.0" fill="rgb(254,171,48)" rx="2" ry="2" />
<text  x="944.15" y="607.5" ></text>
</g>
<g >
<title>__bam_cmp (38 samples, 0.04%)</title><rect x="149.2" y="485" width="0.4" height="15.0" fill="rgb(216,129,23)" rx="2" ry="2" />
<text  x="152.16" y="495.5" ></text>
</g>
<g >
<title>CScriptWitness::CScriptWitness (27 samples, 0.03%)</title><rect x="432.2" y="357" width="0.4" height="15.0" fill="rgb(232,127,16)" rx="2" ry="2" />
<text  x="435.25" y="367.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Unserialize&lt;CDataStream&gt; (20 samples, 0.02%)</title><rect x="531.1" y="597" width="0.3" height="15.0" fill="rgb(211,74,18)" rx="2" ry="2" />
<text  x="534.10" y="607.5" ></text>
</g>
<g >
<title>LockedPoolManager::Instance (20 samples, 0.02%)</title><rect x="572.3" y="549" width="0.3" height="15.0" fill="rgb(208,215,7)" rx="2" ry="2" />
<text  x="575.30" y="559.5" ></text>
</g>
<g >
<title>CHash160::Write (12 samples, 0.01%)</title><rect x="756.7" y="581" width="0.2" height="15.0" fill="rgb(217,217,54)" rx="2" ry="2" />
<text  x="759.74" y="591.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, 28u, unsigned char&gt; (169 samples, 0.18%)</title><rect x="162.5" y="245" width="2.2" height="15.0" fill="rgb(231,1,0)" rx="2" ry="2" />
<text  x="165.53" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_S_key (12 samples, 0.01%)</title><rect x="793.2" y="533" width="0.2" height="15.0" fill="rgb(226,0,16)" rx="2" ry="2" />
<text  x="796.20" y="543.5" ></text>
</g>
<g >
<title>operator&lt; (22 samples, 0.02%)</title><rect x="1174.1" y="741" width="0.3" height="15.0" fill="rgb(249,140,11)" rx="2" ry="2" />
<text  x="1177.09" y="751.5" ></text>
</g>
<g >
<title>_int_malloc (18 samples, 0.02%)</title><rect x="856.6" y="533" width="0.2" height="15.0" fill="rgb(215,27,27)" rx="2" ry="2" />
<text  x="859.57" y="543.5" ></text>
</g>
<g >
<title>CWallet::UpdateTimeFirstKey (28 samples, 0.03%)</title><rect x="854.0" y="661" width="0.3" height="15.0" fill="rgb(236,42,42)" rx="2" ry="2" />
<text  x="856.95" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (11 samples, 0.01%)</title><rect x="843.0" y="517" width="0.1" height="15.0" fill="rgb(251,163,14)" rx="2" ry="2" />
<text  x="845.98" y="527.5" ></text>
</g>
<g >
<title>WriteLE32 (16 samples, 0.02%)</title><rect x="735.5" y="549" width="0.2" height="15.0" fill="rgb(226,20,17)" rx="2" ry="2" />
<text  x="738.51" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::begin (10 samples, 0.01%)</title><rect x="1068.6" y="677" width="0.1" height="15.0" fill="rgb(224,72,21)" rx="2" ry="2" />
<text  x="1071.58" y="687.5" ></text>
</g>
<g >
<title>std::forward&lt;char const&amp;&gt; (1,098 samples, 1.19%)</title><rect x="268.6" y="565" width="14.1" height="15.0" fill="rgb(212,13,51)" rx="2" ry="2" />
<text  x="271.63" y="575.5" ></text>
</g>
<g >
<title>interfaces::(anonymous namespace)::LockImpl::UniqueLock (753 samples, 0.82%)</title><rect x="942.5" y="613" width="9.6" height="15.0" fill="rgb(254,176,21)" rx="2" ry="2" />
<text  x="945.49" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_Node_allocator (8 samples, 0.01%)</title><rect x="414.9" y="533" width="0.1" height="15.0" fill="rgb(240,220,36)" rx="2" ry="2" />
<text  x="417.86" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;CKeyID&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (2,060 samples, 2.24%)</title><rect x="796.5" y="597" width="26.4" height="15.0" fill="rgb(225,217,18)" rx="2" ry="2" />
<text  x="799.54" y="607.5" >s..</text>
</g>
<g >
<title>__db_cursor_int (18 samples, 0.02%)</title><rect x="105.8" y="453" width="0.2" height="15.0" fill="rgb(210,89,38)" rx="2" ry="2" />
<text  x="108.75" y="463.5" ></text>
</g>
<g >
<title>Unshuffle (10 samples, 0.01%)</title><rect x="1131.8" y="645" width="0.1" height="15.0" fill="rgb(244,59,23)" rx="2" ry="2" />
<text  x="1134.79" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::operator= (161 samples, 0.17%)</title><rect x="692.7" y="613" width="2.0" height="15.0" fill="rgb(216,131,29)" rx="2" ry="2" />
<text  x="695.68" y="623.5" ></text>
</g>
<g >
<title>__gthread_recursive_mutex_lock (10 samples, 0.01%)</title><rect x="686.6" y="581" width="0.1" height="15.0" fill="rgb(254,53,36)" rx="2" ry="2" />
<text  x="689.56" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;COutPoint&gt;::_M_ptr (9 samples, 0.01%)</title><rect x="1047.4" y="549" width="0.1" height="15.0" fill="rgb(221,50,27)" rx="2" ry="2" />
<text  x="1050.41" y="559.5" ></text>
</g>
<g >
<title>SerializeHash&lt;CBlockHeader&gt; (82 samples, 0.09%)</title><rect x="42.6" y="629" width="1.1" height="15.0" fill="rgb(211,68,46)" rx="2" ry="2" />
<text  x="45.63" y="639.5" ></text>
</g>
<g >
<title>CDBIterator::GetValue&lt;CDiskBlockIndex&gt; (331 samples, 0.36%)</title><rect x="37.5" y="661" width="4.2" height="15.0" fill="rgb(205,129,9)" rx="2" ry="2" />
<text  x="40.48" y="671.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.02%)</title><rect x="852.7" y="549" width="0.2" height="15.0" fill="rgb(211,211,40)" rx="2" ry="2" />
<text  x="855.71" y="559.5" ></text>
</g>
<g >
<title>__db_vrfy_common (1,364 samples, 1.48%)</title><rect x="124.4" y="581" width="17.4" height="15.0" fill="rgb(212,166,1)" rx="2" ry="2" />
<text  x="127.36" y="591.5" ></text>
</g>
<g >
<title>CHashWriter::GetHash (269 samples, 0.29%)</title><rect x="1111.1" y="453" width="3.5" height="15.0" fill="rgb(224,184,4)" rx="2" ry="2" />
<text  x="1114.12" y="463.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (68 samples, 0.07%)</title><rect x="946.0" y="533" width="0.9" height="15.0" fill="rgb(210,130,50)" rx="2" ry="2" />
<text  x="949.00" y="543.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9 samples, 0.01%)</title><rect x="563.1" y="597" width="0.2" height="15.0" fill="rgb(237,202,31)" rx="2" ry="2" />
<text  x="566.14" y="607.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (99 samples, 0.11%)</title><rect x="939.7" y="549" width="1.3" height="15.0" fill="rgb(236,225,35)" rx="2" ry="2" />
<text  x="942.75" y="559.5" ></text>
</g>
<g >
<title>ShiftMessageC (8 samples, 0.01%)</title><rect x="1127.9" y="549" width="0.1" height="15.0" fill="rgb(248,160,29)" rx="2" ry="2" />
<text  x="1130.89" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::~vector (32 samples, 0.03%)</title><rect x="640.4" y="645" width="0.4" height="15.0" fill="rgb(226,132,30)" rx="2" ry="2" />
<text  x="643.35" y="655.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;&amp;&gt; (2,090 samples, 2.27%)</title><rect x="563.9" y="677" width="26.7" height="15.0" fill="rgb(217,130,29)" rx="2" ry="2" />
<text  x="566.86" y="687.5" >C..</text>
</g>
<g >
<title>push_lock (456 samples, 0.49%)</title><rect x="680.7" y="597" width="5.8" height="15.0" fill="rgb(247,217,40)" rx="2" ry="2" />
<text  x="683.66" y="607.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, zero_after_free_allocator&lt;char&gt; &gt; (315 samples, 0.34%)</title><rect x="372.0" y="581" width="4.0" height="15.0" fill="rgb(208,171,42)" rx="2" ry="2" />
<text  x="374.99" y="591.5" ></text>
</g>
<g >
<title>CTxIn::CTxIn (33 samples, 0.04%)</title><rect x="1031.5" y="549" width="0.4" height="15.0" fill="rgb(245,101,25)" rx="2" ry="2" />
<text  x="1034.49" y="559.5" ></text>
</g>
<g >
<title>__memp_fget (31 samples, 0.03%)</title><rect x="104.0" y="389" width="0.4" height="15.0" fill="rgb(205,12,16)" rx="2" ry="2" />
<text  x="106.96" y="399.5" ></text>
</g>
<g >
<title>__env_alloc (23 samples, 0.02%)</title><rect x="130.8" y="437" width="0.3" height="15.0" fill="rgb(219,71,12)" rx="2" ry="2" />
<text  x="133.83" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash_aux (37 samples, 0.04%)</title><rect x="812.6" y="293" width="0.5" height="15.0" fill="rgb(243,195,50)" rx="2" ry="2" />
<text  x="815.59" y="303.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, prevector&lt;28u, unsigned char, unsigned int, int&gt;&amp;&gt; (116 samples, 0.13%)</title><rect x="449.1" y="229" width="1.5" height="15.0" fill="rgb(241,215,45)" rx="2" ry="2" />
<text  x="452.14" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_S_value (10 samples, 0.01%)</title><rect x="685.5" y="533" width="0.1" height="15.0" fill="rgb(231,113,16)" rx="2" ry="2" />
<text  x="688.50" y="543.5" ></text>
</g>
<g >
<title>__bam_get_root (28 samples, 0.03%)</title><rect x="153.5" y="485" width="0.3" height="15.0" fill="rgb(250,120,8)" rx="2" ry="2" />
<text  x="156.46" y="495.5" ></text>
</g>
<g >
<title>SerializeHash&lt;CTransaction&gt; (183 samples, 0.20%)</title><rect x="164.7" y="533" width="2.3" height="15.0" fill="rgb(226,183,20)" rx="2" ry="2" />
<text  x="167.69" y="543.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (1,587 samples, 1.72%)</title><rect x="308.5" y="613" width="20.3" height="15.0" fill="rgb(242,76,13)" rx="2" ry="2" />
<text  x="311.52" y="623.5" ></text>
</g>
<g >
<title>SerializeHash&lt;CTransaction&gt; (169 samples, 0.18%)</title><rect x="162.5" y="533" width="2.2" height="15.0" fill="rgb(254,227,48)" rx="2" ry="2" />
<text  x="165.53" y="543.5" ></text>
</g>
<g >
<title>CPubKey::GetID (112 samples, 0.12%)</title><rect x="1119.2" y="725" width="1.4" height="15.0" fill="rgb(206,149,4)" rx="2" ry="2" />
<text  x="1122.19" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;CTransaction&gt;::construct&lt;CTransaction const&gt; (122 samples, 0.13%)</title><rect x="1061.2" y="549" width="1.6" height="15.0" fill="rgb(237,130,18)" rx="2" ry="2" />
<text  x="1064.24" y="559.5" ></text>
</g>
<g >
<title>__memp_fget (64 samples, 0.07%)</title><rect x="154.0" y="485" width="0.9" height="15.0" fill="rgb(213,105,39)" rx="2" ry="2" />
<text  x="157.04" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;::_M_valptr (11 samples, 0.01%)</title><rect x="825.7" y="597" width="0.1" height="15.0" fill="rgb(221,10,6)" rx="2" ry="2" />
<text  x="828.70" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (34 samples, 0.04%)</title><rect x="44.9" y="581" width="0.5" height="15.0" fill="rgb(205,48,28)" rx="2" ry="2" />
<text  x="47.92" y="591.5" ></text>
</g>
<g >
<title>__db_cursor (14 samples, 0.02%)</title><rect x="148.0" y="549" width="0.2" height="15.0" fill="rgb(227,204,29)" rx="2" ry="2" />
<text  x="151.02" y="559.5" ></text>
</g>
<g >
<title>__memp_fput (16 samples, 0.02%)</title><rect x="90.9" y="437" width="0.2" height="15.0" fill="rgb(221,147,25)" rx="2" ry="2" />
<text  x="93.91" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;CTxIn&gt;::~allocator (9 samples, 0.01%)</title><rect x="521.6" y="293" width="0.1" height="15.0" fill="rgb(246,228,30)" rx="2" ry="2" />
<text  x="524.57" y="303.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::recursive_mutex&gt;::~unique_lock (39 samples, 0.04%)</title><rect x="795.4" y="613" width="0.5" height="15.0" fill="rgb(219,113,18)" rx="2" ry="2" />
<text  x="798.39" y="623.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (456 samples, 0.49%)</title><rect x="830.9" y="517" width="5.9" height="15.0" fill="rgb(228,52,50)" rx="2" ry="2" />
<text  x="833.92" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_insert_dispatch&lt;char const*&gt; (9,430 samples, 10.23%)</title><rect x="179.8" y="645" width="120.8" height="15.0" fill="rgb(240,228,50)" rx="2" ry="2" />
<text  x="182.83" y="655.5" >std::vector&lt;cha..</text>
</g>
<g >
<title>__memp_alloc (31 samples, 0.03%)</title><rect x="145.6" y="469" width="0.4" height="15.0" fill="rgb(213,221,8)" rx="2" ry="2" />
<text  x="148.60" y="479.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::fill&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (158 samples, 0.17%)</title><rect x="763.3" y="437" width="2.1" height="15.0" fill="rgb(213,52,50)" rx="2" ry="2" />
<text  x="766.35" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (139 samples, 0.15%)</title><rect x="808.8" y="341" width="1.8" height="15.0" fill="rgb(249,27,21)" rx="2" ry="2" />
<text  x="811.80" y="351.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (8 samples, 0.01%)</title><rect x="681.5" y="549" width="0.1" height="15.0" fill="rgb(233,116,49)" rx="2" ry="2" />
<text  x="684.49" y="559.5" ></text>
</g>
<g >
<title>__db_tas_mutex_readlock (14 samples, 0.02%)</title><rect x="113.9" y="389" width="0.2" height="15.0" fill="rgb(235,219,39)" rx="2" ry="2" />
<text  x="116.91" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_S_key (101 samples, 0.11%)</title><rect x="778.5" y="549" width="1.3" height="15.0" fill="rgb(225,94,8)" rx="2" ry="2" />
<text  x="781.55" y="559.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (148 samples, 0.16%)</title><rect x="337.0" y="549" width="1.8" height="15.0" fill="rgb(254,225,38)" rx="2" ry="2" />
<text  x="339.95" y="559.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (48 samples, 0.05%)</title><rect x="122.6" y="453" width="0.7" height="15.0" fill="rgb(244,179,10)" rx="2" ry="2" />
<text  x="125.65" y="463.5" ></text>
</g>
<g >
<title>__lock_get_internal (25 samples, 0.03%)</title><rect x="144.0" y="453" width="0.3" height="15.0" fill="rgb(254,121,4)" rx="2" ry="2" />
<text  x="146.97" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::pair&lt;char* const&amp;, 0ul&gt; (12 samples, 0.01%)</title><rect x="634.8" y="453" width="0.2" height="15.0" fill="rgb(207,179,39)" rx="2" ry="2" />
<text  x="637.82" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (8 samples, 0.01%)</title><rect x="417.3" y="469" width="0.1" height="15.0" fill="rgb(227,14,38)" rx="2" ry="2" />
<text  x="420.29" y="479.5" ></text>
</g>
<g >
<title>__bam_vrfy_subtree (10 samples, 0.01%)</title><rect x="1144.7" y="549" width="0.1" height="15.0" fill="rgb(215,208,11)" rx="2" ry="2" />
<text  x="1147.70" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_construct_node&lt;unsigned long const&amp;, char*&amp;&gt; (48 samples, 0.05%)</title><rect x="800.7" y="325" width="0.6" height="15.0" fill="rgb(223,149,34)" rx="2" ry="2" />
<text  x="803.73" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (29 samples, 0.03%)</title><rect x="423.9" y="549" width="0.4" height="15.0" fill="rgb(212,163,18)" rx="2" ry="2" />
<text  x="426.95" y="559.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (87 samples, 0.09%)</title><rect x="552.8" y="581" width="1.1" height="15.0" fill="rgb(225,149,29)" rx="2" ry="2" />
<text  x="555.79" y="591.5" ></text>
</g>
<g >
<title>std::operator!=&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (35 samples, 0.04%)</title><rect x="1054.7" y="613" width="0.4" height="15.0" fill="rgb(250,97,37)" rx="2" ry="2" />
<text  x="1057.66" y="623.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;uint256, CBlockIndex*, BlockHasher, std::equal_to&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt; &gt;::find (34 samples, 0.04%)</title><rect x="44.9" y="597" width="0.5" height="15.0" fill="rgb(211,9,18)" rx="2" ry="2" />
<text  x="47.92" y="607.5" ></text>
</g>
<g >
<title>__uint32_identity (19 samples, 0.02%)</title><rect x="657.9" y="581" width="0.2" height="15.0" fill="rgb(237,72,6)" rx="2" ry="2" />
<text  x="660.87" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::begin (9 samples, 0.01%)</title><rect x="848.8" y="581" width="0.1" height="15.0" fill="rgb(209,48,34)" rx="2" ry="2" />
<text  x="851.81" y="591.5" ></text>
</g>
<g >
<title>std::forward&lt;uint256&amp;&gt; (8 samples, 0.01%)</title><rect x="985.3" y="645" width="0.1" height="15.0" fill="rgb(246,9,49)" rx="2" ry="2" />
<text  x="988.31" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_M_upper_bound (36 samples, 0.04%)</title><rect x="893.7" y="597" width="0.5" height="15.0" fill="rgb(220,99,27)" rx="2" ry="2" />
<text  x="896.71" y="607.5" ></text>
</g>
<g >
<title>std::_List_node&lt;LockedPool::LockedPageArena&gt;::_M_valptr (26 samples, 0.03%)</title><rect x="814.9" y="373" width="0.3" height="15.0" fill="rgb(254,48,39)" rx="2" ry="2" />
<text  x="817.89" y="383.5" ></text>
</g>
<g >
<title>[unknown] (30 samples, 0.03%)</title><rect x="161.5" y="501" width="0.4" height="15.0" fill="rgb(209,62,10)" rx="2" ry="2" />
<text  x="164.54" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::size (14 samples, 0.02%)</title><rect x="560.6" y="629" width="0.2" height="15.0" fill="rgb(226,65,53)" rx="2" ry="2" />
<text  x="563.65" y="639.5" ></text>
</g>
<g >
<title>CSHA256::Write (14 samples, 0.02%)</title><rect x="715.2" y="565" width="0.2" height="15.0" fill="rgb(208,133,44)" rx="2" ry="2" />
<text  x="718.20" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::destroy&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt; (11 samples, 0.01%)</title><rect x="614.8" y="469" width="0.1" height="15.0" fill="rgb(249,29,49)" rx="2" ry="2" />
<text  x="617.75" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_free (11 samples, 0.01%)</title><rect x="173.5" y="661" width="0.1" height="15.0" fill="rgb(254,189,2)" rx="2" ry="2" />
<text  x="176.50" y="671.5" ></text>
</g>
<g >
<title>CTransaction::CTransaction&lt;CDataStream&gt; (901 samples, 0.98%)</title><rect x="1107.7" y="517" width="11.5" height="15.0" fill="rgb(219,218,39)" rx="2" ry="2" />
<text  x="1110.65" y="527.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.01%)</title><rect x="92.7" y="325" width="0.1" height="15.0" fill="rgb(252,25,53)" rx="2" ry="2" />
<text  x="95.65" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_M_insert_node (55 samples, 0.06%)</title><rect x="983.7" y="629" width="0.7" height="15.0" fill="rgb(227,15,42)" rx="2" ry="2" />
<text  x="986.69" y="639.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.01%)</title><rect x="146.0" y="373" width="0.1" height="15.0" fill="rgb(214,177,30)" rx="2" ry="2" />
<text  x="148.99" y="383.5" ></text>
</g>
<g >
<title>ShiftMessageC (12 samples, 0.01%)</title><rect x="1110.7" y="357" width="0.1" height="15.0" fill="rgb(225,48,37)" rx="2" ry="2" />
<text  x="1113.69" y="367.5" ></text>
</g>
<g >
<title>__db_get (248 samples, 0.27%)</title><rect x="64.9" y="549" width="3.2" height="15.0" fill="rgb(251,168,30)" rx="2" ry="2" />
<text  x="67.90" y="559.5" ></text>
</g>
<g >
<title>Dbt::get_size (10 samples, 0.01%)</title><rect x="171.4" y="661" width="0.2" height="15.0" fill="rgb(223,196,40)" rx="2" ry="2" />
<text  x="174.43" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_upper_bound (76 samples, 0.08%)</title><rect x="550.3" y="581" width="0.9" height="15.0" fill="rgb(241,149,40)" rx="2" ry="2" />
<text  x="553.26" y="591.5" ></text>
</g>
<g >
<title>__memp_fput (142 samples, 0.15%)</title><rect x="340.7" y="613" width="1.8" height="15.0" fill="rgb(206,25,27)" rx="2" ry="2" />
<text  x="343.73" y="623.5" ></text>
</g>
<g >
<title>KeyOriginInfo::clear (10 samples, 0.01%)</title><rect x="639.8" y="645" width="0.1" height="15.0" fill="rgb(251,229,11)" rx="2" ry="2" />
<text  x="642.82" y="655.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, unsigned int&gt; (38 samples, 0.04%)</title><rect x="505.5" y="165" width="0.5" height="15.0" fill="rgb(243,42,9)" rx="2" ry="2" />
<text  x="508.54" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;CBlockIndex*&gt;::_M_valptr (9 samples, 0.01%)</title><rect x="48.4" y="597" width="0.1" height="15.0" fill="rgb(220,76,5)" rx="2" ry="2" />
<text  x="51.42" y="607.5" ></text>
</g>
<g >
<title>__bam_vrfy_subtree (4,079 samples, 4.43%)</title><rect x="72.1" y="565" width="52.3" height="15.0" fill="rgb(220,102,47)" rx="2" ry="2" />
<text  x="75.12" y="575.5" >__bam..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (11 samples, 0.01%)</title><rect x="53.1" y="453" width="0.1" height="15.0" fill="rgb(226,129,5)" rx="2" ry="2" />
<text  x="56.07" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_valptr (31 samples, 0.03%)</title><rect x="870.4" y="581" width="0.4" height="15.0" fill="rgb(239,202,3)" rx="2" ry="2" />
<text  x="873.39" y="591.5" ></text>
</g>
<g >
<title>__os_io (28 samples, 0.03%)</title><rect x="101.8" y="373" width="0.3" height="15.0" fill="rgb(208,153,8)" rx="2" ry="2" />
<text  x="104.76" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~_Vector_base (33 samples, 0.04%)</title><rect x="1105.6" y="661" width="0.4" height="15.0" fill="rgb(209,122,21)" rx="2" ry="2" />
<text  x="1108.62" y="671.5" ></text>
</g>
<g >
<title>__bam_ca_delete (32 samples, 0.03%)</title><rect x="114.8" y="421" width="0.4" height="15.0" fill="rgb(232,156,49)" rx="2" ry="2" />
<text  x="117.77" y="431.5" ></text>
</g>
<g >
<title>CWallet::LoadKeyPool (77 samples, 0.08%)</title><rect x="865.9" y="677" width="1.0" height="15.0" fill="rgb(253,75,9)" rx="2" ry="2" />
<text  x="868.86" y="687.5" ></text>
</g>
<g >
<title>CDataStream::read (2,188 samples, 2.37%)</title><rect x="380.3" y="581" width="28.0" height="15.0" fill="rgb(246,113,23)" rx="2" ry="2" />
<text  x="383.33" y="591.5" >C..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, CScriptID const&amp;, false&gt;::_M_head (8 samples, 0.01%)</title><rect x="773.5" y="469" width="0.1" height="15.0" fill="rgb(222,87,6)" rx="2" ry="2" />
<text  x="776.45" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::max_size (24 samples, 0.03%)</title><rect x="474.1" y="293" width="0.3" height="15.0" fill="rgb(213,69,50)" rx="2" ry="2" />
<text  x="477.09" y="303.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (12 samples, 0.01%)</title><rect x="142.1" y="517" width="0.1" height="15.0" fill="rgb(238,141,12)" rx="2" ry="2" />
<text  x="145.07" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;void*, CLockLocation&gt;*, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;::operator++ (9 samples, 0.01%)</title><rect x="788.8" y="565" width="0.1" height="15.0" fill="rgb(220,201,38)" rx="2" ry="2" />
<text  x="791.83" y="575.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned int const*, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt; &gt;, unsigned int*&gt; (29 samples, 0.03%)</title><rect x="853.0" y="533" width="0.4" height="15.0" fill="rgb(241,127,23)" rx="2" ry="2" />
<text  x="856.03" y="543.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (9 samples, 0.01%)</title><rect x="1107.5" y="565" width="0.1" height="15.0" fill="rgb(232,165,7)" rx="2" ry="2" />
<text  x="1110.46" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (42 samples, 0.05%)</title><rect x="424.3" y="549" width="0.6" height="15.0" fill="rgb(247,167,17)" rx="2" ry="2" />
<text  x="427.32" y="559.5" ></text>
</g>
<g >
<title>interfaces::(anonymous namespace)::LockImpl::getBlockHeight (29 samples, 0.03%)</title><rect x="33.0" y="613" width="0.4" height="15.0" fill="rgb(211,180,40)" rx="2" ry="2" />
<text  x="35.99" y="623.5" ></text>
</g>
<g >
<title>CKeyMetadata::~CKeyMetadata (40 samples, 0.04%)</title><rect x="640.3" y="677" width="0.5" height="15.0" fill="rgb(205,130,44)" rx="2" ry="2" />
<text  x="643.28" y="687.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, 28u, unsigned char&gt; (279 samples, 0.30%)</title><rect x="1140.8" y="245" width="3.6" height="15.0" fill="rgb(231,57,50)" rx="2" ry="2" />
<text  x="1143.78" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_M_allocate (1,434 samples, 1.56%)</title><rect x="798.2" y="453" width="18.3" height="15.0" fill="rgb(250,97,48)" rx="2" ry="2" />
<text  x="801.16" y="463.5" ></text>
</g>
<g >
<title>ser_writedata8&lt;CHashWriter&gt; (22 samples, 0.02%)</title><rect x="496.9" y="85" width="0.3" height="15.0" fill="rgb(252,219,30)" rx="2" ry="2" />
<text  x="499.92" y="95.5" ></text>
</g>
<g >
<title>ShiftMessageB (26 samples, 0.03%)</title><rect x="1118.5" y="245" width="0.4" height="15.0" fill="rgb(236,206,36)" rx="2" ry="2" />
<text  x="1121.54" y="255.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (1,639 samples, 1.78%)</title><rect x="307.9" y="629" width="20.9" height="15.0" fill="rgb(218,131,6)" rx="2" ry="2" />
<text  x="310.86" y="639.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_get_Tp_allocator (9 samples, 0.01%)</title><rect x="1100.3" y="629" width="0.1" height="15.0" fill="rgb(238,223,7)" rx="2" ry="2" />
<text  x="1103.26" y="639.5" ></text>
</g>
<g >
<title>__env_alloc (11 samples, 0.01%)</title><rect x="120.3" y="469" width="0.1" height="15.0" fill="rgb(228,90,16)" rx="2" ry="2" />
<text  x="123.30" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (191 samples, 0.21%)</title><rect x="1060.4" y="581" width="2.4" height="15.0" fill="rgb(246,163,7)" rx="2" ry="2" />
<text  x="1063.36" y="591.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.01%)</title><rect x="123.1" y="309" width="0.1" height="15.0" fill="rgb(206,200,51)" rx="2" ry="2" />
<text  x="126.13" y="319.5" ></text>
</g>
<g >
<title>CTxOut::Serialize&lt;CHashWriter&gt; (177 samples, 0.19%)</title><rect x="510.3" y="277" width="2.2" height="15.0" fill="rgb(212,12,26)" rx="2" ry="2" />
<text  x="513.25" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_Rb_tree_iterator (8 samples, 0.01%)</title><rect x="938.5" y="597" width="0.1" height="15.0" fill="rgb(247,99,31)" rx="2" ry="2" />
<text  x="941.53" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (268 samples, 0.29%)</title><rect x="420.1" y="565" width="3.5" height="15.0" fill="rgb(217,216,36)" rx="2" ry="2" />
<text  x="423.13" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::max_size (35 samples, 0.04%)</title><rect x="446.1" y="325" width="0.4" height="15.0" fill="rgb(226,213,0)" rx="2" ry="2" />
<text  x="449.09" y="335.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::IsNull (9 samples, 0.01%)</title><rect x="1064.7" y="677" width="0.1" height="15.0" fill="rgb(210,148,21)" rx="2" ry="2" />
<text  x="1067.73" y="687.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (31 samples, 0.03%)</title><rect x="147.5" y="501" width="0.4" height="15.0" fill="rgb(252,203,23)" rx="2" ry="2" />
<text  x="150.49" y="511.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (13 samples, 0.01%)</title><rect x="418.0" y="453" width="0.1" height="15.0" fill="rgb(247,222,2)" rx="2" ry="2" />
<text  x="420.97" y="463.5" ></text>
</g>
<g >
<title>__bam_cmp (16 samples, 0.02%)</title><rect x="107.2" y="405" width="0.2" height="15.0" fill="rgb(240,191,54)" rx="2" ry="2" />
<text  x="110.20" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (12 samples, 0.01%)</title><rect x="51.9" y="565" width="0.1" height="15.0" fill="rgb(242,96,41)" rx="2" ry="2" />
<text  x="54.86" y="575.5" ></text>
</g>
<g >
<title>Unserialize_impl&lt;CDataStream, unsigned char, std::allocator&lt;unsigned char&gt; &gt; (814 samples, 0.88%)</title><rect x="457.9" y="341" width="10.4" height="15.0" fill="rgb(227,130,19)" rx="2" ry="2" />
<text  x="460.89" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_S_right (26 samples, 0.03%)</title><rect x="846.1" y="533" width="0.4" height="15.0" fill="rgb(228,48,14)" rx="2" ry="2" />
<text  x="849.14" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (18 samples, 0.02%)</title><rect x="425.6" y="533" width="0.2" height="15.0" fill="rgb(238,89,43)" rx="2" ry="2" />
<text  x="428.56" y="543.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (16 samples, 0.02%)</title><rect x="1167.9" y="757" width="0.2" height="15.0" fill="rgb(223,95,18)" rx="2" ry="2" />
<text  x="1170.92" y="767.5" ></text>
</g>
<g >
<title>CRIPEMD160::Finalize (8 samples, 0.01%)</title><rect x="15.7" y="757" width="0.1" height="15.0" fill="rgb(242,161,53)" rx="2" ry="2" />
<text  x="18.74" y="767.5" ></text>
</g>
<g >
<title>__memp_bhwrite (23 samples, 0.02%)</title><rect x="131.5" y="437" width="0.3" height="15.0" fill="rgb(253,174,6)" rx="2" ry="2" />
<text  x="134.50" y="447.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (9 samples, 0.01%)</title><rect x="123.3" y="453" width="0.1" height="15.0" fill="rgb(245,79,20)" rx="2" ry="2" />
<text  x="126.30" y="463.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (28 samples, 0.03%)</title><rect x="112.9" y="357" width="0.4" height="15.0" fill="rgb(207,198,2)" rx="2" ry="2" />
<text  x="115.93" y="367.5" ></text>
</g>
<g >
<title>Unserialize_impl&lt;CDataStream, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (12 samples, 0.01%)</title><rect x="27.3" y="757" width="0.1" height="15.0" fill="rgb(205,13,54)" rx="2" ry="2" />
<text  x="30.28" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;::_M_valptr (48 samples, 0.05%)</title><rect x="1005.7" y="581" width="0.6" height="15.0" fill="rgb(239,37,36)" rx="2" ry="2" />
<text  x="1008.73" y="591.5" ></text>
</g>
<g >
<title>TLS wrapper function for g_thread_name (20 samples, 0.02%)</title><rect x="950.7" y="533" width="0.2" height="15.0" fill="rgb(235,152,7)" rx="2" ry="2" />
<text  x="953.68" y="543.5" ></text>
</g>
<g >
<title>CHashWriter::write (14 samples, 0.02%)</title><rect x="512.2" y="181" width="0.2" height="15.0" fill="rgb(247,45,48)" rx="2" ry="2" />
<text  x="515.22" y="191.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;::operator (23 samples, 0.02%)</title><rect x="829.2" y="549" width="0.3" height="15.0" fill="rgb(232,145,12)" rx="2" ry="2" />
<text  x="832.21" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::vector (137 samples, 0.15%)</title><rect x="351.3" y="677" width="1.8" height="15.0" fill="rgb(243,162,28)" rx="2" ry="2" />
<text  x="354.32" y="687.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (19 samples, 0.02%)</title><rect x="132.6" y="453" width="0.3" height="15.0" fill="rgb(213,122,15)" rx="2" ry="2" />
<text  x="135.65" y="463.5" ></text>
</g>
<g >
<title>std::multimap&lt;unsigned long, char*, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::erase[abi:cxx11] (48 samples, 0.05%)</title><rect x="566.5" y="517" width="0.6" height="15.0" fill="rgb(206,36,51)" rx="2" ry="2" />
<text  x="569.47" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;CTxIn const*, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt;::operator++ (13 samples, 0.01%)</title><rect x="1043.0" y="661" width="0.2" height="15.0" fill="rgb(230,49,39)" rx="2" ry="2" />
<text  x="1046.04" y="671.5" ></text>
</g>
<g >
<title>__bam_cmp (35 samples, 0.04%)</title><rect x="143.3" y="485" width="0.4" height="15.0" fill="rgb(233,23,13)" rx="2" ry="2" />
<text  x="146.25" y="495.5" ></text>
</g>
<g >
<title>ReadCompactSize&lt;CDataStream&gt; (33 samples, 0.04%)</title><rect x="434.6" y="357" width="0.4" height="15.0" fill="rgb(229,117,26)" rx="2" ry="2" />
<text  x="437.58" y="367.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (597 samples, 0.65%)</title><rect x="134.1" y="517" width="7.6" height="15.0" fill="rgb(224,80,17)" rx="2" ry="2" />
<text  x="137.07" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (56 samples, 0.06%)</title><rect x="1093.1" y="501" width="0.7" height="15.0" fill="rgb(243,227,36)" rx="2" ry="2" />
<text  x="1096.09" y="511.5" ></text>
</g>
<g >
<title>__db_vrfy_pgset_get (295 samples, 0.32%)</title><rect x="148.0" y="581" width="3.8" height="15.0" fill="rgb(208,167,45)" rx="2" ry="2" />
<text  x="151.00" y="591.5" ></text>
</g>
<g >
<title>CScriptWitness::~CScriptWitness (90 samples, 0.10%)</title><rect x="433.0" y="357" width="1.1" height="15.0" fill="rgb(252,143,30)" rx="2" ry="2" />
<text  x="435.98" y="367.5" ></text>
</g>
<g >
<title>CPubKey::Unserialize&lt;CDataStream&gt; (401 samples, 0.44%)</title><rect x="371.4" y="645" width="5.2" height="15.0" fill="rgb(252,24,24)" rx="2" ry="2" />
<text  x="374.43" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_S_use_relocate (8 samples, 0.01%)</title><rect x="1104.5" y="661" width="0.1" height="15.0" fill="rgb(247,215,26)" rx="2" ry="2" />
<text  x="1107.54" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_erase (31 samples, 0.03%)</title><rect x="1052.1" y="613" width="0.4" height="15.0" fill="rgb(240,172,44)" rx="2" ry="2" />
<text  x="1055.06" y="623.5" ></text>
</g>
<g >
<title>FillableSigningProvider::AddKeyPubKey (460 samples, 0.50%)</title><rect x="1122.3" y="693" width="5.8" height="15.0" fill="rgb(235,140,15)" rx="2" ry="2" />
<text  x="1125.25" y="703.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (26 samples, 0.03%)</title><rect x="352.3" y="629" width="0.3" height="15.0" fill="rgb(240,8,42)" rx="2" ry="2" />
<text  x="355.26" y="639.5" ></text>
</g>
<g >
<title>CHashWriter::GetHash (153 samples, 0.17%)</title><rect x="480.9" y="405" width="2.0" height="15.0" fill="rgb(220,194,33)" rx="2" ry="2" />
<text  x="483.94" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::_S_left (12 samples, 0.01%)</title><rect x="829.5" y="565" width="0.2" height="15.0" fill="rgb(243,130,17)" rx="2" ry="2" />
<text  x="832.51" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CBlockIndex*, CBlockIndex*, std::_Identity&lt;CBlockIndex*&gt;, CBlockIndexWorkComparator, std::allocator&lt;CBlockIndex*&gt; &gt;::_M_insert_unique&lt;CBlockIndex* const&amp;&gt; (109 samples, 0.12%)</title><rect x="47.4" y="661" width="1.4" height="15.0" fill="rgb(247,99,47)" rx="2" ry="2" />
<text  x="50.41" y="671.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (246 samples, 0.27%)</title><rect x="111.5" y="437" width="3.1" height="15.0" fill="rgb(244,175,7)" rx="2" ry="2" />
<text  x="114.48" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (23 samples, 0.02%)</title><rect x="475.0" y="357" width="0.3" height="15.0" fill="rgb(238,90,15)" rx="2" ry="2" />
<text  x="477.98" y="367.5" ></text>
</g>
<g >
<title>BerkeleyBatch::SafeDbt::get_data (72 samples, 0.08%)</title><rect x="170.1" y="677" width="0.9" height="15.0" fill="rgb(215,129,33)" rx="2" ry="2" />
<text  x="173.11" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::max_size (12 samples, 0.01%)</title><rect x="819.9" y="437" width="0.1" height="15.0" fill="rgb(207,180,25)" rx="2" ry="2" />
<text  x="822.86" y="447.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CMerkleTx, std::allocator&lt;CMerkleTx&gt; &gt; (54 samples, 0.06%)</title><rect x="528.6" y="613" width="0.7" height="15.0" fill="rgb(248,85,31)" rx="2" ry="2" />
<text  x="531.58" y="623.5" ></text>
</g>
<g >
<title>__dbc_iget (38 samples, 0.04%)</title><rect x="146.8" y="533" width="0.5" height="15.0" fill="rgb(208,206,50)" rx="2" ry="2" />
<text  x="149.81" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::begin (15 samples, 0.02%)</title><rect x="694.3" y="597" width="0.1" height="15.0" fill="rgb(244,9,47)" rx="2" ry="2" />
<text  x="697.26" y="607.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (10 samples, 0.01%)</title><rect x="161.2" y="533" width="0.1" height="15.0" fill="rgb(230,59,24)" rx="2" ry="2" />
<text  x="164.18" y="543.5" ></text>
</g>
<g >
<title>BerkeleyEnvironment::Open (17 samples, 0.02%)</title><rect x="1107.4" y="677" width="0.2" height="15.0" fill="rgb(217,31,43)" rx="2" ry="2" />
<text  x="1110.42" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::__detail::_Select1st, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (24 samples, 0.03%)</title><rect x="964.6" y="549" width="0.3" height="15.0" fill="rgb(205,221,3)" rx="2" ry="2" />
<text  x="967.59" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, interfaces::(anonymous namespace)::LockImpl*, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt; (20 samples, 0.02%)</title><rect x="954.8" y="581" width="0.2" height="15.0" fill="rgb(220,42,10)" rx="2" ry="2" />
<text  x="957.77" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_allocate (23 samples, 0.02%)</title><rect x="852.6" y="597" width="0.3" height="15.0" fill="rgb(245,108,27)" rx="2" ry="2" />
<text  x="855.60" y="607.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::const_iterator::operator!= (13 samples, 0.01%)</title><rect x="661.9" y="581" width="0.1" height="15.0" fill="rgb(238,80,6)" rx="2" ry="2" />
<text  x="664.87" y="591.5" ></text>
</g>
<g >
<title>__db_lget (15 samples, 0.02%)</title><rect x="139.4" y="485" width="0.2" height="15.0" fill="rgb(252,63,40)" rx="2" ry="2" />
<text  x="142.41" y="495.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (366 samples, 0.40%)</title><rect x="559.2" y="677" width="4.7" height="15.0" fill="rgb(220,54,53)" rx="2" ry="2" />
<text  x="562.17" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_S_max_size (13 samples, 0.01%)</title><rect x="1104.8" y="645" width="0.2" height="15.0" fill="rgb(210,73,31)" rx="2" ry="2" />
<text  x="1107.80" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt;::allocate (11 samples, 0.01%)</title><rect x="635.3" y="485" width="0.1" height="15.0" fill="rgb(224,158,19)" rx="2" ry="2" />
<text  x="638.29" y="495.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;CMerkleTx*, CMerkleTx&gt; (17 samples, 0.02%)</title><rect x="556.7" y="613" width="0.2" height="15.0" fill="rgb(211,90,7)" rx="2" ry="2" />
<text  x="559.68" y="623.5" ></text>
</g>
<g >
<title>_mm_set_epi64x (10 samples, 0.01%)</title><rect x="1125.1" y="549" width="0.1" height="15.0" fill="rgb(241,145,54)" rx="2" ry="2" />
<text  x="1128.08" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;::_M_addr (11 samples, 0.01%)</title><rect x="845.7" y="469" width="0.2" height="15.0" fill="rgb(254,29,52)" rx="2" ry="2" />
<text  x="848.75" y="479.5" ></text>
</g>
<g >
<title>BerkeleyBatch::VerifyDatabaseFile (8,449 samples, 9.17%)</title><rect x="53.8" y="661" width="108.2" height="15.0" fill="rgb(247,59,23)" rx="2" ry="2" />
<text  x="56.80" y="671.5" >BerkeleyBatch..</text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::size (13 samples, 0.01%)</title><rect x="765.7" y="453" width="0.2" height="15.0" fill="rgb(235,158,14)" rx="2" ry="2" />
<text  x="768.70" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;CScriptID, CScript, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::key_comp (14 samples, 0.02%)</title><rect x="777.7" y="597" width="0.2" height="15.0" fill="rgb(250,152,3)" rx="2" ry="2" />
<text  x="780.70" y="607.5" ></text>
</g>
<g >
<title>__addvsi3 (8 samples, 0.01%)</title><rect x="1054.5" y="613" width="0.1" height="15.0" fill="rgb(250,0,27)" rx="2" ry="2" />
<text  x="1057.45" y="623.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const*, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (30 samples, 0.03%)</title><rect x="973.7" y="517" width="0.4" height="15.0" fill="rgb(241,181,0)" rx="2" ry="2" />
<text  x="976.75" y="527.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (14 samples, 0.02%)</title><rect x="1027.4" y="645" width="0.1" height="15.0" fill="rgb(234,202,37)" rx="2" ry="2" />
<text  x="1030.37" y="655.5" ></text>
</g>
<g >
<title>Hash&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (702 samples, 0.76%)</title><rect x="1128.3" y="725" width="9.0" height="15.0" fill="rgb(247,218,14)" rx="2" ry="2" />
<text  x="1131.29" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_M_get_insert_unique_pos (14 samples, 0.02%)</title><rect x="1160.0" y="757" width="0.2" height="15.0" fill="rgb(221,225,2)" rx="2" ry="2" />
<text  x="1162.98" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::resize (637 samples, 0.69%)</title><rect x="460.2" y="325" width="8.1" height="15.0" fill="rgb(216,171,6)" rx="2" ry="2" />
<text  x="463.15" y="335.5" ></text>
</g>
<g >
<title>__bam_get_root (24 samples, 0.03%)</title><rect x="83.5" y="405" width="0.3" height="15.0" fill="rgb(234,0,35)" rx="2" ry="2" />
<text  x="86.48" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (38 samples, 0.04%)</title><rect x="1090.8" y="501" width="0.5" height="15.0" fill="rgb(225,196,0)" rx="2" ry="2" />
<text  x="1093.84" y="511.5" ></text>
</g>
<g >
<title>__db_lget (23 samples, 0.02%)</title><rect x="66.7" y="469" width="0.3" height="15.0" fill="rgb(249,141,35)" rx="2" ry="2" />
<text  x="69.67" y="479.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned char*&gt; (13 samples, 0.01%)</title><rect x="464.1" y="229" width="0.2" height="15.0" fill="rgb(218,13,8)" rx="2" ry="2" />
<text  x="467.13" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_M_lower_bound (9 samples, 0.01%)</title><rect x="1157.0" y="757" width="0.2" height="15.0" fill="rgb(253,210,8)" rx="2" ry="2" />
<text  x="1160.05" y="767.5" ></text>
</g>
<g >
<title>sha256_shani::Transform (271 samples, 0.29%)</title><rect x="1107.7" y="389" width="3.4" height="15.0" fill="rgb(221,174,33)" rx="2" ry="2" />
<text  x="1110.65" y="399.5" ></text>
</g>
<g >
<title>interfaces::(anonymous namespace)::LockImpl::~LockImpl (167 samples, 0.18%)</title><rect x="1019.7" y="629" width="2.2" height="15.0" fill="rgb(232,203,20)" rx="2" ry="2" />
<text  x="1022.72" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (26 samples, 0.03%)</title><rect x="549.9" y="581" width="0.4" height="15.0" fill="rgb(242,157,27)" rx="2" ry="2" />
<text  x="552.93" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;secure_allocator&lt;unsigned char&gt; &gt;::deallocate (876 samples, 0.95%)</title><rect x="628.3" y="613" width="11.3" height="15.0" fill="rgb(222,88,40)" rx="2" ry="2" />
<text  x="631.34" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::_S_use_relocate (12 samples, 0.01%)</title><rect x="455.7" y="325" width="0.1" height="15.0" fill="rgb(246,121,37)" rx="2" ry="2" />
<text  x="458.67" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;::_M_const_cast (14 samples, 0.02%)</title><rect x="823.5" y="581" width="0.2" height="15.0" fill="rgb(223,212,40)" rx="2" ry="2" />
<text  x="826.51" y="591.5" ></text>
</g>
<g >
<title>__db_put (60 samples, 0.07%)</title><rect x="95.5" y="469" width="0.8" height="15.0" fill="rgb(237,131,11)" rx="2" ry="2" />
<text  x="98.48" y="479.5" ></text>
</g>
<g >
<title>_int_malloc (14 samples, 0.02%)</title><rect x="130.9" y="389" width="0.2" height="15.0" fill="rgb(231,137,29)" rx="2" ry="2" />
<text  x="133.95" y="399.5" ></text>
</g>
<g >
<title>StartWallets (266 samples, 0.29%)</title><rect x="32.6" y="693" width="3.4" height="15.0" fill="rgb(213,36,52)" rx="2" ry="2" />
<text  x="35.62" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;CTxIn&gt;::allocate (13 samples, 0.01%)</title><rect x="443.3" y="293" width="0.2" height="15.0" fill="rgb(231,38,19)" rx="2" ry="2" />
<text  x="446.34" y="303.5" ></text>
</g>
<g >
<title>KeyOriginInfo::~KeyOriginInfo (33 samples, 0.04%)</title><rect x="640.3" y="661" width="0.5" height="15.0" fill="rgb(246,158,10)" rx="2" ry="2" />
<text  x="643.34" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::push_back (22 samples, 0.02%)</title><rect x="686.2" y="581" width="0.3" height="15.0" fill="rgb(207,152,51)" rx="2" ry="2" />
<text  x="689.21" y="591.5" ></text>
</g>
<g >
<title>__bam_defcmp (11 samples, 0.01%)</title><rect x="126.1" y="453" width="0.1" height="15.0" fill="rgb(206,104,2)" rx="2" ry="2" />
<text  x="129.10" y="463.5" ></text>
</g>
<g >
<title>Arena::alloc (742 samples, 0.81%)</title><rect x="609.5" y="565" width="9.5" height="15.0" fill="rgb(249,148,10)" rx="2" ry="2" />
<text  x="612.54" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_S_key (13 samples, 0.01%)</title><rect x="611.9" y="501" width="0.2" height="15.0" fill="rgb(246,164,16)" rx="2" ry="2" />
<text  x="614.95" y="511.5" ></text>
</g>
<g >
<title>CHash160::Finalize (43 samples, 0.05%)</title><rect x="865.9" y="629" width="0.6" height="15.0" fill="rgb(216,36,40)" rx="2" ry="2" />
<text  x="868.93" y="639.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, KeyOriginInfo&amp;&gt; (227 samples, 0.25%)</title><rect x="362.7" y="597" width="2.9" height="15.0" fill="rgb(235,165,39)" rx="2" ry="2" />
<text  x="365.71" y="607.5" ></text>
</g>
<g >
<title>__db_tas_mutex_trylock (20 samples, 0.02%)</title><rect x="119.0" y="469" width="0.3" height="15.0" fill="rgb(224,33,42)" rx="2" ry="2" />
<text  x="122.02" y="479.5" ></text>
</g>
<g >
<title>[unknown] (33 samples, 0.04%)</title><rect x="122.8" y="357" width="0.4" height="15.0" fill="rgb(212,30,42)" rx="2" ry="2" />
<text  x="125.83" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CMerkleTx, std::allocator&lt;CMerkleTx&gt; &gt;::_Vector_base (43 samples, 0.05%)</title><rect x="556.0" y="613" width="0.6" height="15.0" fill="rgb(226,173,41)" rx="2" ry="2" />
<text  x="559.01" y="623.5" ></text>
</g>
<g >
<title>bitcoin-init (91,684 samples, 99.51%)</title><rect x="10.0" y="773" width="1174.2" height="15.0" fill="rgb(205,142,10)" rx="2" ry="2" />
<text  x="13.04" y="783.5" >bitcoin-init</text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, COutPoint&gt; (213 samples, 0.23%)</title><rect x="486.9" y="245" width="2.7" height="15.0" fill="rgb(232,3,13)" rx="2" ry="2" />
<text  x="489.90" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_eq (8 samples, 0.01%)</title><rect x="966.4" y="549" width="0.1" height="15.0" fill="rgb(253,201,18)" rx="2" ry="2" />
<text  x="969.38" y="559.5" ></text>
</g>
<g >
<title>CLockLocation::~CLockLocation (14 samples, 0.02%)</title><rect x="944.9" y="549" width="0.2" height="15.0" fill="rgb(212,19,21)" rx="2" ry="2" />
<text  x="947.93" y="559.5" ></text>
</g>
<g >
<title>CSHA256::Finalize (34 samples, 0.04%)</title><rect x="715.2" y="581" width="0.4" height="15.0" fill="rgb(216,206,4)" rx="2" ry="2" />
<text  x="718.16" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~_Vector_base (22 samples, 0.02%)</title><rect x="769.2" y="453" width="0.3" height="15.0" fill="rgb(222,122,11)" rx="2" ry="2" />
<text  x="772.21" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;&gt; (215 samples, 0.23%)</title><rect x="415.6" y="517" width="2.8" height="15.0" fill="rgb(220,120,39)" rx="2" ry="2" />
<text  x="418.62" y="527.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, unsigned int&amp;&gt; (33 samples, 0.04%)</title><rect x="441.8" y="293" width="0.4" height="15.0" fill="rgb(228,58,30)" rx="2" ry="2" />
<text  x="444.81" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::_M_allocate (40 samples, 0.04%)</title><rect x="453.0" y="325" width="0.5" height="15.0" fill="rgb(244,205,12)" rx="2" ry="2" />
<text  x="455.99" y="335.5" ></text>
</g>
<g >
<title>CHash256::Write (17 samples, 0.02%)</title><rect x="506.7" y="85" width="0.2" height="15.0" fill="rgb(226,209,6)" rx="2" ry="2" />
<text  x="509.65" y="95.5" ></text>
</g>
<g >
<title>Serialize&lt;CSizeComputer&gt; (17 samples, 0.02%)</title><rect x="1035.2" y="373" width="0.2" height="15.0" fill="rgb(230,22,24)" rx="2" ry="2" />
<text  x="1038.16" y="383.5" ></text>
</g>
<g >
<title>ser_writedata32&lt;CHashWriter&gt; (49 samples, 0.05%)</title><rect x="484.3" y="309" width="0.6" height="15.0" fill="rgb(251,105,10)" rx="2" ry="2" />
<text  x="487.28" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_valptr (316 samples, 0.34%)</title><rect x="876.7" y="517" width="4.0" height="15.0" fill="rgb(253,111,6)" rx="2" ry="2" />
<text  x="879.66" y="527.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.03%)</title><rect x="617.8" y="453" width="0.3" height="15.0" fill="rgb(227,60,48)" rx="2" ry="2" />
<text  x="620.81" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_S_max_size (23 samples, 0.02%)</title><rect x="623.8" y="613" width="0.3" height="15.0" fill="rgb(219,74,38)" rx="2" ry="2" />
<text  x="626.79" y="623.5" ></text>
</g>
<g >
<title>NCONST_PTR&lt;COutPoint&gt; (8 samples, 0.01%)</title><rect x="489.5" y="181" width="0.1" height="15.0" fill="rgb(209,110,32)" rx="2" ry="2" />
<text  x="492.47" y="191.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::operator (32 samples, 0.03%)</title><rect x="897.2" y="581" width="0.4" height="15.0" fill="rgb(250,124,29)" rx="2" ry="2" />
<text  x="900.23" y="591.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (23 samples, 0.02%)</title><rect x="358.5" y="613" width="0.3" height="15.0" fill="rgb(205,117,26)" rx="2" ry="2" />
<text  x="361.53" y="623.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (18 samples, 0.02%)</title><rect x="638.7" y="565" width="0.2" height="15.0" fill="rgb(210,81,46)" rx="2" ry="2" />
<text  x="641.69" y="575.5" ></text>
</g>
<g >
<title>WriteCompactSize&lt;CHashWriter&gt; (42 samples, 0.05%)</title><rect x="515.5" y="261" width="0.5" height="15.0" fill="rgb(245,126,21)" rx="2" ry="2" />
<text  x="518.45" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;secure_allocator&lt;unsigned char&gt; &gt;::_S_destroy&lt;secure_allocator&lt;unsigned char&gt;, unsigned char&gt; (10 samples, 0.01%)</title><rect x="1170.5" y="741" width="0.1" height="15.0" fill="rgb(254,153,14)" rx="2" ry="2" />
<text  x="1173.47" y="751.5" ></text>
</g>
<g >
<title>CLockLocation::CLockLocation (34 samples, 0.04%)</title><rect x="789.7" y="533" width="0.4" height="15.0" fill="rgb(221,27,54)" rx="2" ry="2" />
<text  x="792.70" y="543.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt; &gt; (169 samples, 0.18%)</title><rect x="162.5" y="277" width="2.2" height="15.0" fill="rgb(244,81,16)" rx="2" ry="2" />
<text  x="165.53" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::deallocate (10 samples, 0.01%)</title><rect x="547.3" y="517" width="0.2" height="15.0" fill="rgb(233,132,36)" rx="2" ry="2" />
<text  x="550.34" y="527.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 0.06%)</title><rect x="89.8" y="309" width="0.7" height="15.0" fill="rgb(249,75,1)" rx="2" ry="2" />
<text  x="92.85" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;CKeyID const, CKeyMetadata&gt;::pair&lt;CKeyID const&amp;, 0ul&gt; (70 samples, 0.08%)</title><rect x="855.0" y="549" width="0.9" height="15.0" fill="rgb(246,9,51)" rx="2" ry="2" />
<text  x="858.02" y="559.5" ></text>
</g>
<g >
<title>std::forward&lt;CWalletTx*&gt; (11 samples, 0.01%)</title><rect x="967.9" y="645" width="0.1" height="15.0" fill="rgb(240,68,34)" rx="2" ry="2" />
<text  x="970.86" y="655.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (19 samples, 0.02%)</title><rect x="449.7" y="149" width="0.3" height="15.0" fill="rgb(245,185,17)" rx="2" ry="2" />
<text  x="452.71" y="159.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;interfaces::Chain::Lock, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt;::get_deleter (18 samples, 0.02%)</title><rect x="1021.9" y="645" width="0.2" height="15.0" fill="rgb(210,97,17)" rx="2" ry="2" />
<text  x="1024.91" y="655.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (7,422 samples, 8.06%)</title><rect x="428.5" y="517" width="95.0" height="15.0" fill="rgb(239,78,17)" rx="2" ry="2" />
<text  x="431.46" y="527.5" >std::_Sp_co..</text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (15 samples, 0.02%)</title><rect x="564.6" y="613" width="0.2" height="15.0" fill="rgb(208,107,40)" rx="2" ry="2" />
<text  x="567.60" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt; &gt;::__normal_iterator (32 samples, 0.03%)</title><rect x="301.9" y="629" width="0.4" height="15.0" fill="rgb(216,42,2)" rx="2" ry="2" />
<text  x="304.88" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::construct&lt;std::pair&lt;CScriptID const, CScript&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;CScriptID const&amp;&gt;, std::tuple&lt;&gt; &gt; (97 samples, 0.11%)</title><rect x="772.4" y="533" width="1.2" height="15.0" fill="rgb(222,148,46)" rx="2" ry="2" />
<text  x="775.39" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_Tp_allocator (13 samples, 0.01%)</title><rect x="973.2" y="517" width="0.2" height="15.0" fill="rgb(247,70,13)" rx="2" ry="2" />
<text  x="976.24" y="527.5" ></text>
</g>
<g >
<title>WriteCompactSize&lt;CHashWriter&gt; (12 samples, 0.01%)</title><rect x="512.5" y="293" width="0.2" height="15.0" fill="rgb(220,9,10)" rx="2" ry="2" />
<text  x="515.52" y="303.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (8 samples, 0.01%)</title><rect x="152.2" y="469" width="0.1" height="15.0" fill="rgb(215,221,41)" rx="2" ry="2" />
<text  x="155.23" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CBlockIndex*, std::pair&lt;CBlockIndex* const, CBlockIndex*&gt;, std::_Select1st&lt;std::pair&lt;CBlockIndex* const, CBlockIndex*&gt; &gt;, std::less&lt;CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;CBlockIndex* const, CBlockIndex*&gt; &gt; &gt;::equal_range (64 samples, 0.07%)</title><rect x="49.4" y="661" width="0.8" height="15.0" fill="rgb(215,135,44)" rx="2" ry="2" />
<text  x="52.42" y="671.5" ></text>
</g>
<g >
<title>SerializeTransaction&lt;CHashWriter, CTransaction&gt; (279 samples, 0.30%)</title><rect x="1140.8" y="485" width="3.6" height="15.0" fill="rgb(246,185,31)" rx="2" ry="2" />
<text  x="1143.78" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::_S_destroy&lt;zero_after_free_allocator&lt;char&gt;, char&gt; (8 samples, 0.01%)</title><rect x="1172.1" y="757" width="0.1" height="15.0" fill="rgb(230,81,48)" rx="2" ry="2" />
<text  x="1175.07" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;LockedPool::LockedPageArena&gt;::_M_ptr (8 samples, 0.01%)</title><rect x="1094.1" y="549" width="0.1" height="15.0" fill="rgb(220,138,0)" rx="2" ry="2" />
<text  x="1097.07" y="559.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CTxOut, std::allocator&lt;CTxOut&gt; &gt; (754 samples, 0.82%)</title><rect x="446.8" y="389" width="9.7" height="15.0" fill="rgb(207,75,29)" rx="2" ry="2" />
<text  x="449.82" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::data (14 samples, 0.02%)</title><rect x="516.0" y="261" width="0.2" height="15.0" fill="rgb(229,137,33)" rx="2" ry="2" />
<text  x="518.99" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt; &gt;::__normal_iterator&lt;char*&gt; (27 samples, 0.03%)</title><rect x="176.2" y="661" width="0.3" height="15.0" fill="rgb(239,205,24)" rx="2" ry="2" />
<text  x="179.15" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::empty (33 samples, 0.04%)</title><rect x="1052.9" y="661" width="0.4" height="15.0" fill="rgb(241,194,6)" rx="2" ry="2" />
<text  x="1055.87" y="671.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (419 samples, 0.45%)</title><rect x="74.5" y="469" width="5.4" height="15.0" fill="rgb(251,162,40)" rx="2" ry="2" />
<text  x="77.52" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::~vector (48 samples, 0.05%)</title><rect x="479.2" y="437" width="0.6" height="15.0" fill="rgb(228,95,15)" rx="2" ry="2" />
<text  x="482.17" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::~vector (22 samples, 0.02%)</title><rect x="1180.4" y="757" width="0.3" height="15.0" fill="rgb(251,16,14)" rx="2" ry="2" />
<text  x="1183.37" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_S_relocate (63 samples, 0.07%)</title><rect x="465.9" y="293" width="0.8" height="15.0" fill="rgb(232,51,7)" rx="2" ry="2" />
<text  x="468.93" y="303.5" ></text>
</g>
<g >
<title>__db_lput (11 samples, 0.01%)</title><rect x="104.7" y="405" width="0.1" height="15.0" fill="rgb(214,10,0)" rx="2" ry="2" />
<text  x="107.67" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt;::max_size (9 samples, 0.01%)</title><rect x="617.7" y="453" width="0.1" height="15.0" fill="rgb(224,44,22)" rx="2" ry="2" />
<text  x="620.70" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_S_max_size (22 samples, 0.02%)</title><rect x="446.3" y="309" width="0.2" height="15.0" fill="rgb(208,201,22)" rx="2" ry="2" />
<text  x="449.26" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::end (16 samples, 0.02%)</title><rect x="537.0" y="581" width="0.2" height="15.0" fill="rgb(241,3,39)" rx="2" ry="2" />
<text  x="539.98" y="591.5" ></text>
</g>
<g >
<title>__db_lput (8 samples, 0.01%)</title><rect x="147.4" y="501" width="0.1" height="15.0" fill="rgb(218,49,8)" rx="2" ry="2" />
<text  x="150.36" y="511.5" ></text>
</g>
<g >
<title>FillableSigningProvider::ImplicitlyLearnRelatedKeyScripts (5,574 samples, 6.05%)</title><rect x="715.9" y="629" width="71.4" height="15.0" fill="rgb(251,57,10)" rx="2" ry="2" />
<text  x="718.94" y="639.5" >Fillable..</text>
</g>
<g >
<title>__db_cursor (26 samples, 0.03%)</title><rect x="96.3" y="469" width="0.3" height="15.0" fill="rgb(217,69,52)" rx="2" ry="2" />
<text  x="99.29" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::~vector (28 samples, 0.03%)</title><rect x="478.8" y="437" width="0.4" height="15.0" fill="rgb(232,50,50)" rx="2" ry="2" />
<text  x="481.81" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_S_key (26 samples, 0.03%)</title><rect x="1045.1" y="613" width="0.3" height="15.0" fill="rgb(242,43,35)" rx="2" ry="2" />
<text  x="1048.07" y="623.5" ></text>
</g>
<g >
<title>__libc_pread (9 samples, 0.01%)</title><rect x="146.0" y="437" width="0.1" height="15.0" fill="rgb(214,227,6)" rx="2" ry="2" />
<text  x="148.99" y="447.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (8 samples, 0.01%)</title><rect x="55.4" y="533" width="0.1" height="15.0" fill="rgb(237,94,17)" rx="2" ry="2" />
<text  x="58.36" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::destroy&lt;char&gt; (21 samples, 0.02%)</title><rect x="1153.0" y="741" width="0.3" height="15.0" fill="rgb(251,47,27)" rx="2" ry="2" />
<text  x="1156.04" y="751.5" ></text>
</g>
<g >
<title>__libc_pread (26 samples, 0.03%)</title><rect x="79.3" y="373" width="0.3" height="15.0" fill="rgb(243,188,45)" rx="2" ry="2" />
<text  x="82.28" y="383.5" ></text>
</g>
<g >
<title>base_blob&lt;160u&gt;::Unserialize&lt;CDataStream&gt; (133 samples, 0.14%)</title><rect x="590.7" y="645" width="1.7" height="15.0" fill="rgb(206,137,30)" rx="2" ry="2" />
<text  x="593.70" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_S_value (57 samples, 0.06%)</title><rect x="791.2" y="501" width="0.8" height="15.0" fill="rgb(244,44,50)" rx="2" ry="2" />
<text  x="794.24" y="511.5" ></text>
</g>
<g >
<title>__memp_fget (142 samples, 0.15%)</title><rect x="144.3" y="485" width="1.8" height="15.0" fill="rgb(225,91,9)" rx="2" ry="2" />
<text  x="147.29" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (154 samples, 0.17%)</title><rect x="537.3" y="613" width="2.0" height="15.0" fill="rgb(233,22,37)" rx="2" ry="2" />
<text  x="540.31" y="623.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, uint256&gt; (69 samples, 0.07%)</title><rect x="487.8" y="149" width="0.9" height="15.0" fill="rgb(245,192,19)" rx="2" ry="2" />
<text  x="490.78" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (9 samples, 0.01%)</title><rect x="444.6" y="197" width="0.1" height="15.0" fill="rgb(228,146,42)" rx="2" ry="2" />
<text  x="447.60" y="207.5" ></text>
</g>
<g >
<title>CScriptWitness::~CScriptWitness (42 samples, 0.05%)</title><rect x="1032.1" y="533" width="0.5" height="15.0" fill="rgb(242,12,27)" rx="2" ry="2" />
<text  x="1035.11" y="543.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;CTransaction const,  (19 samples, 0.02%)</title><rect x="1027.0" y="645" width="0.3" height="15.0" fill="rgb(240,30,36)" rx="2" ry="2" />
<text  x="1030.02" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::~_Vector_base (14 samples, 0.02%)</title><rect x="479.0" y="421" width="0.2" height="15.0" fill="rgb(245,56,12)" rx="2" ry="2" />
<text  x="481.99" y="431.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (12 samples, 0.01%)</title><rect x="555.8" y="549" width="0.1" height="15.0" fill="rgb(223,76,39)" rx="2" ry="2" />
<text  x="558.75" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt;::_M_addr (18 samples, 0.02%)</title><rect x="860.6" y="533" width="0.2" height="15.0" fill="rgb(222,54,3)" rx="2" ry="2" />
<text  x="863.60" y="543.5" ></text>
</g>
<g >
<title>__db_get (294 samples, 0.32%)</title><rect x="148.0" y="565" width="3.8" height="15.0" fill="rgb(207,8,7)" rx="2" ry="2" />
<text  x="151.02" y="575.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter&gt; (24 samples, 0.03%)</title><rect x="493.0" y="213" width="0.3" height="15.0" fill="rgb(249,5,44)" rx="2" ry="2" />
<text  x="496.04" y="223.5" ></text>
</g>
<g >
<title>LockAssertion::LockAssertion&lt;AnnotatedMixin&lt;std::recursive_mutex&gt; &gt; (17 samples, 0.02%)</title><rect x="51.3" y="613" width="0.2" height="15.0" fill="rgb(242,127,12)" rx="2" ry="2" />
<text  x="54.25" y="623.5" ></text>
</g>
<g >
<title>CHash256::Write (279 samples, 0.30%)</title><rect x="1140.8" y="213" width="3.6" height="15.0" fill="rgb(237,53,9)" rx="2" ry="2" />
<text  x="1143.78" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;::_M_addr (10 samples, 0.01%)</title><rect x="1017.3" y="565" width="0.2" height="15.0" fill="rgb(246,136,54)" rx="2" ry="2" />
<text  x="1020.34" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_begin (8 samples, 0.01%)</title><rect x="549.8" y="581" width="0.1" height="15.0" fill="rgb(218,94,24)" rx="2" ry="2" />
<text  x="552.76" y="591.5" ></text>
</g>
<g >
<title>CHash160::Finalize (127 samples, 0.14%)</title><rect x="1120.6" y="661" width="1.7" height="15.0" fill="rgb(241,70,27)" rx="2" ry="2" />
<text  x="1123.63" y="671.5" ></text>
</g>
<g >
<title>CBlockPolicyEstimator::Read (10 samples, 0.01%)</title><rect x="29.5" y="709" width="0.2" height="15.0" fill="rgb(222,222,51)" rx="2" ry="2" />
<text  x="32.53" y="719.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (10 samples, 0.01%)</title><rect x="1086.0" y="517" width="0.1" height="15.0" fill="rgb(230,35,30)" rx="2" ry="2" />
<text  x="1088.98" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::~_Vector_base (26 samples, 0.03%)</title><rect x="1032.3" y="501" width="0.3" height="15.0" fill="rgb(215,147,5)" rx="2" ry="2" />
<text  x="1035.31" y="511.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::base_blob (15 samples, 0.02%)</title><rect x="30.3" y="549" width="0.2" height="15.0" fill="rgb(246,120,42)" rx="2" ry="2" />
<text  x="33.29" y="559.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;unsigned char*&gt;, unsigned char*&gt; (51 samples, 0.06%)</title><rect x="1101.1" y="581" width="0.7" height="15.0" fill="rgb(244,164,53)" rx="2" ry="2" />
<text  x="1104.15" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::_S_construct&lt;char, char const&amp;&gt; (64 samples, 0.07%)</title><rect x="37.9" y="565" width="0.8" height="15.0" fill="rgb(227,162,9)" rx="2" ry="2" />
<text  x="40.89" y="575.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (16 samples, 0.02%)</title><rect x="26.1" y="757" width="0.2" height="15.0" fill="rgb(247,110,53)" rx="2" ry="2" />
<text  x="29.07" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::end (10 samples, 0.01%)</title><rect x="1054.0" y="661" width="0.1" height="15.0" fill="rgb(209,67,2)" rx="2" ry="2" />
<text  x="1056.97" y="671.5" ></text>
</g>
<g >
<title>__memp_fput (22 samples, 0.02%)</title><rect x="146.1" y="485" width="0.3" height="15.0" fill="rgb(228,137,36)" rx="2" ry="2" />
<text  x="149.11" y="495.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;*, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (12 samples, 0.01%)</title><rect x="473.4" y="277" width="0.1" height="15.0" fill="rgb(239,170,8)" rx="2" ry="2" />
<text  x="476.38" y="287.5" ></text>
</g>
<g >
<title>COutPoint::IsNull (14 samples, 0.02%)</title><rect x="933.3" y="613" width="0.2" height="15.0" fill="rgb(239,1,20)" rx="2" ry="2" />
<text  x="936.33" y="623.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::size (17 samples, 0.02%)</title><rect x="511.6" y="101" width="0.2" height="15.0" fill="rgb(239,113,32)" rx="2" ry="2" />
<text  x="514.61" y="111.5" ></text>
</g>
<g >
<title>interfaces::(anonymous namespace)::LockImpl::getHeight (24 samples, 0.03%)</title><rect x="33.4" y="613" width="0.3" height="15.0" fill="rgb(230,104,47)" rx="2" ry="2" />
<text  x="36.36" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;CTxOut const*, std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; &gt;::__normal_iterator (15 samples, 0.02%)</title><rect x="499.5" y="277" width="0.2" height="15.0" fill="rgb(209,20,41)" rx="2" ry="2" />
<text  x="502.49" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (14 samples, 0.02%)</title><rect x="1067.0" y="661" width="0.2" height="15.0" fill="rgb(248,9,19)" rx="2" ry="2" />
<text  x="1070.02" y="671.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="850.3" y="549" width="0.2" height="15.0" fill="rgb(230,51,14)" rx="2" ry="2" />
<text  x="853.32" y="559.5" ></text>
</g>
<g >
<title>__bam_ca_delete (20 samples, 0.02%)</title><rect x="155.5" y="501" width="0.2" height="15.0" fill="rgb(211,145,29)" rx="2" ry="2" />
<text  x="158.46" y="511.5" ></text>
</g>
<g >
<title>__lock_get (8 samples, 0.01%)</title><rect x="62.1" y="437" width="0.2" height="15.0" fill="rgb(226,158,54)" rx="2" ry="2" />
<text  x="65.15" y="447.5" ></text>
</g>
<g >
<title>ReadLE32 (9 samples, 0.01%)</title><rect x="43.8" y="629" width="0.1" height="15.0" fill="rgb(224,7,20)" rx="2" ry="2" />
<text  x="46.78" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_valptr (97 samples, 0.11%)</title><rect x="977.8" y="581" width="1.2" height="15.0" fill="rgb(207,195,34)" rx="2" ry="2" />
<text  x="980.79" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_S_max_size (8 samples, 0.01%)</title><rect x="364.7" y="405" width="0.1" height="15.0" fill="rgb(210,32,19)" rx="2" ry="2" />
<text  x="367.70" y="415.5" ></text>
</g>
<g >
<title>CWallet::ReacceptWalletTransactions (215 samples, 0.23%)</title><rect x="51.0" y="677" width="2.8" height="15.0" fill="rgb(223,142,26)" rx="2" ry="2" />
<text  x="54.05" y="687.5" ></text>
</g>
<g >
<title>__bam_vrfy_subtree (4,079 samples, 4.43%)</title><rect x="72.1" y="533" width="52.3" height="15.0" fill="rgb(238,229,43)" rx="2" ry="2" />
<text  x="75.12" y="543.5" >__bam..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (24 samples, 0.03%)</title><rect x="636.9" y="469" width="0.3" height="15.0" fill="rgb(242,30,25)" rx="2" ry="2" />
<text  x="639.88" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_S_relocate (26 samples, 0.03%)</title><rect x="1104.2" y="661" width="0.3" height="15.0" fill="rgb(236,22,28)" rx="2" ry="2" />
<text  x="1107.21" y="671.5" ></text>
</g>
<g >
<title>__lock_get (85 samples, 0.09%)</title><rect x="83.9" y="389" width="1.0" height="15.0" fill="rgb(234,190,46)" rx="2" ry="2" />
<text  x="86.86" y="399.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Compare (10 samples, 0.01%)</title><rect x="1045.9" y="581" width="0.1" height="15.0" fill="rgb(248,70,6)" rx="2" ry="2" />
<text  x="1048.91" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::construct&lt;char, char const&amp;&gt; (2,810 samples, 3.05%)</title><rect x="232.6" y="565" width="36.0" height="15.0" fill="rgb(215,205,30)" rx="2" ry="2" />
<text  x="235.64" y="575.5" >__g..</text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_S_left (22 samples, 0.02%)</title><rect x="897.6" y="597" width="0.3" height="15.0" fill="rgb(252,97,37)" rx="2" ry="2" />
<text  x="900.64" y="607.5" ></text>
</g>
<g >
<title>__dbc_close (19 samples, 0.02%)</title><rect x="102.8" y="469" width="0.3" height="15.0" fill="rgb(208,51,27)" rx="2" ry="2" />
<text  x="105.82" y="479.5" ></text>
</g>
<g >
<title>__lock_put (23 samples, 0.02%)</title><rect x="110.9" y="421" width="0.3" height="15.0" fill="rgb(216,78,48)" rx="2" ry="2" />
<text  x="113.93" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;::_M_valptr (34 samples, 0.04%)</title><rect x="683.9" y="501" width="0.5" height="15.0" fill="rgb(235,160,11)" rx="2" ry="2" />
<text  x="686.92" y="511.5" ></text>
</g>
<g >
<title>__lock_get_internal (26 samples, 0.03%)</title><rect x="150.1" y="453" width="0.4" height="15.0" fill="rgb(237,89,42)" rx="2" ry="2" />
<text  x="153.13" y="463.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CScript&gt; (271 samples, 0.29%)</title><rect x="1137.3" y="341" width="3.5" height="15.0" fill="rgb(238,18,22)" rx="2" ry="2" />
<text  x="1140.31" y="351.5" ></text>
</g>
<g >
<title>CHashWriter::write (22 samples, 0.02%)</title><rect x="496.9" y="69" width="0.3" height="15.0" fill="rgb(221,163,8)" rx="2" ry="2" />
<text  x="499.92" y="79.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::shrink_to_fit (8 samples, 0.01%)</title><rect x="16.5" y="741" width="0.1" height="15.0" fill="rgb(213,133,51)" rx="2" ry="2" />
<text  x="19.47" y="751.5" ></text>
</g>
<g >
<title>CDataStream::read (32 samples, 0.03%)</title><rect x="459.2" y="293" width="0.4" height="15.0" fill="rgb(250,27,27)" rx="2" ry="2" />
<text  x="462.15" y="303.5" ></text>
</g>
<g >
<title>WalletBatch::VerifyDatabaseFile (8,449 samples, 9.17%)</title><rect x="53.8" y="677" width="108.2" height="15.0" fill="rgb(230,16,29)" rx="2" ry="2" />
<text  x="56.80" y="687.5" >WalletBatch::..</text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_put_node (15 samples, 0.02%)</title><rect x="611.0" y="485" width="0.2" height="15.0" fill="rgb(241,175,49)" rx="2" ry="2" />
<text  x="613.99" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt;::allocate (14 samples, 0.02%)</title><rect x="571.1" y="437" width="0.2" height="15.0" fill="rgb(242,48,29)" rx="2" ry="2" />
<text  x="574.13" y="447.5" ></text>
</g>
<g >
<title>uint256::uint256 (38 samples, 0.04%)</title><rect x="1106.1" y="677" width="0.5" height="15.0" fill="rgb(233,38,10)" rx="2" ry="2" />
<text  x="1109.13" y="687.5" ></text>
</g>
<g >
<title>__memp_bhfree (15 samples, 0.02%)</title><rect x="78.8" y="389" width="0.2" height="15.0" fill="rgb(234,185,2)" rx="2" ry="2" />
<text  x="81.81" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt; &gt;::allocate (64 samples, 0.07%)</title><rect x="821.9" y="565" width="0.8" height="15.0" fill="rgb(206,192,54)" rx="2" ry="2" />
<text  x="824.93" y="575.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (18 samples, 0.02%)</title><rect x="106.1" y="405" width="0.2" height="15.0" fill="rgb(223,109,36)" rx="2" ry="2" />
<text  x="109.10" y="415.5" ></text>
</g>
<g >
<title>BerkeleyBatch::BerkeleyBatch (18 samples, 0.02%)</title><rect x="1107.4" y="693" width="0.2" height="15.0" fill="rgb(239,164,37)" rx="2" ry="2" />
<text  x="1110.41" y="703.5" ></text>
</g>
<g >
<title>__memp_fput (19 samples, 0.02%)</title><rect x="151.3" y="485" width="0.3" height="15.0" fill="rgb(227,29,43)" rx="2" ry="2" />
<text  x="154.33" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_S_do_relocate (12 samples, 0.01%)</title><rect x="820.1" y="437" width="0.2" height="15.0" fill="rgb(208,157,36)" rx="2" ry="2" />
<text  x="823.15" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt; &gt;::__normal_iterator (45 samples, 0.05%)</title><rect x="176.7" y="645" width="0.6" height="15.0" fill="rgb(243,159,26)" rx="2" ry="2" />
<text  x="179.72" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::__normal_iterator (8 samples, 0.01%)</title><rect x="1103.1" y="613" width="0.1" height="15.0" fill="rgb(207,96,48)" rx="2" ry="2" />
<text  x="1106.11" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::size (13 samples, 0.01%)</title><rect x="455.5" y="309" width="0.2" height="15.0" fill="rgb(223,158,47)" rx="2" ry="2" />
<text  x="458.50" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::end (9 samples, 0.01%)</title><rect x="630.8" y="533" width="0.1" height="15.0" fill="rgb(219,213,22)" rx="2" ry="2" />
<text  x="633.76" y="543.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (10 samples, 0.01%)</title><rect x="150.3" y="437" width="0.2" height="15.0" fill="rgb(231,165,29)" rx="2" ry="2" />
<text  x="153.33" y="447.5" ></text>
</g>
<g >
<title>operator&lt; (8 samples, 0.01%)</title><rect x="687.8" y="613" width="0.1" height="15.0" fill="rgb(227,109,3)" rx="2" ry="2" />
<text  x="690.76" y="623.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, CScript&gt; (139 samples, 0.15%)</title><rect x="495.9" y="245" width="1.7" height="15.0" fill="rgb(248,189,10)" rx="2" ry="2" />
<text  x="498.87" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;uint256*&gt; (15 samples, 0.02%)</title><rect x="558.4" y="597" width="0.1" height="15.0" fill="rgb(226,36,10)" rx="2" ry="2" />
<text  x="561.35" y="607.5" ></text>
</g>
<g >
<title>__db_lput (16 samples, 0.02%)</title><rect x="142.3" y="517" width="0.2" height="15.0" fill="rgb(221,121,18)" rx="2" ry="2" />
<text  x="145.32" y="527.5" ></text>
</g>
<g >
<title>__os_io (9 samples, 0.01%)</title><rect x="146.0" y="453" width="0.1" height="15.0" fill="rgb(240,103,22)" rx="2" ry="2" />
<text  x="148.99" y="463.5" ></text>
</g>
<g >
<title>LookupBlockIndex (154 samples, 0.17%)</title><rect x="51.5" y="613" width="1.9" height="15.0" fill="rgb(205,151,16)" rx="2" ry="2" />
<text  x="54.47" y="623.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;CTransaction&gt; (271 samples, 0.29%)</title><rect x="1137.3" y="533" width="3.5" height="15.0" fill="rgb(218,205,13)" rx="2" ry="2" />
<text  x="1140.31" y="543.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;void*, CLockLocation&gt; &gt; (9 samples, 0.01%)</title><rect x="1181.0" y="741" width="0.2" height="15.0" fill="rgb(246,62,30)" rx="2" ry="2" />
<text  x="1184.04" y="751.5" ></text>
</g>
<g >
<title>__lock_put (197 samples, 0.21%)</title><rect x="336.3" y="565" width="2.5" height="15.0" fill="rgb(241,40,7)" rx="2" ry="2" />
<text  x="339.32" y="575.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::item_ptr (9 samples, 0.01%)</title><rect x="1036.7" y="325" width="0.1" height="15.0" fill="rgb(208,101,9)" rx="2" ry="2" />
<text  x="1039.68" y="335.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CTxOut&amp;&gt; (271 samples, 0.29%)</title><rect x="448.3" y="357" width="3.5" height="15.0" fill="rgb(232,19,27)" rx="2" ry="2" />
<text  x="451.32" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (90 samples, 0.10%)</title><rect x="542.4" y="629" width="1.1" height="15.0" fill="rgb(208,88,12)" rx="2" ry="2" />
<text  x="545.37" y="639.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTxIn&gt; (279 samples, 0.30%)</title><rect x="1140.8" y="421" width="3.6" height="15.0" fill="rgb(211,85,32)" rx="2" ry="2" />
<text  x="1143.78" y="431.5" ></text>
</g>
<g >
<title>Serialize&lt;CSizeComputer, CScript&gt; (117 samples, 0.13%)</title><rect x="1035.8" y="453" width="1.5" height="15.0" fill="rgb(220,222,47)" rx="2" ry="2" />
<text  x="1038.77" y="463.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt;&gt; (166 samples, 0.18%)</title><rect x="490.6" y="149" width="2.2" height="15.0" fill="rgb(242,205,2)" rx="2" ry="2" />
<text  x="493.64" y="159.5" ></text>
</g>
<g >
<title>_int_malloc (13 samples, 0.01%)</title><rect x="618.0" y="421" width="0.1" height="15.0" fill="rgb(210,171,27)" rx="2" ry="2" />
<text  x="620.95" y="431.5" ></text>
</g>
<g >
<title>UniqueLock&lt;AnnotatedMixin&lt;std::recursive_mutex&gt;, std::unique_lock&lt;std::recursive_mutex&gt; &gt;::UniqueLock (12 samples, 0.01%)</title><rect x="25.3" y="757" width="0.2" height="15.0" fill="rgb(233,120,44)" rx="2" ry="2" />
<text  x="28.30" y="767.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::_S_destroy&lt;zero_after_free_allocator&lt;char&gt;, char&gt; (35 samples, 0.04%)</title><rect x="378.0" y="469" width="0.4" height="15.0" fill="rgb(213,95,37)" rx="2" ry="2" />
<text  x="381.00" y="479.5" ></text>
</g>
<g >
<title>CHash256::Finalize (47 samples, 0.05%)</title><rect x="42.7" y="597" width="0.6" height="15.0" fill="rgb(226,85,27)" rx="2" ry="2" />
<text  x="45.66" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_get_node (81 samples, 0.09%)</title><rect x="1047.9" y="581" width="1.1" height="15.0" fill="rgb(211,39,4)" rx="2" ry="2" />
<text  x="1050.95" y="591.5" ></text>
</g>
<g >
<title>std::less&lt;uint256&gt;::operator (605 samples, 0.66%)</title><rect x="883.5" y="549" width="7.7" height="15.0" fill="rgb(210,54,6)" rx="2" ry="2" />
<text  x="886.46" y="559.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (8 samples, 0.01%)</title><rect x="687.4" y="565" width="0.1" height="15.0" fill="rgb(247,89,40)" rx="2" ry="2" />
<text  x="690.35" y="575.5" ></text>
</g>
<g >
<title>CHash256::Write (8 samples, 0.01%)</title><rect x="520.3" y="277" width="0.1" height="15.0" fill="rgb(243,56,0)" rx="2" ry="2" />
<text  x="523.28" y="287.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt; &gt;::erase (170 samples, 0.18%)</title><rect x="567.5" y="517" width="2.2" height="15.0" fill="rgb(214,196,15)" rx="2" ry="2" />
<text  x="570.51" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;char* const&amp;&gt;, std::tuple&lt;&gt; &gt; (72 samples, 0.08%)</title><rect x="1087.4" y="517" width="0.9" height="15.0" fill="rgb(232,189,32)" rx="2" ry="2" />
<text  x="1090.42" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;char* const, unsigned long&gt; &gt;::_M_valptr (10 samples, 0.01%)</title><rect x="812.2" y="245" width="0.2" height="15.0" fill="rgb(213,30,33)" rx="2" ry="2" />
<text  x="815.23" y="255.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (9 samples, 0.01%)</title><rect x="378.6" y="533" width="0.1" height="15.0" fill="rgb(210,37,12)" rx="2" ry="2" />
<text  x="381.57" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt;::_M_valptr (50 samples, 0.05%)</title><rect x="860.2" y="565" width="0.6" height="15.0" fill="rgb(248,97,21)" rx="2" ry="2" />
<text  x="863.19" y="575.5" ></text>
</g>
<g >
<title>CDataStream::read (71 samples, 0.08%)</title><rect x="409.8" y="565" width="0.9" height="15.0" fill="rgb(232,173,21)" rx="2" ry="2" />
<text  x="412.77" y="575.5" ></text>
</g>
<g >
<title>CScript::SerializationOp&lt;CSizeComputer, CSerActionSerialize&gt; (97 samples, 0.11%)</title><rect x="1036.0" y="421" width="1.2" height="15.0" fill="rgb(215,179,16)" rx="2" ry="2" />
<text  x="1038.98" y="431.5" ></text>
</g>
<g >
<title>FillableSigningProvider::AddCScript (2,464 samples, 2.67%)</title><rect x="660.2" y="661" width="31.6" height="15.0" fill="rgb(251,180,22)" rx="2" ry="2" />
<text  x="663.23" y="671.5" >Fi..</text>
</g>
<g >
<title>[unknown] (25 samples, 0.03%)</title><rect x="161.6" y="469" width="0.3" height="15.0" fill="rgb(210,133,35)" rx="2" ry="2" />
<text  x="164.60" y="479.5" ></text>
</g>
<g >
<title>__dbc_close (62 samples, 0.07%)</title><rect x="81.5" y="469" width="0.8" height="15.0" fill="rgb(229,125,4)" rx="2" ry="2" />
<text  x="84.54" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::__detail::_Select1st, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (12 samples, 0.01%)</title><rect x="53.2" y="565" width="0.2" height="15.0" fill="rgb(228,55,9)" rx="2" ry="2" />
<text  x="56.24" y="575.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::end (12 samples, 0.01%)</title><rect x="1151.6" y="757" width="0.1" height="15.0" fill="rgb(216,209,13)" rx="2" ry="2" />
<text  x="1154.58" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_S_key (11 samples, 0.01%)</title><rect x="1083.8" y="533" width="0.1" height="15.0" fill="rgb(229,117,47)" rx="2" ry="2" />
<text  x="1086.77" y="543.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, uint256&gt; (50 samples, 0.05%)</title><rect x="487.9" y="133" width="0.6" height="15.0" fill="rgb(212,2,6)" rx="2" ry="2" />
<text  x="490.90" y="143.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (10 samples, 0.01%)</title><rect x="476.4" y="373" width="0.2" height="15.0" fill="rgb(216,204,9)" rx="2" ry="2" />
<text  x="479.44" y="383.5" ></text>
</g>
<g >
<title>std::mutex::lock (11 samples, 0.01%)</title><rect x="681.3" y="565" width="0.1" height="15.0" fill="rgb(249,110,6)" rx="2" ry="2" />
<text  x="684.30" y="575.5" ></text>
</g>
<g >
<title>std::recursive_mutex::unlock (34 samples, 0.04%)</title><rect x="1021.3" y="549" width="0.4" height="15.0" fill="rgb(221,54,32)" rx="2" ry="2" />
<text  x="1024.27" y="559.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (99 samples, 0.11%)</title><rect x="690.5" y="533" width="1.2" height="15.0" fill="rgb(221,207,3)" rx="2" ry="2" />
<text  x="693.47" y="543.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter&gt; (25 samples, 0.03%)</title><rect x="507.8" y="213" width="0.3" height="15.0" fill="rgb(232,119,22)" rx="2" ry="2" />
<text  x="510.82" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKeyMetadata&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;CKeyID const&amp;&gt;, std::tuple&lt;&gt; &gt; (181 samples, 0.20%)</title><rect x="854.5" y="629" width="2.4" height="15.0" fill="rgb(236,198,37)" rx="2" ry="2" />
<text  x="857.54" y="639.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::count (162 samples, 0.18%)</title><rect x="535.2" y="613" width="2.1" height="15.0" fill="rgb(234,11,19)" rx="2" ry="2" />
<text  x="538.24" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_emplace_equal&lt;unsigned long&amp;, char*&amp;&gt; (113 samples, 0.12%)</title><rect x="629.1" y="533" width="1.5" height="15.0" fill="rgb(232,66,22)" rx="2" ry="2" />
<text  x="632.12" y="543.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;unsigned char*&gt;, unsigned char*&gt; (57 samples, 0.06%)</title><rect x="1101.1" y="597" width="0.7" height="15.0" fill="rgb(250,33,2)" rx="2" ry="2" />
<text  x="1104.07" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_create_node&lt;unsigned long&amp;, char*&amp;&gt; (44 samples, 0.05%)</title><rect x="629.2" y="517" width="0.5" height="15.0" fill="rgb(227,2,42)" rx="2" ry="2" />
<text  x="632.17" y="527.5" ></text>
</g>
<g >
<title>ShiftMessageC (17 samples, 0.02%)</title><rect x="1118.7" y="229" width="0.2" height="15.0" fill="rgb(211,191,19)" rx="2" ry="2" />
<text  x="1121.65" y="239.5" ></text>
</g>
<g >
<title>__db_cursor_int (22 samples, 0.02%)</title><rect x="80.3" y="453" width="0.3" height="15.0" fill="rgb(252,96,48)" rx="2" ry="2" />
<text  x="83.28" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned char&gt;::max_size (9 samples, 0.01%)</title><rect x="467.8" y="245" width="0.1" height="15.0" fill="rgb(233,76,14)" rx="2" ry="2" />
<text  x="470.82" y="255.5" ></text>
</g>
<g >
<title>__memp_alloc (95 samples, 0.10%)</title><rect x="100.5" y="389" width="1.2" height="15.0" fill="rgb(241,184,25)" rx="2" ry="2" />
<text  x="103.53" y="399.5" ></text>
</g>
<g >
<title>std::distance&lt;unsigned char const*&gt; (21 samples, 0.02%)</title><rect x="768.4" y="421" width="0.3" height="15.0" fill="rgb(243,226,8)" rx="2" ry="2" />
<text  x="771.41" y="431.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream&gt; (15 samples, 0.02%)</title><rect x="408.4" y="613" width="0.2" height="15.0" fill="rgb(247,149,53)" rx="2" ry="2" />
<text  x="411.40" y="623.5" ></text>
</g>
<g >
<title>ReadCompactSize&lt;CDataStream&gt; (130 samples, 0.14%)</title><rect x="560.8" y="645" width="1.7" height="15.0" fill="rgb(228,117,0)" rx="2" ry="2" />
<text  x="563.82" y="655.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, CTxIn, std::allocator&lt;CTxIn&gt;, CTxIn&gt; (658 samples, 0.71%)</title><rect x="486.2" y="309" width="8.4" height="15.0" fill="rgb(253,217,33)" rx="2" ry="2" />
<text  x="489.21" y="319.5" ></text>
</g>
<g >
<title>ReadLE32 (38 samples, 0.04%)</title><rect x="677.8" y="565" width="0.5" height="15.0" fill="rgb(207,53,47)" rx="2" ry="2" />
<text  x="680.77" y="575.5" ></text>
</g>
<g >
<title>boost::detail::variant::visitation_impl_invoke_impl&lt;boost::detail::variant::destroyer, void*, WitnessV0KeyHash&gt; (13 samples, 0.01%)</title><rect x="771.4" y="517" width="0.1" height="15.0" fill="rgb(235,5,50)" rx="2" ry="2" />
<text  x="774.38" y="527.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt;&gt; (15 samples, 0.02%)</title><rect x="954.8" y="565" width="0.2" height="15.0" fill="rgb(218,143,5)" rx="2" ry="2" />
<text  x="957.83" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::destroy&lt;std::pair&lt;void*, CLockLocation&gt; &gt; (33 samples, 0.04%)</title><rect x="1020.6" y="533" width="0.4" height="15.0" fill="rgb(223,1,22)" rx="2" ry="2" />
<text  x="1023.59" y="543.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (274 samples, 0.30%)</title><rect x="134.1" y="501" width="3.5" height="15.0" fill="rgb(241,5,26)" rx="2" ry="2" />
<text  x="137.12" y="511.5" ></text>
</g>
<g >
<title>Unserialize_impl&lt;CDataStream, CTxOut, std::allocator&lt;CTxOut&gt;, CTxOut&gt; (685 samples, 0.74%)</title><rect x="447.7" y="373" width="8.8" height="15.0" fill="rgb(220,90,40)" rx="2" ry="2" />
<text  x="450.70" y="383.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;CTransaction const, std::allocator&lt;CTransaction&gt;&gt; (348 samples, 0.38%)</title><rect x="1059.7" y="645" width="4.4" height="15.0" fill="rgb(234,19,36)" rx="2" ry="2" />
<text  x="1062.67" y="655.5" ></text>
</g>
<g >
<title>CChainState::PruneBlockIndexCandidates (20 samples, 0.02%)</title><rect x="32.0" y="693" width="0.3" height="15.0" fill="rgb(215,163,25)" rx="2" ry="2" />
<text  x="35.04" y="703.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.01%)</title><rect x="30.0" y="565" width="0.2" height="15.0" fill="rgb(245,72,19)" rx="2" ry="2" />
<text  x="33.03" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (9 samples, 0.01%)</title><rect x="555.4" y="565" width="0.2" height="15.0" fill="rgb(245,224,8)" rx="2" ry="2" />
<text  x="558.45" y="575.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;CPubKey&amp;&gt; (416 samples, 0.45%)</title><rect x="371.2" y="677" width="5.4" height="15.0" fill="rgb(251,1,49)" rx="2" ry="2" />
<text  x="374.24" y="687.5" ></text>
</g>
<g >
<title>CSHA256::Write (20 samples, 0.02%)</title><rect x="736.0" y="549" width="0.3" height="15.0" fill="rgb(229,25,36)" rx="2" ry="2" />
<text  x="739.02" y="559.5" ></text>
</g>
<g >
<title>atoi64 (63 samples, 0.07%)</title><rect x="532.7" y="613" width="0.8" height="15.0" fill="rgb(214,100,33)" rx="2" ry="2" />
<text  x="535.65" y="623.5" ></text>
</g>
<g >
<title>__gthread_active_p (8 samples, 0.01%)</title><rect x="946.8" y="485" width="0.1" height="15.0" fill="rgb(253,15,36)" rx="2" ry="2" />
<text  x="949.76" y="495.5" ></text>
</g>
<g >
<title>BerkeleyBatch::SafeDbt::~SafeDbt (8 samples, 0.01%)</title><rect x="13.4" y="757" width="0.1" height="15.0" fill="rgb(214,21,28)" rx="2" ry="2" />
<text  x="16.43" y="767.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, interfaces::Chain::Lock*, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt;::_Tuple_impl&lt;interfaces::Chain::Lock*&amp;, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt;, void&gt; (35 samples, 0.04%)</title><rect x="954.0" y="581" width="0.4" height="15.0" fill="rgb(235,186,11)" rx="2" ry="2" />
<text  x="956.96" y="591.5" ></text>
</g>
<g >
<title>__lock_vec (153 samples, 0.17%)</title><rect x="315.6" y="581" width="1.9" height="15.0" fill="rgb(243,88,44)" rx="2" ry="2" />
<text  x="318.58" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::vector (17 samples, 0.02%)</title><rect x="1180.7" y="757" width="0.2" height="15.0" fill="rgb(239,86,6)" rx="2" ry="2" />
<text  x="1183.66" y="767.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (28 samples, 0.03%)</title><rect x="540.6" y="613" width="0.4" height="15.0" fill="rgb(208,223,23)" rx="2" ry="2" />
<text  x="543.64" y="623.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (13 samples, 0.01%)</title><rect x="539.1" y="549" width="0.1" height="15.0" fill="rgb(205,22,9)" rx="2" ry="2" />
<text  x="542.05" y="559.5" ></text>
</g>
<g >
<title>__bam_vrfy (1,282 samples, 1.39%)</title><rect x="55.7" y="581" width="16.4" height="15.0" fill="rgb(236,111,33)" rx="2" ry="2" />
<text  x="58.71" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, interfaces::Chain::Lock*, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt; (12 samples, 0.01%)</title><rect x="1022.0" y="613" width="0.1" height="15.0" fill="rgb(206,45,35)" rx="2" ry="2" />
<text  x="1024.99" y="623.5" ></text>
</g>
<g >
<title>std::mutex::lock (9 samples, 0.01%)</title><rect x="841.0" y="565" width="0.1" height="15.0" fill="rgb(218,68,2)" rx="2" ry="2" />
<text  x="844.01" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (10 samples, 0.01%)</title><rect x="477.6" y="341" width="0.1" height="15.0" fill="rgb(252,144,2)" rx="2" ry="2" />
<text  x="480.56" y="351.5" ></text>
</g>
<g >
<title>__env_attach_regions (17 samples, 0.02%)</title><rect x="1107.4" y="629" width="0.2" height="15.0" fill="rgb(232,4,40)" rx="2" ry="2" />
<text  x="1110.42" y="639.5" ></text>
</g>
<g >
<title>std::equal_to&lt;uint256&gt;::operator (11 samples, 0.01%)</title><rect x="53.1" y="501" width="0.1" height="15.0" fill="rgb(214,168,17)" rx="2" ry="2" />
<text  x="56.07" y="511.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (8 samples, 0.01%)</title><rect x="682.4" y="517" width="0.1" height="15.0" fill="rgb(223,176,23)" rx="2" ry="2" />
<text  x="685.38" y="527.5" ></text>
</g>
<g >
<title>__bam_cmp (24 samples, 0.03%)</title><rect x="97.4" y="405" width="0.3" height="15.0" fill="rgb(247,207,49)" rx="2" ry="2" />
<text  x="100.43" y="415.5" ></text>
</g>
<g >
<title>CHashWriter::write (18 samples, 0.02%)</title><rect x="517.4" y="261" width="0.2" height="15.0" fill="rgb(247,91,7)" rx="2" ry="2" />
<text  x="520.40" y="271.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, unsigned long, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt; &gt;::end (12 samples, 0.01%)</title><rect x="1090.5" y="565" width="0.2" height="15.0" fill="rgb(219,58,25)" rx="2" ry="2" />
<text  x="1093.51" y="575.5" ></text>
</g>
<g >
<title>__bam_vrfy_subtree (10 samples, 0.01%)</title><rect x="1144.7" y="565" width="0.1" height="15.0" fill="rgb(206,81,22)" rx="2" ry="2" />
<text  x="1147.70" y="575.5" ></text>
</g>
<g >
<title>CHashWriter::write (28 samples, 0.03%)</title><rect x="515.6" y="229" width="0.4" height="15.0" fill="rgb(226,26,26)" rx="2" ry="2" />
<text  x="518.63" y="239.5" ></text>
</g>
<g >
<title>__bam_defcmp (10 samples, 0.01%)</title><rect x="66.2" y="453" width="0.2" height="15.0" fill="rgb(253,204,10)" rx="2" ry="2" />
<text  x="69.23" y="463.5" ></text>
</g>
<g >
<title>std::less&lt;CKeyID&gt;::operator (347 samples, 0.38%)</title><rect x="861.2" y="597" width="4.5" height="15.0" fill="rgb(223,108,3)" rx="2" ry="2" />
<text  x="864.22" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (10 samples, 0.01%)</title><rect x="569.8" y="453" width="0.2" height="15.0" fill="rgb(220,111,41)" rx="2" ry="2" />
<text  x="572.83" y="463.5" ></text>
</g>
<g >
<title>base_blob&lt;160u&gt;::Unserialize&lt;CDataStream&gt; (11 samples, 0.01%)</title><rect x="362.5" y="565" width="0.1" height="15.0" fill="rgb(235,219,25)" rx="2" ry="2" />
<text  x="365.49" y="575.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, uint256&amp;&gt; (24 samples, 0.03%)</title><rect x="531.0" y="613" width="0.4" height="15.0" fill="rgb(212,55,29)" rx="2" ry="2" />
<text  x="534.05" y="623.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, CScript&gt; (117 samples, 0.13%)</title><rect x="506.1" y="245" width="1.5" height="15.0" fill="rgb(223,178,12)" rx="2" ry="2" />
<text  x="509.08" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;::_M_addr (17 samples, 0.02%)</title><rect x="689.2" y="517" width="0.2" height="15.0" fill="rgb(254,193,13)" rx="2" ry="2" />
<text  x="692.19" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_S_max_size (19 samples, 0.02%)</title><rect x="472.3" y="293" width="0.2" height="15.0" fill="rgb(235,180,12)" rx="2" ry="2" />
<text  x="475.29" y="303.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char*&gt; (9 samples, 0.01%)</title><rect x="418.1" y="453" width="0.1" height="15.0" fill="rgb(220,14,29)" rx="2" ry="2" />
<text  x="421.13" y="463.5" ></text>
</g>
<g >
<title>__db_lget (20 samples, 0.02%)</title><rect x="139.8" y="469" width="0.2" height="15.0" fill="rgb(212,222,11)" rx="2" ry="2" />
<text  x="142.78" y="479.5" ></text>
</g>
<g >
<title>__dbc_close (49 samples, 0.05%)</title><rect x="106.0" y="469" width="0.6" height="15.0" fill="rgb(234,24,32)" rx="2" ry="2" />
<text  x="108.99" y="479.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.02%)</title><rect x="89.1" y="309" width="0.1" height="15.0" fill="rgb(219,181,2)" rx="2" ry="2" />
<text  x="92.06" y="319.5" ></text>
</g>
<g >
<title>__db_tas_mutex_readlock (12 samples, 0.01%)</title><rect x="86.4" y="389" width="0.2" height="15.0" fill="rgb(217,174,29)" rx="2" ry="2" />
<text  x="89.42" y="399.5" ></text>
</g>
<g >
<title>__memp_fget (473 samples, 0.51%)</title><rect x="155.9" y="581" width="6.0" height="15.0" fill="rgb(233,29,28)" rx="2" ry="2" />
<text  x="158.88" y="591.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt; &gt; (101 samples, 0.11%)</title><rect x="496.3" y="165" width="1.3" height="15.0" fill="rgb(249,202,8)" rx="2" ry="2" />
<text  x="499.29" y="175.5" ></text>
</g>
<g >
<title>__bam_copy (12 samples, 0.01%)</title><rect x="138.4" y="469" width="0.2" height="15.0" fill="rgb(223,183,16)" rx="2" ry="2" />
<text  x="141.41" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_Rb_tree_impl (77 samples, 0.08%)</title><rect x="970.9" y="501" width="1.0" height="15.0" fill="rgb(215,226,47)" rx="2" ry="2" />
<text  x="973.92" y="511.5" ></text>
</g>
<g >
<title>CTxOut::~CTxOut (10 samples, 0.01%)</title><rect x="447.6" y="373" width="0.1" height="15.0" fill="rgb(212,202,5)" rx="2" ry="2" />
<text  x="450.58" y="383.5" ></text>
</g>
<g >
<title>CTxOut::CTxOut (22 samples, 0.02%)</title><rect x="494.8" y="309" width="0.3" height="15.0" fill="rgb(232,29,18)" rx="2" ry="2" />
<text  x="497.83" y="319.5" ></text>
</g>
<g >
<title>__db_cursor (24 samples, 0.03%)</title><rect x="64.9" y="533" width="0.3" height="15.0" fill="rgb(219,15,13)" rx="2" ry="2" />
<text  x="67.93" y="543.5" ></text>
</g>
<g >
<title>__bam_vrfy_subtree (10 samples, 0.01%)</title><rect x="1144.7" y="581" width="0.1" height="15.0" fill="rgb(213,12,48)" rx="2" ry="2" />
<text  x="1147.70" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;::_M_valptr (23 samples, 0.02%)</title><rect x="777.1" y="581" width="0.2" height="15.0" fill="rgb(249,93,29)" rx="2" ry="2" />
<text  x="780.05" y="591.5" ></text>
</g>
<g >
<title>WriteBE64 (11 samples, 0.01%)</title><rect x="482.3" y="357" width="0.2" height="15.0" fill="rgb(209,7,35)" rx="2" ry="2" />
<text  x="485.33" y="367.5" ></text>
</g>
<g >
<title>CSHA256::CSHA256 (15 samples, 0.02%)</title><rect x="480.7" y="373" width="0.2" height="15.0" fill="rgb(244,164,28)" rx="2" ry="2" />
<text  x="483.74" y="383.5" ></text>
</g>
<g >
<title>_int_malloc (8 samples, 0.01%)</title><rect x="162.2" y="517" width="0.1" height="15.0" fill="rgb(223,73,25)" rx="2" ry="2" />
<text  x="165.22" y="527.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, unsigned int&gt; (54 samples, 0.06%)</title><rect x="488.8" y="149" width="0.7" height="15.0" fill="rgb(246,88,34)" rx="2" ry="2" />
<text  x="491.77" y="159.5" ></text>
</g>
<g >
<title>[unknown] (28 samples, 0.03%)</title><rect x="161.6" y="485" width="0.3" height="15.0" fill="rgb(227,3,36)" rx="2" ry="2" />
<text  x="164.57" y="495.5" ></text>
</g>
<g >
<title>std::make_pair&lt;void*&amp;, CLockLocation const&amp;&gt; (125 samples, 0.14%)</title><rect x="947.4" y="533" width="1.6" height="15.0" fill="rgb(234,144,15)" rx="2" ry="2" />
<text  x="950.43" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;char* const, unsigned long&gt; &gt;::_M_v (8 samples, 0.01%)</title><rect x="570.6" y="469" width="0.1" height="15.0" fill="rgb(214,158,50)" rx="2" ry="2" />
<text  x="573.61" y="479.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;unsigned char*&gt; (16 samples, 0.02%)</title><rect x="1101.6" y="549" width="0.2" height="15.0" fill="rgb(219,135,22)" rx="2" ry="2" />
<text  x="1104.60" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;char*, std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;&amp;&gt; (206 samples, 0.22%)</title><rect x="806.0" y="341" width="2.6" height="15.0" fill="rgb(211,33,10)" rx="2" ry="2" />
<text  x="808.96" y="351.5" ></text>
</g>
<g >
<title>__dbc_close (21 samples, 0.02%)</title><rect x="96.6" y="469" width="0.3" height="15.0" fill="rgb(241,12,20)" rx="2" ry="2" />
<text  x="99.62" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (52 samples, 0.06%)</title><rect x="811.9" y="309" width="0.7" height="15.0" fill="rgb(247,193,9)" rx="2" ry="2" />
<text  x="814.92" y="319.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, unsigned char, secure_allocator&lt;unsigned char&gt; &gt; (2,081 samples, 2.26%)</title><rect x="564.0" y="661" width="26.6" height="15.0" fill="rgb(248,211,24)" rx="2" ry="2" />
<text  x="566.98" y="671.5" >U..</text>
</g>
<g >
<title>leveldb::(anonymous namespace)::PosixEnv::BGThread (33 samples, 0.04%)</title><rect x="1147.3" y="709" width="0.4" height="15.0" fill="rgb(245,96,22)" rx="2" ry="2" />
<text  x="1150.32" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_erase_at_end (19 samples, 0.02%)</title><rect x="37.1" y="549" width="0.2" height="15.0" fill="rgb(214,188,53)" rx="2" ry="2" />
<text  x="40.09" y="559.5" ></text>
</g>
<g >
<title>std::multimap&lt;unsigned long, char*, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::lower_bound (53 samples, 0.06%)</title><rect x="611.6" y="549" width="0.7" height="15.0" fill="rgb(222,217,28)" rx="2" ry="2" />
<text  x="614.64" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::size (8 samples, 0.01%)</title><rect x="820.7" y="469" width="0.1" height="15.0" fill="rgb(232,31,46)" rx="2" ry="2" />
<text  x="823.71" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt;::construct&lt;std::pair&lt;char* const, unsigned long&gt;, char*, unsigned long&amp;&gt; (10 samples, 0.01%)</title><rect x="814.1" y="293" width="0.1" height="15.0" fill="rgb(220,57,10)" rx="2" ry="2" />
<text  x="817.08" y="303.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt; &gt; (61 samples, 0.07%)</title><rect x="693.4" y="581" width="0.8" height="15.0" fill="rgb(249,24,9)" rx="2" ry="2" />
<text  x="696.44" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::~_Vector_base (37 samples, 0.04%)</title><rect x="433.7" y="325" width="0.4" height="15.0" fill="rgb(214,171,35)" rx="2" ry="2" />
<text  x="436.66" y="335.5" ></text>
</g>
<g >
<title>CDataStream::read (79 samples, 0.09%)</title><rect x="411.1" y="533" width="1.0" height="15.0" fill="rgb(232,189,24)" rx="2" ry="2" />
<text  x="414.08" y="543.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;uint256*, unsigned long&gt; (54 samples, 0.06%)</title><rect x="30.7" y="613" width="0.7" height="15.0" fill="rgb(239,114,11)" rx="2" ry="2" />
<text  x="33.71" y="623.5" ></text>
</g>
<g >
<title>__lock_env_refresh (10 samples, 0.01%)</title><rect x="162.4" y="421" width="0.1" height="15.0" fill="rgb(229,19,8)" rx="2" ry="2" />
<text  x="165.37" y="431.5" ></text>
</g>
<g >
<title>ShiftMessageB (10 samples, 0.01%)</title><rect x="1127.9" y="565" width="0.1" height="15.0" fill="rgb(243,190,42)" rx="2" ry="2" />
<text  x="1130.86" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (13 samples, 0.01%)</title><rect x="567.9" y="437" width="0.1" height="15.0" fill="rgb(250,138,37)" rx="2" ry="2" />
<text  x="570.88" y="447.5" ></text>
</g>
<g >
<title>CBlockHeader::GetHash (82 samples, 0.09%)</title><rect x="42.6" y="645" width="1.1" height="15.0" fill="rgb(236,59,9)" rx="2" ry="2" />
<text  x="45.63" y="655.5" ></text>
</g>
<g >
<title>CHash256::Write (14 samples, 0.02%)</title><rect x="517.4" y="245" width="0.2" height="15.0" fill="rgb(210,130,16)" rx="2" ry="2" />
<text  x="520.45" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKeyMetadata&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt;::_M_lower_bound (495 samples, 0.54%)</title><rect x="859.3" y="613" width="6.4" height="15.0" fill="rgb(245,196,19)" rx="2" ry="2" />
<text  x="862.32" y="623.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter&gt; (19 samples, 0.02%)</title><rect x="502.8" y="325" width="0.3" height="15.0" fill="rgb(226,68,11)" rx="2" ry="2" />
<text  x="505.81" y="335.5" ></text>
</g>
<g >
<title>__memp_fget (362 samples, 0.39%)</title><rect x="127.9" y="469" width="4.7" height="15.0" fill="rgb(208,213,36)" rx="2" ry="2" />
<text  x="130.92" y="479.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::operator= (55 samples, 0.06%)</title><rect x="737.1" y="597" width="0.7" height="15.0" fill="rgb(239,200,30)" rx="2" ry="2" />
<text  x="740.12" y="607.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (45 samples, 0.05%)</title><rect x="1096.9" y="613" width="0.5" height="15.0" fill="rgb(246,140,53)" rx="2" ry="2" />
<text  x="1099.86" y="623.5" ></text>
</g>
<g >
<title>CSizeComputer::operator&lt;&lt; &lt;unsigned int&gt; (9 samples, 0.01%)</title><rect x="1042.6" y="581" width="0.1" height="15.0" fill="rgb(228,215,3)" rx="2" ry="2" />
<text  x="1045.62" y="591.5" ></text>
</g>
<g >
<title>__bam_iitem (43 samples, 0.05%)</title><rect x="71.3" y="501" width="0.6" height="15.0" fill="rgb(211,84,22)" rx="2" ry="2" />
<text  x="74.33" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;CTransaction&gt;::construct&lt;CTransaction const, deserialize_type const&amp;, CDataStream&amp;&gt; (7,342 samples, 7.97%)</title><rect x="429.4" y="485" width="94.0" height="15.0" fill="rgb(228,13,19)" rx="2" ry="2" />
<text  x="432.38" y="495.5" >__gnu_cxx::..</text>
</g>
<g >
<title>CWallet::postInitProcess (215 samples, 0.23%)</title><rect x="51.0" y="693" width="2.8" height="15.0" fill="rgb(209,136,34)" rx="2" ry="2" />
<text  x="54.05" y="703.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;CWalletTx&amp;&gt; (14,070 samples, 15.27%)</title><rect x="378.9" y="677" width="180.2" height="15.0" fill="rgb(220,156,7)" rx="2" ry="2" />
<text  x="381.95" y="687.5" >CDataStream::operator&gt;&gt;..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::destroy&lt;std::pair&lt;void*, CLockLocation&gt; &gt; (14 samples, 0.02%)</title><rect x="850.9" y="581" width="0.1" height="15.0" fill="rgb(213,65,45)" rx="2" ry="2" />
<text  x="853.87" y="591.5" ></text>
</g>
<g >
<title>__bam_cmp (35 samples, 0.04%)</title><rect x="103.5" y="405" width="0.4" height="15.0" fill="rgb(216,7,34)" rx="2" ry="2" />
<text  x="106.48" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::~_Vector_base (14 samples, 0.02%)</title><rect x="1164.0" y="757" width="0.2" height="15.0" fill="rgb(217,7,29)" rx="2" ry="2" />
<text  x="1166.99" y="767.5" ></text>
</g>
<g >
<title>__dbc_cleanup (15 samples, 0.02%)</title><rect x="71.9" y="517" width="0.2" height="15.0" fill="rgb(231,92,10)" rx="2" ry="2" />
<text  x="74.88" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (40 samples, 0.04%)</title><rect x="962.1" y="597" width="0.5" height="15.0" fill="rgb(249,86,28)" rx="2" ry="2" />
<text  x="965.13" y="607.5" ></text>
</g>
<g >
<title>std::operator== (8 samples, 0.01%)</title><rect x="1046.0" y="613" width="0.1" height="15.0" fill="rgb(234,98,39)" rx="2" ry="2" />
<text  x="1049.04" y="623.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::empty (9 samples, 0.01%)</title><rect x="1040.5" y="341" width="0.2" height="15.0" fill="rgb(234,208,38)" rx="2" ry="2" />
<text  x="1043.55" y="351.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;unsigned char const*, unsigned char*, unsigned char&gt; (43 samples, 0.05%)</title><rect x="1100.4" y="629" width="0.5" height="15.0" fill="rgb(213,22,28)" rx="2" ry="2" />
<text  x="1103.38" y="639.5" ></text>
</g>
<g >
<title>sha256_shani::Transform (299 samples, 0.32%)</title><rect x="1128.3" y="661" width="3.8" height="15.0" fill="rgb(246,102,8)" rx="2" ry="2" />
<text  x="1131.29" y="671.5" ></text>
</g>
<g >
<title>std::recursive_mutex::unlock (8 samples, 0.01%)</title><rect x="1177.4" y="741" width="0.1" height="15.0" fill="rgb(253,99,35)" rx="2" ry="2" />
<text  x="1180.40" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (11 samples, 0.01%)</title><rect x="545.4" y="517" width="0.2" height="15.0" fill="rgb(243,85,13)" rx="2" ry="2" />
<text  x="548.42" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::clear (8 samples, 0.01%)</title><rect x="564.9" y="629" width="0.1" height="15.0" fill="rgb(227,46,17)" rx="2" ry="2" />
<text  x="567.88" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::~vector (85 samples, 0.09%)</title><rect x="433.0" y="341" width="1.1" height="15.0" fill="rgb(250,222,23)" rx="2" ry="2" />
<text  x="436.04" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::emplace&lt;char*, unsigned long&amp;&gt; (263 samples, 0.29%)</title><rect x="811.2" y="357" width="3.4" height="15.0" fill="rgb(218,98,2)" rx="2" ry="2" />
<text  x="814.24" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::_M_valptr (11 samples, 0.01%)</title><rect x="869.7" y="597" width="0.2" height="15.0" fill="rgb(246,0,49)" rx="2" ry="2" />
<text  x="872.72" y="607.5" ></text>
</g>
<g >
<title>ReadCompactSize&lt;CDataStream&gt; (26 samples, 0.03%)</title><rect x="457.3" y="357" width="0.4" height="15.0" fill="rgb(225,20,33)" rx="2" ry="2" />
<text  x="460.33" y="367.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CSizeComputer, prevector&lt;28u, unsigned char, unsigned int, int&gt; &gt; (85 samples, 0.09%)</title><rect x="1036.1" y="405" width="1.1" height="15.0" fill="rgb(208,123,19)" rx="2" ry="2" />
<text  x="1039.13" y="415.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, long&amp;&gt; (86 samples, 0.09%)</title><rect x="450.7" y="309" width="1.1" height="15.0" fill="rgb(254,24,13)" rx="2" ry="2" />
<text  x="453.69" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;CTxIn const*, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt; (9 samples, 0.01%)</title><rect x="1038.1" y="533" width="0.1" height="15.0" fill="rgb(244,56,47)" rx="2" ry="2" />
<text  x="1041.08" y="543.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, uint256&gt; (19 samples, 0.02%)</title><rect x="43.4" y="517" width="0.2" height="15.0" fill="rgb(206,222,15)" rx="2" ry="2" />
<text  x="46.37" y="527.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, CChainState*, std::default_delete&lt;CChainState&gt; &gt; (39 samples, 0.04%)</title><rect x="959.4" y="581" width="0.5" height="15.0" fill="rgb(249,8,25)" rx="2" ry="2" />
<text  x="962.40" y="591.5" ></text>
</g>
<g >
<title>__bswap_32 (17 samples, 0.02%)</title><rect x="1058.0" y="613" width="0.2" height="15.0" fill="rgb(238,184,40)" rx="2" ry="2" />
<text  x="1061.00" y="623.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (11 samples, 0.01%)</title><rect x="124.9" y="517" width="0.2" height="15.0" fill="rgb(220,0,15)" rx="2" ry="2" />
<text  x="127.91" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;secure_allocator&lt;unsigned char&gt; &gt;::allocate (556 samples, 0.60%)</title><rect x="565.4" y="581" width="7.2" height="15.0" fill="rgb(241,157,8)" rx="2" ry="2" />
<text  x="568.43" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;secure_allocator&lt;unsigned char&gt; &gt;::deallocate (1,174 samples, 1.27%)</title><rect x="1080.3" y="629" width="15.0" height="15.0" fill="rgb(233,97,19)" rx="2" ry="2" />
<text  x="1083.27" y="639.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (9 samples, 0.01%)</title><rect x="91.3" y="437" width="0.1" height="15.0" fill="rgb(242,43,25)" rx="2" ry="2" />
<text  x="94.31" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;::_Rb_tree_const_iterator (13 samples, 0.01%)</title><rect x="846.5" y="533" width="0.1" height="15.0" fill="rgb(241,88,51)" rx="2" ry="2" />
<text  x="849.48" y="543.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_const_iterator&lt;COutPoint&gt;, bool&gt;::pair&lt;std::_Rb_tree_iterator&lt;COutPoint&gt;&amp;, bool&amp;, true&gt; (8 samples, 0.01%)</title><rect x="1176.3" y="757" width="0.1" height="15.0" fill="rgb(213,92,47)" rx="2" ry="2" />
<text  x="1179.26" y="767.5" ></text>
</g>
<g >
<title>CHash256::Write (20 samples, 0.02%)</title><rect x="496.9" y="53" width="0.3" height="15.0" fill="rgb(226,142,14)" rx="2" ry="2" />
<text  x="499.95" y="63.5" ></text>
</g>
<g >
<title>WriteCompactSize&lt;CHashWriter&gt; (26 samples, 0.03%)</title><rect x="491.7" y="101" width="0.3" height="15.0" fill="rgb(233,203,48)" rx="2" ry="2" />
<text  x="494.69" y="111.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (23 samples, 0.02%)</title><rect x="61.4" y="485" width="0.2" height="15.0" fill="rgb(213,170,25)" rx="2" ry="2" />
<text  x="64.35" y="495.5" ></text>
</g>
<g >
<title>WriteCompactSize&lt;CHashWriter&gt; (12 samples, 0.01%)</title><rect x="506.9" y="101" width="0.1" height="15.0" fill="rgb(230,4,13)" rx="2" ry="2" />
<text  x="509.87" y="111.5" ></text>
</g>
<g >
<title>__db_vrfy_putpageinfo (61 samples, 0.07%)</title><rect x="95.5" y="485" width="0.8" height="15.0" fill="rgb(245,84,44)" rx="2" ry="2" />
<text  x="98.47" y="495.5" ></text>
</g>
<g >
<title>CHash160::Write (11 samples, 0.01%)</title><rect x="715.6" y="597" width="0.1" height="15.0" fill="rgb(211,196,9)" rx="2" ry="2" />
<text  x="718.59" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::resize (1,796 samples, 1.95%)</title><rect x="797.8" y="485" width="23.0" height="15.0" fill="rgb(212,53,7)" rx="2" ry="2" />
<text  x="800.81" y="495.5" >s..</text>
</g>
<g >
<title>_dl_relocate_object (13 samples, 0.01%)</title><rect x="1189.8" y="693" width="0.2" height="15.0" fill="rgb(208,94,47)" rx="2" ry="2" />
<text  x="1192.83" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_get_insert_equal_pos (23 samples, 0.02%)</title><rect x="629.7" y="517" width="0.3" height="15.0" fill="rgb(239,175,0)" rx="2" ry="2" />
<text  x="632.74" y="527.5" ></text>
</g>
<g >
<title>Hash160&lt;unsigned char const*&gt; (161 samples, 0.17%)</title><rect x="1124.1" y="645" width="2.1" height="15.0" fill="rgb(218,147,16)" rx="2" ry="2" />
<text  x="1127.12" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (24 samples, 0.03%)</title><rect x="869.4" y="597" width="0.3" height="15.0" fill="rgb(212,66,41)" rx="2" ry="2" />
<text  x="872.41" y="607.5" ></text>
</g>
<g >
<title>std::pair&lt;CScriptID const, CScript&gt;::pair&lt;CScriptID const&amp;&gt; (34 samples, 0.04%)</title><rect x="772.6" y="517" width="0.5" height="15.0" fill="rgb(248,78,14)" rx="2" ry="2" />
<text  x="775.65" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::pair&lt;char* const&amp;&gt; (21 samples, 0.02%)</title><rect x="1087.8" y="485" width="0.2" height="15.0" fill="rgb(219,186,38)" rx="2" ry="2" />
<text  x="1090.75" y="495.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (10 samples, 0.01%)</title><rect x="947.3" y="485" width="0.1" height="15.0" fill="rgb(232,20,16)" rx="2" ry="2" />
<text  x="950.30" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (60 samples, 0.07%)</title><rect x="632.4" y="517" width="0.7" height="15.0" fill="rgb(230,223,33)" rx="2" ry="2" />
<text  x="635.36" y="527.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;CKeyID&gt; (41 samples, 0.04%)</title><rect x="825.8" y="613" width="0.6" height="15.0" fill="rgb(236,23,14)" rx="2" ry="2" />
<text  x="828.84" y="623.5" ></text>
</g>
<g >
<title>__lock_get (61 samples, 0.07%)</title><rect x="75.8" y="405" width="0.8" height="15.0" fill="rgb(224,179,52)" rx="2" ry="2" />
<text  x="78.81" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_S_key (11 samples, 0.01%)</title><rect x="1157.2" y="757" width="0.1" height="15.0" fill="rgb(215,156,0)" rx="2" ry="2" />
<text  x="1160.16" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;LockedPool::LockedPageArena, std::allocator&lt;LockedPool::LockedPageArena&gt; &gt;::end (10 samples, 0.01%)</title><rect x="1094.2" y="581" width="0.1" height="15.0" fill="rgb(241,228,31)" rx="2" ry="2" />
<text  x="1097.19" y="591.5" ></text>
</g>
<g >
<title>__db_cursor_int (26 samples, 0.03%)</title><rect x="102.5" y="453" width="0.3" height="15.0" fill="rgb(215,171,19)" rx="2" ry="2" />
<text  x="105.49" y="463.5" ></text>
</g>
<g >
<title>CSizeComputer::operator&lt;&lt; &lt;CTransaction&gt; (1,020 samples, 1.11%)</title><rect x="1029.7" y="645" width="13.0" height="15.0" fill="rgb(251,62,30)" rx="2" ry="2" />
<text  x="1032.67" y="655.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (26 samples, 0.03%)</title><rect x="106.0" y="453" width="0.3" height="15.0" fill="rgb(241,49,37)" rx="2" ry="2" />
<text  x="109.00" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;interfaces::Chain::Lock&gt;::operator (175 samples, 0.19%)</title><rect x="1019.6" y="645" width="2.3" height="15.0" fill="rgb(212,69,28)" rx="2" ry="2" />
<text  x="1022.62" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;::_M_valptr (42 samples, 0.05%)</title><rect x="845.3" y="501" width="0.6" height="15.0" fill="rgb(239,227,19)" rx="2" ry="2" />
<text  x="848.35" y="511.5" ></text>
</g>
<g >
<title>ChainActive (109 samples, 0.12%)</title><rect x="958.6" y="645" width="1.4" height="15.0" fill="rgb(233,175,25)" rx="2" ry="2" />
<text  x="961.64" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::begin (11 samples, 0.01%)</title><rect x="1038.2" y="533" width="0.1" height="15.0" fill="rgb(222,1,20)" rx="2" ry="2" />
<text  x="1041.19" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt;::construct&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;char*&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (36 samples, 0.04%)</title><rect x="635.5" y="485" width="0.4" height="15.0" fill="rgb(207,114,24)" rx="2" ry="2" />
<text  x="638.47" y="495.5" ></text>
</g>
<g >
<title>CSHA256::Write (8 samples, 0.01%)</title><rect x="488.4" y="69" width="0.1" height="15.0" fill="rgb(220,181,33)" rx="2" ry="2" />
<text  x="491.44" y="79.5" ></text>
</g>
<g >
<title>__bam_get_root (28 samples, 0.03%)</title><rect x="75.4" y="421" width="0.3" height="15.0" fill="rgb(254,117,20)" rx="2" ry="2" />
<text  x="78.38" y="431.5" ></text>
</g>
<g >
<title>leveldb::InternalKeyComparator::Compare (8 samples, 0.01%)</title><rect x="42.1" y="581" width="0.1" height="15.0" fill="rgb(231,75,53)" rx="2" ry="2" />
<text  x="45.05" y="591.5" ></text>
</g>
<g >
<title>std::pair&lt;void*, void*&gt;::pair&lt;void*&amp;, true&gt; (10 samples, 0.01%)</title><rect x="841.5" y="565" width="0.1" height="15.0" fill="rgb(244,59,45)" rx="2" ry="2" />
<text  x="844.51" y="575.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (12 samples, 0.01%)</title><rect x="639.3" y="565" width="0.2" height="15.0" fill="rgb(237,172,29)" rx="2" ry="2" />
<text  x="642.30" y="575.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CSizeComputer, COutPoint&gt; (135 samples, 0.15%)</title><rect x="1033.8" y="469" width="1.7" height="15.0" fill="rgb(210,48,26)" rx="2" ry="2" />
<text  x="1036.81" y="479.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (83 samples, 0.09%)</title><rect x="314.2" y="549" width="1.1" height="15.0" fill="rgb(215,55,36)" rx="2" ry="2" />
<text  x="317.23" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::~vector (10 samples, 0.01%)</title><rect x="527.8" y="453" width="0.2" height="15.0" fill="rgb(226,120,32)" rx="2" ry="2" />
<text  x="530.85" y="463.5" ></text>
</g>
<g >
<title>ShiftMessageB (15 samples, 0.02%)</title><rect x="1114.2" y="373" width="0.2" height="15.0" fill="rgb(238,107,13)" rx="2" ry="2" />
<text  x="1117.16" y="383.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;void*, void*&gt; &gt;::operator (15 samples, 0.02%)</title><rect x="848.3" y="549" width="0.1" height="15.0" fill="rgb(206,216,15)" rx="2" ry="2" />
<text  x="851.26" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::operator (10 samples, 0.01%)</title><rect x="869.0" y="613" width="0.2" height="15.0" fill="rgb(252,86,22)" rx="2" ry="2" />
<text  x="872.04" y="623.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter&gt; (28 samples, 0.03%)</title><rect x="489.0" y="133" width="0.3" height="15.0" fill="rgb(228,53,8)" rx="2" ry="2" />
<text  x="491.98" y="143.5" ></text>
</g>
<g >
<title>__lock_get (38 samples, 0.04%)</title><rect x="98.3" y="389" width="0.4" height="15.0" fill="rgb(254,184,4)" rx="2" ry="2" />
<text  x="101.26" y="399.5" ></text>
</g>
<g >
<title>boost::aligned_storage&lt;48ul, 4ul&gt;::aligned_storage (8 samples, 0.01%)</title><rect x="769.9" y="597" width="0.1" height="15.0" fill="rgb(206,122,34)" rx="2" ry="2" />
<text  x="772.89" y="607.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (12 samples, 0.01%)</title><rect x="681.4" y="581" width="0.2" height="15.0" fill="rgb(217,189,5)" rx="2" ry="2" />
<text  x="684.44" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::end (13 samples, 0.01%)</title><rect x="974.5" y="517" width="0.1" height="15.0" fill="rgb(250,31,42)" rx="2" ry="2" />
<text  x="977.48" y="527.5" ></text>
</g>
<g >
<title>__os_malloc (9 samples, 0.01%)</title><rect x="1107.5" y="581" width="0.1" height="15.0" fill="rgb(238,199,53)" rx="2" ry="2" />
<text  x="1110.46" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, CKeyID const&amp;&gt;::_Tuple_impl (9 samples, 0.01%)</title><rect x="865.7" y="629" width="0.2" height="15.0" fill="rgb(216,209,40)" rx="2" ry="2" />
<text  x="868.75" y="639.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node_base*&amp;, std::_Rb_tree_node_base*&amp;, true&gt; (10 samples, 0.01%)</title><rect x="824.2" y="581" width="0.2" height="15.0" fill="rgb(220,23,14)" rx="2" ry="2" />
<text  x="827.23" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt;::construct&lt;std::pair&lt;void*, CLockLocation&gt;, std::pair&lt;void*, CLockLocation&gt; &gt; (8 samples, 0.01%)</title><rect x="794.1" y="517" width="0.1" height="15.0" fill="rgb(243,124,24)" rx="2" ry="2" />
<text  x="797.07" y="527.5" ></text>
</g>
<g >
<title>[unknown] (37 samples, 0.04%)</title><rect x="132.1" y="373" width="0.5" height="15.0" fill="rgb(226,195,14)" rx="2" ry="2" />
<text  x="135.09" y="383.5" ></text>
</g>
<g >
<title>do_lookup_x (9 samples, 0.01%)</title><rect x="1189.9" y="661" width="0.1" height="15.0" fill="rgb(241,207,17)" rx="2" ry="2" />
<text  x="1192.88" y="671.5" ></text>
</g>
<g >
<title>std::tuple&lt;interfaces::(anonymous namespace)::LockImpl*, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt;::tuple&lt;interfaces::(anonymous namespace)::LockImpl*, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt;, true&gt; (31 samples, 0.03%)</title><rect x="953.1" y="581" width="0.4" height="15.0" fill="rgb(236,15,0)" rx="2" ry="2" />
<text  x="956.07" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::max_size (12 samples, 0.01%)</title><rect x="364.7" y="421" width="0.1" height="15.0" fill="rgb(227,137,16)" rx="2" ry="2" />
<text  x="367.65" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;char* const, unsigned long&gt; &gt;::_M_valptr (9 samples, 0.01%)</title><rect x="1166.7" y="757" width="0.2" height="15.0" fill="rgb(226,225,0)" rx="2" ry="2" />
<text  x="1169.74" y="767.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (15 samples, 0.02%)</title><rect x="906.0" y="517" width="0.2" height="15.0" fill="rgb(206,13,27)" rx="2" ry="2" />
<text  x="909.01" y="527.5" ></text>
</g>
<g >
<title>__memp_fget (57 samples, 0.06%)</title><rect x="67.0" y="469" width="0.7" height="15.0" fill="rgb(253,50,28)" rx="2" ry="2" />
<text  x="69.96" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;secure_allocator&lt;unsigned char&gt; &gt;::construct&lt;unsigned char&gt; (158 samples, 0.17%)</title><rect x="817.8" y="437" width="2.0" height="15.0" fill="rgb(240,224,49)" rx="2" ry="2" />
<text  x="820.76" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::_M_valptr (76 samples, 0.08%)</title><rect x="908.2" y="549" width="1.0" height="15.0" fill="rgb(238,100,9)" rx="2" ry="2" />
<text  x="911.19" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::destroy&lt;char&gt; (175 samples, 0.19%)</title><rect x="373.8" y="565" width="2.2" height="15.0" fill="rgb(242,160,42)" rx="2" ry="2" />
<text  x="376.78" y="575.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, COutPoint&amp;&gt; (192 samples, 0.21%)</title><rect x="435.5" y="277" width="2.4" height="15.0" fill="rgb(239,21,19)" rx="2" ry="2" />
<text  x="438.47" y="287.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (44 samples, 0.05%)</title><rect x="81.6" y="453" width="0.5" height="15.0" fill="rgb(212,28,42)" rx="2" ry="2" />
<text  x="84.55" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;secure_allocator&lt;unsigned char&gt; &gt;::_S_construct&lt;unsigned char&gt; (120 samples, 0.13%)</title><rect x="818.3" y="421" width="1.5" height="15.0" fill="rgb(207,3,21)" rx="2" ry="2" />
<text  x="821.25" y="431.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Serialize&lt;CHashWriter&gt; (18 samples, 0.02%)</title><rect x="505.3" y="117" width="0.2" height="15.0" fill="rgb(218,90,44)" rx="2" ry="2" />
<text  x="508.28" y="127.5" ></text>
</g>
<g >
<title>ReadCompactSize&lt;CDataStream&gt; (31 samples, 0.03%)</title><rect x="439.8" y="165" width="0.4" height="15.0" fill="rgb(250,26,54)" rx="2" ry="2" />
<text  x="442.78" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;::_M_const_cast (9 samples, 0.01%)</title><rect x="775.0" y="565" width="0.1" height="15.0" fill="rgb(239,9,44)" rx="2" ry="2" />
<text  x="777.96" y="575.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, unsigned long, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt; &gt;::find (54 samples, 0.06%)</title><rect x="637.9" y="549" width="0.6" height="15.0" fill="rgb(218,100,11)" rx="2" ry="2" />
<text  x="640.86" y="559.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt;, secure_allocator&lt;unsigned char&gt; &gt; (11 samples, 0.01%)</title><rect x="693.1" y="597" width="0.1" height="15.0" fill="rgb(215,204,16)" rx="2" ry="2" />
<text  x="696.08" y="607.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, uint256&gt; (88 samples, 0.10%)</title><rect x="487.5" y="165" width="1.2" height="15.0" fill="rgb(238,141,28)" rx="2" ry="2" />
<text  x="490.53" y="175.5" ></text>
</g>
<g >
<title>CSHA256::Write (57 samples, 0.06%)</title><rect x="514.7" y="229" width="0.8" height="15.0" fill="rgb(209,111,26)" rx="2" ry="2" />
<text  x="517.72" y="239.5" ></text>
</g>
<g >
<title>CTransaction::CTransaction (96 samples, 0.10%)</title><rect x="1061.5" y="533" width="1.2" height="15.0" fill="rgb(205,146,18)" rx="2" ry="2" />
<text  x="1064.51" y="543.5" ></text>
</g>
<g >
<title>LockAssertion::LockAssertion&lt;AnnotatedMixin&lt;std::recursive_mutex&gt; &gt; (41 samples, 0.04%)</title><rect x="960.0" y="645" width="0.6" height="15.0" fill="rgb(222,209,12)" rx="2" ry="2" />
<text  x="963.03" y="655.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocator (13 samples, 0.01%)</title><rect x="1024.4" y="613" width="0.2" height="15.0" fill="rgb(244,198,32)" rx="2" ry="2" />
<text  x="1027.41" y="623.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (8 samples, 0.01%)</title><rect x="98.6" y="357" width="0.1" height="15.0" fill="rgb(219,221,43)" rx="2" ry="2" />
<text  x="101.63" y="367.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.02%)</title><rect x="160.9" y="373" width="0.2" height="15.0" fill="rgb(208,16,14)" rx="2" ry="2" />
<text  x="163.91" y="383.5" ></text>
</g>
<g >
<title>__bam_vrfy_structure (4,079 samples, 4.43%)</title><rect x="72.1" y="581" width="52.3" height="15.0" fill="rgb(239,103,50)" rx="2" ry="2" />
<text  x="75.12" y="591.5" >__bam..</text>
</g>
<g >
<title>secure_allocator&lt;unsigned char&gt;::deallocate (1,170 samples, 1.27%)</title><rect x="1080.3" y="613" width="15.0" height="15.0" fill="rgb(250,212,12)" rx="2" ry="2" />
<text  x="1083.32" y="623.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt; &gt;::end (19 samples, 0.02%)</title><rect x="1084.1" y="565" width="0.2" height="15.0" fill="rgb(209,145,54)" rx="2" ry="2" />
<text  x="1087.08" y="575.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, bool&amp;&gt; (311 samples, 0.34%)</title><rect x="365.7" y="597" width="4.0" height="15.0" fill="rgb(242,74,16)" rx="2" ry="2" />
<text  x="368.68" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (32 samples, 0.03%)</title><rect x="682.1" y="533" width="0.4" height="15.0" fill="rgb(244,150,45)" rx="2" ry="2" />
<text  x="685.08" y="543.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (495 samples, 0.54%)</title><rect x="513.5" y="325" width="6.3" height="15.0" fill="rgb(251,194,52)" rx="2" ry="2" />
<text  x="516.45" y="335.5" ></text>
</g>
<g >
<title>CVarInt&lt; (44 samples, 0.05%)</title><rect x="40.2" y="533" width="0.5" height="15.0" fill="rgb(247,225,0)" rx="2" ry="2" />
<text  x="43.19" y="543.5" ></text>
</g>
<g >
<title>secp256k1_ecmult_odd_multiples_table_storage_var (32 samples, 0.03%)</title><rect x="1149.5" y="629" width="0.4" height="15.0" fill="rgb(211,8,51)" rx="2" ry="2" />
<text  x="1152.48" y="639.5" ></text>
</g>
<g >
<title>std::allocator&lt;CTransaction&gt;::~allocator (8 samples, 0.01%)</title><rect x="1061.0" y="565" width="0.1" height="15.0" fill="rgb(219,113,10)" rx="2" ry="2" />
<text  x="1063.97" y="575.5" ></text>
</g>
<g >
<title>__libc_pread (62 samples, 0.07%)</title><rect x="89.7" y="357" width="0.8" height="15.0" fill="rgb(238,17,47)" rx="2" ry="2" />
<text  x="92.71" y="367.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, unsigned char*, unsigned char*&gt; (22 samples, 0.02%)</title><rect x="1101.3" y="549" width="0.3" height="15.0" fill="rgb(252,105,19)" rx="2" ry="2" />
<text  x="1104.31" y="559.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::_Rb_tree_iterator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::operator= (8 samples, 0.01%)</title><rect x="930.6" y="629" width="0.1" height="15.0" fill="rgb(253,16,14)" rx="2" ry="2" />
<text  x="933.60" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_emplace_equal&lt;unsigned long const&amp;, char*&amp;&gt; (193 samples, 0.21%)</title><rect x="800.6" y="357" width="2.4" height="15.0" fill="rgb(254,15,30)" rx="2" ry="2" />
<text  x="803.55" y="367.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (20 samples, 0.02%)</title><rect x="619.9" y="565" width="0.3" height="15.0" fill="rgb(209,7,30)" rx="2" ry="2" />
<text  x="622.90" y="575.5" ></text>
</g>
<g >
<title>CWallet::AddKeyPubKeyInner (12,447 samples, 13.51%)</title><rect x="691.9" y="661" width="159.4" height="15.0" fill="rgb(227,224,14)" rx="2" ry="2" />
<text  x="694.94" y="671.5" >CWallet::AddKeyPubKe..</text>
</g>
<g >
<title>std::forward&lt;std::_Rb_tree_iterator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt; (14 samples, 0.02%)</title><rect x="903.1" y="581" width="0.2" height="15.0" fill="rgb(252,196,50)" rx="2" ry="2" />
<text  x="906.08" y="591.5" ></text>
</g>
<g >
<title>base_blob&lt;160u&gt;::Compare (9 samples, 0.01%)</title><rect x="824.1" y="549" width="0.1" height="15.0" fill="rgb(237,71,4)" rx="2" ry="2" />
<text  x="827.12" y="559.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::resize (26 samples, 0.03%)</title><rect x="759.5" y="437" width="0.3" height="15.0" fill="rgb(245,197,24)" rx="2" ry="2" />
<text  x="762.51" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;void*, CLockLocation&gt;::~pair (17 samples, 0.02%)</title><rect x="848.6" y="581" width="0.2" height="15.0" fill="rgb(228,64,24)" rx="2" ry="2" />
<text  x="851.59" y="591.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CSizeComputer, long&gt; (45 samples, 0.05%)</title><rect x="1041.1" y="469" width="0.5" height="15.0" fill="rgb(227,84,1)" rx="2" ry="2" />
<text  x="1044.06" y="479.5" ></text>
</g>
<g >
<title>CRIPEMD160::Write (1,305 samples, 1.42%)</title><rect x="641.5" y="613" width="16.7" height="15.0" fill="rgb(236,60,22)" rx="2" ry="2" />
<text  x="644.47" y="623.5" ></text>
</g>
<g >
<title>__dbc_cleanup (10 samples, 0.01%)</title><rect x="115.3" y="453" width="0.1" height="15.0" fill="rgb(229,6,26)" rx="2" ry="2" />
<text  x="118.32" y="463.5" ></text>
</g>
<g >
<title>pop_lock (36 samples, 0.04%)</title><rect x="686.8" y="613" width="0.4" height="15.0" fill="rgb(226,29,32)" rx="2" ry="2" />
<text  x="689.78" y="623.5" ></text>
</g>
<g >
<title>BerkeleyBatch::SafeDbt::~SafeDbt (199 samples, 0.22%)</title><rect x="171.8" y="677" width="2.5" height="15.0" fill="rgb(234,105,18)" rx="2" ry="2" />
<text  x="174.76" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (12 samples, 0.01%)</title><rect x="1063.1" y="533" width="0.2" height="15.0" fill="rgb(209,195,39)" rx="2" ry="2" />
<text  x="1066.13" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (58 samples, 0.06%)</title><rect x="35.3" y="629" width="0.7" height="15.0" fill="rgb(229,63,6)" rx="2" ry="2" />
<text  x="38.25" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_M_insert_node (61 samples, 0.07%)</title><rect x="775.9" y="581" width="0.8" height="15.0" fill="rgb(243,122,18)" rx="2" ry="2" />
<text  x="778.89" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (32 samples, 0.03%)</title><rect x="766.5" y="437" width="0.5" height="15.0" fill="rgb(247,90,23)" rx="2" ry="2" />
<text  x="769.55" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~_Vector_base (40 samples, 0.04%)</title><rect x="475.8" y="357" width="0.5" height="15.0" fill="rgb(227,89,25)" rx="2" ry="2" />
<text  x="478.75" y="367.5" ></text>
</g>
<g >
<title>CChainState::RewindBlockIndex (20 samples, 0.02%)</title><rect x="32.3" y="693" width="0.3" height="15.0" fill="rgb(242,59,29)" rx="2" ry="2" />
<text  x="35.35" y="703.5" ></text>
</g>
<g >
<title>CDiskBlockIndex::GetBlockHash (86 samples, 0.09%)</title><rect x="42.6" y="661" width="1.1" height="15.0" fill="rgb(254,227,32)" rx="2" ry="2" />
<text  x="45.58" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;COutPoint&gt;::_Rb_tree_const_iterator (12 samples, 0.01%)</title><rect x="933.0" y="597" width="0.1" height="15.0" fill="rgb(226,128,45)" rx="2" ry="2" />
<text  x="935.98" y="607.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (21 samples, 0.02%)</title><rect x="98.8" y="373" width="0.3" height="15.0" fill="rgb(253,41,26)" rx="2" ry="2" />
<text  x="101.84" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::__detail::_Select1st, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h2 (13 samples, 0.01%)</title><rect x="962.3" y="565" width="0.1" height="15.0" fill="rgb(228,96,45)" rx="2" ry="2" />
<text  x="965.26" y="575.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (18 samples, 0.02%)</title><rect x="155.0" y="469" width="0.3" height="15.0" fill="rgb(227,16,6)" rx="2" ry="2" />
<text  x="158.03" y="479.5" ></text>
</g>
<g >
<title>SerializeHash&lt;CTransaction&gt; (271 samples, 0.29%)</title><rect x="1107.7" y="469" width="3.4" height="15.0" fill="rgb(223,227,37)" rx="2" ry="2" />
<text  x="1110.65" y="479.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.02%)</title><rect x="523.8" y="469" width="0.3" height="15.0" fill="rgb(225,191,20)" rx="2" ry="2" />
<text  x="526.80" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_begin (10 samples, 0.01%)</title><rect x="804.6" y="341" width="0.1" height="15.0" fill="rgb(229,208,46)" rx="2" ry="2" />
<text  x="807.59" y="351.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, CScript&amp;&gt; (143 samples, 0.16%)</title><rect x="448.9" y="293" width="1.8" height="15.0" fill="rgb(227,60,3)" rx="2" ry="2" />
<text  x="451.86" y="303.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;unsigned char&gt; (31 samples, 0.03%)</title><rect x="519.8" y="341" width="0.4" height="15.0" fill="rgb(231,27,5)" rx="2" ry="2" />
<text  x="522.79" y="351.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, 28u, unsigned char&gt; (271 samples, 0.29%)</title><rect x="1137.3" y="245" width="3.5" height="15.0" fill="rgb(254,175,17)" rx="2" ry="2" />
<text  x="1140.31" y="255.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;CTransaction const,  (550 samples, 0.60%)</title><rect x="1137.3" y="677" width="7.1" height="15.0" fill="rgb(250,10,37)" rx="2" ry="2" />
<text  x="1140.31" y="687.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.01%)</title><rect x="454.6" y="261" width="0.1" height="15.0" fill="rgb(240,104,9)" rx="2" ry="2" />
<text  x="457.62" y="271.5" ></text>
</g>
<g >
<title>__lock_ohash (22 samples, 0.02%)</title><rect x="315.3" y="549" width="0.3" height="15.0" fill="rgb(241,187,20)" rx="2" ry="2" />
<text  x="318.30" y="559.5" ></text>
</g>
<g >
<title>base_uint&lt;256u&gt;::CompareTo (42 samples, 0.05%)</title><rect x="47.7" y="597" width="0.6" height="15.0" fill="rgb(205,23,13)" rx="2" ry="2" />
<text  x="50.74" y="607.5" ></text>
</g>
<g >
<title>CHashWriter::write (10 samples, 0.01%)</title><rect x="498.8" y="261" width="0.1" height="15.0" fill="rgb(247,46,5)" rx="2" ry="2" />
<text  x="501.79" y="271.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;void*, void*&gt; &gt;::operator (84 samples, 0.09%)</title><rect x="846.6" y="533" width="1.1" height="15.0" fill="rgb(218,90,16)" rx="2" ry="2" />
<text  x="849.64" y="543.5" ></text>
</g>
<g >
<title>std::swap&lt;unsigned int&gt; (11 samples, 0.01%)</title><rect x="737.7" y="565" width="0.1" height="15.0" fill="rgb(231,182,37)" rx="2" ry="2" />
<text  x="740.68" y="575.5" ></text>
</g>
<g >
<title>AssertLockHeldInternal (16 samples, 0.02%)</title><rect x="51.5" y="597" width="0.2" height="15.0" fill="rgb(225,192,51)" rx="2" ry="2" />
<text  x="54.47" y="607.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;bool&gt;::load (8 samples, 0.01%)</title><rect x="692.3" y="613" width="0.1" height="15.0" fill="rgb(252,183,54)" rx="2" ry="2" />
<text  x="695.34" y="623.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.02%)</title><rect x="123.6" y="357" width="0.2" height="15.0" fill="rgb(229,138,10)" rx="2" ry="2" />
<text  x="126.61" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_M_lower_bound (1,197 samples, 1.30%)</title><rect x="985.7" y="629" width="15.3" height="15.0" fill="rgb(239,190,8)" rx="2" ry="2" />
<text  x="988.71" y="639.5" ></text>
</g>
<g >
<title>CLockLocation::CLockLocation (65 samples, 0.07%)</title><rect x="679.7" y="597" width="0.8" height="15.0" fill="rgb(250,157,43)" rx="2" ry="2" />
<text  x="682.71" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (338 samples, 0.37%)</title><rect x="632.0" y="533" width="4.3" height="15.0" fill="rgb(231,42,45)" rx="2" ry="2" />
<text  x="635.00" y="543.5" ></text>
</g>
<g >
<title>Arena::addressInArena (11 samples, 0.01%)</title><rect x="1080.6" y="581" width="0.2" height="15.0" fill="rgb(231,36,15)" rx="2" ry="2" />
<text  x="1083.64" y="591.5" ></text>
</g>
<g >
<title>KeyOriginInfo::Unserialize&lt;CDataStream&gt; (215 samples, 0.23%)</title><rect x="362.8" y="565" width="2.8" height="15.0" fill="rgb(216,182,35)" rx="2" ry="2" />
<text  x="365.82" y="575.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (11 samples, 0.01%)</title><rect x="474.4" y="293" width="0.1" height="15.0" fill="rgb(251,58,54)" rx="2" ry="2" />
<text  x="477.39" y="303.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (9 samples, 0.01%)</title><rect x="944.3" y="517" width="0.1" height="15.0" fill="rgb(230,202,23)" rx="2" ry="2" />
<text  x="947.28" y="527.5" ></text>
</g>
<g >
<title>AssertLockHeldInternal (39 samples, 0.04%)</title><rect x="960.1" y="629" width="0.5" height="15.0" fill="rgb(206,142,9)" rx="2" ry="2" />
<text  x="963.06" y="639.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (35 samples, 0.04%)</title><rect x="133.4" y="517" width="0.4" height="15.0" fill="rgb(235,212,0)" rx="2" ry="2" />
<text  x="136.39" y="527.5" ></text>
</g>
<g >
<title>CDataStream::read (17 samples, 0.02%)</title><rect x="531.1" y="581" width="0.3" height="15.0" fill="rgb(243,175,53)" rx="2" ry="2" />
<text  x="534.14" y="591.5" ></text>
</g>
<g >
<title>__lock_get_internal (59 samples, 0.06%)</title><rect x="75.8" y="389" width="0.8" height="15.0" fill="rgb(227,113,4)" rx="2" ry="2" />
<text  x="78.84" y="399.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (246 samples, 0.27%)</title><rect x="152.6" y="533" width="3.1" height="15.0" fill="rgb(211,116,22)" rx="2" ry="2" />
<text  x="155.59" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_drop_node (19 samples, 0.02%)</title><rect x="566.6" y="469" width="0.3" height="15.0" fill="rgb(227,68,37)" rx="2" ry="2" />
<text  x="569.63" y="479.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (12 samples, 0.01%)</title><rect x="571.9" y="533" width="0.2" height="15.0" fill="rgb(216,90,50)" rx="2" ry="2" />
<text  x="574.93" y="543.5" ></text>
</g>
<g >
<title>CTxIn::~CTxIn (120 samples, 0.13%)</title><rect x="432.6" y="373" width="1.5" height="15.0" fill="rgb(251,30,18)" rx="2" ry="2" />
<text  x="435.59" y="383.5" ></text>
</g>
<g >
<title>__memp_bhfree (33 samples, 0.04%)</title><rect x="88.6" y="373" width="0.4" height="15.0" fill="rgb(207,106,6)" rx="2" ry="2" />
<text  x="91.59" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::base (14 samples, 0.02%)</title><rect x="516.5" y="229" width="0.1" height="15.0" fill="rgb(211,49,2)" rx="2" ry="2" />
<text  x="519.46" y="239.5" ></text>
</g>
<g >
<title>sha256_shani::Transform (403 samples, 0.44%)</title><rect x="1132.1" y="677" width="5.2" height="15.0" fill="rgb(228,212,2)" rx="2" ry="2" />
<text  x="1135.11" y="687.5" ></text>
</g>
<g >
<title>std::make_move_iterator&lt;unsigned char*&gt; (15 samples, 0.02%)</title><rect x="1101.8" y="613" width="0.2" height="15.0" fill="rgb(215,173,30)" rx="2" ry="2" />
<text  x="1104.80" y="623.5" ></text>
</g>
<g >
<title>SeedStartup (399 samples, 0.43%)</title><rect x="1184.5" y="645" width="5.1" height="15.0" fill="rgb(220,24,28)" rx="2" ry="2" />
<text  x="1187.48" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::construct&lt;std::pair&lt;CKeyID const, CKey&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;CKeyID&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (1,908 samples, 2.07%)</title><rect x="797.1" y="549" width="24.5" height="15.0" fill="rgb(254,204,45)" rx="2" ry="2" />
<text  x="800.14" y="559.5" >_..</text>
</g>
<g >
<title>CuckooCache::cache&lt;uint256, SignatureCacheHasher&gt;::setup_bytes (68 samples, 0.07%)</title><rect x="30.5" y="693" width="0.9" height="15.0" fill="rgb(226,69,29)" rx="2" ry="2" />
<text  x="33.53" y="703.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, long&gt; (31 samples, 0.03%)</title><rect x="512.1" y="229" width="0.4" height="15.0" fill="rgb(221,153,42)" rx="2" ry="2" />
<text  x="515.10" y="239.5" ></text>
</g>
<g >
<title>__db_vrfy_putpageinfo (316 samples, 0.34%)</title><rect x="68.1" y="565" width="4.0" height="15.0" fill="rgb(209,226,36)" rx="2" ry="2" />
<text  x="71.08" y="575.5" ></text>
</g>
<g >
<title>pop_lock (53 samples, 0.06%)</title><rect x="794.7" y="597" width="0.6" height="15.0" fill="rgb(246,17,8)" rx="2" ry="2" />
<text  x="797.66" y="607.5" ></text>
</g>
<g >
<title>boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt;::internal_apply_visitor&lt;boost::detail::variant::destroyer&gt; (56 samples, 0.06%)</title><rect x="770.9" y="581" width="0.7" height="15.0" fill="rgb(236,63,12)" rx="2" ry="2" />
<text  x="773.85" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned char&gt; &gt;::allocate (22 samples, 0.02%)</title><rect x="767.4" y="405" width="0.3" height="15.0" fill="rgb(211,215,23)" rx="2" ry="2" />
<text  x="770.38" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_S_max_size (147 samples, 0.16%)</title><rect x="297.5" y="581" width="1.9" height="15.0" fill="rgb(236,85,40)" rx="2" ry="2" />
<text  x="300.51" y="591.5" ></text>
</g>
<g >
<title>__db_tas_mutex_trylock (20 samples, 0.02%)</title><rect x="326.7" y="565" width="0.2" height="15.0" fill="rgb(222,27,46)" rx="2" ry="2" />
<text  x="329.66" y="575.5" ></text>
</g>
<g >
<title>interfaces::(anonymous namespace)::LockImpl::getHeight (28 samples, 0.03%)</title><rect x="53.4" y="629" width="0.4" height="15.0" fill="rgb(253,77,48)" rx="2" ry="2" />
<text  x="56.44" y="639.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Serialize&lt;CSizeComputer&gt; (12 samples, 0.01%)</title><rect x="1034.7" y="357" width="0.2" height="15.0" fill="rgb(237,185,41)" rx="2" ry="2" />
<text  x="1037.71" y="367.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (1,408 samples, 1.53%)</title><rect x="408.6" y="613" width="18.1" height="15.0" fill="rgb(213,205,11)" rx="2" ry="2" />
<text  x="411.64" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::end (10 samples, 0.01%)</title><rect x="566.3" y="501" width="0.2" height="15.0" fill="rgb(213,164,9)" rx="2" ry="2" />
<text  x="569.34" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_key (10 samples, 0.01%)</title><rect x="1001.0" y="629" width="0.2" height="15.0" fill="rgb(206,54,53)" rx="2" ry="2" />
<text  x="1004.04" y="639.5" ></text>
</g>
<g >
<title>__dbc_cleanup (8 samples, 0.01%)</title><rect x="141.7" y="517" width="0.1" height="15.0" fill="rgb(236,136,48)" rx="2" ry="2" />
<text  x="144.72" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;::_Rb_tree_const_iterator (12 samples, 0.01%)</title><rect x="682.7" y="549" width="0.1" height="15.0" fill="rgb(238,12,32)" rx="2" ry="2" />
<text  x="685.65" y="559.5" ></text>
</g>
<g >
<title>CHashWriter::write (11 samples, 0.01%)</title><rect x="502.9" y="293" width="0.1" height="15.0" fill="rgb(234,172,33)" rx="2" ry="2" />
<text  x="505.89" y="303.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTxIn, std::allocator&lt;CTxIn&gt; &gt; (279 samples, 0.30%)</title><rect x="1140.8" y="453" width="3.6" height="15.0" fill="rgb(244,161,23)" rx="2" ry="2" />
<text  x="1143.78" y="463.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, unsigned char, std::allocator&lt;unsigned char&gt; &gt; (361 samples, 0.39%)</title><rect x="1114.6" y="325" width="4.6" height="15.0" fill="rgb(232,182,38)" rx="2" ry="2" />
<text  x="1117.57" y="335.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, CScript&gt; (254 samples, 0.28%)</title><rect x="489.6" y="245" width="3.3" height="15.0" fill="rgb(252,17,15)" rx="2" ry="2" />
<text  x="492.63" y="255.5" ></text>
</g>
<g >
<title>ShiftMessageA (9 samples, 0.01%)</title><rect x="1144.0" y="149" width="0.2" height="15.0" fill="rgb(208,139,44)" rx="2" ry="2" />
<text  x="1147.05" y="159.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, COutPoint&gt; (189 samples, 0.21%)</title><rect x="487.1" y="213" width="2.5" height="15.0" fill="rgb(247,81,7)" rx="2" ry="2" />
<text  x="490.15" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (52 samples, 0.06%)</title><rect x="637.9" y="533" width="0.6" height="15.0" fill="rgb(211,4,30)" rx="2" ry="2" />
<text  x="640.88" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;interfaces::(anonymous namespace)::LockImpl, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt;::_M_ptr (9 samples, 0.01%)</title><rect x="953.7" y="613" width="0.1" height="15.0" fill="rgb(217,23,29)" rx="2" ry="2" />
<text  x="956.67" y="623.5" ></text>
</g>
<g >
<title>__memp_fget (78 samples, 0.08%)</title><rect x="113.3" y="405" width="1.0" height="15.0" fill="rgb(227,146,36)" rx="2" ry="2" />
<text  x="116.29" y="415.5" ></text>
</g>
<g >
<title>CScript::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (110 samples, 0.12%)</title><rect x="496.2" y="181" width="1.4" height="15.0" fill="rgb(230,39,54)" rx="2" ry="2" />
<text  x="499.18" y="191.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (8 samples, 0.01%)</title><rect x="155.6" y="485" width="0.1" height="15.0" fill="rgb(223,155,29)" rx="2" ry="2" />
<text  x="158.61" y="495.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;bool&amp;&gt; (2,208 samples, 2.40%)</title><rect x="380.1" y="629" width="28.2" height="15.0" fill="rgb(218,23,13)" rx="2" ry="2" />
<text  x="383.07" y="639.5" >C..</text>
</g>
<g >
<title>operator new (14 samples, 0.02%)</title><rect x="952.1" y="613" width="0.2" height="15.0" fill="rgb(240,125,44)" rx="2" ry="2" />
<text  x="955.13" y="623.5" ></text>
</g>
<g >
<title>AssertLockHeldInternal (62 samples, 0.07%)</title><rect x="716.4" y="613" width="0.8" height="15.0" fill="rgb(215,211,13)" rx="2" ry="2" />
<text  x="719.39" y="623.5" ></text>
</g>
<g >
<title>sha256_shani::Transform (269 samples, 0.29%)</title><rect x="1111.1" y="389" width="3.5" height="15.0" fill="rgb(238,104,21)" rx="2" ry="2" />
<text  x="1114.12" y="399.5" ></text>
</g>
<g >
<title>Hash160&lt;prevector&lt;28u, unsigned char, unsigned int, int&gt;::const_iterator&gt; (1,501 samples, 1.63%)</title><rect x="738.1" y="597" width="19.2" height="15.0" fill="rgb(212,189,45)" rx="2" ry="2" />
<text  x="741.12" y="607.5" ></text>
</g>
<g >
<title>AppInitMain (26 samples, 0.03%)</title><rect x="1145.8" y="693" width="0.4" height="15.0" fill="rgb(247,125,33)" rx="2" ry="2" />
<text  x="1148.84" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_construct_node&lt;COutPoint const&amp;&gt; (72 samples, 0.08%)</title><rect x="1047.0" y="581" width="0.9" height="15.0" fill="rgb(220,6,1)" rx="2" ry="2" />
<text  x="1050.03" y="591.5" ></text>
</g>
<g >
<title>base_blob&lt;160u&gt;::Compare (113 samples, 0.12%)</title><rect x="690.3" y="549" width="1.4" height="15.0" fill="rgb(228,228,2)" rx="2" ry="2" />
<text  x="693.29" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (25 samples, 0.03%)</title><rect x="636.9" y="485" width="0.3" height="15.0" fill="rgb(233,164,50)" rx="2" ry="2" />
<text  x="639.87" y="495.5" ></text>
</g>
<g >
<title>std::forward&lt;void*&amp;&gt; (10 samples, 0.01%)</title><rect x="947.7" y="517" width="0.2" height="15.0" fill="rgb(249,199,33)" rx="2" ry="2" />
<text  x="950.74" y="527.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::shrink_to_fit (9 samples, 0.01%)</title><rect x="495.0" y="261" width="0.1" height="15.0" fill="rgb(206,9,49)" rx="2" ry="2" />
<text  x="498.00" y="271.5" ></text>
</g>
<g >
<title>CMutableTransaction::~CMutableTransaction (87 samples, 0.09%)</title><rect x="478.7" y="453" width="1.1" height="15.0" fill="rgb(253,225,49)" rx="2" ry="2" />
<text  x="481.67" y="463.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (35 samples, 0.04%)</title><rect x="527.0" y="501" width="0.5" height="15.0" fill="rgb(233,88,33)" rx="2" ry="2" />
<text  x="530.03" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;::_Rb_tree_iterator (9 samples, 0.01%)</title><rect x="689.7" y="581" width="0.2" height="15.0" fill="rgb(235,185,50)" rx="2" ry="2" />
<text  x="692.74" y="591.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;int&gt; (22 samples, 0.02%)</title><rect x="502.8" y="341" width="0.3" height="15.0" fill="rgb(233,187,19)" rx="2" ry="2" />
<text  x="505.77" y="351.5" ></text>
</g>
<g >
<title>CWalletTx::Confirmation::Confirmation (10 samples, 0.01%)</title><rect x="1022.9" y="645" width="0.2" height="15.0" fill="rgb(206,52,32)" rx="2" ry="2" />
<text  x="1025.94" y="655.5" ></text>
</g>
<g >
<title>CSHA256::Write (8 samples, 0.01%)</title><rect x="500.0" y="261" width="0.1" height="15.0" fill="rgb(238,175,17)" rx="2" ry="2" />
<text  x="502.99" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;CTxOut const*, std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; &gt; (10 samples, 0.01%)</title><rect x="1053.7" y="645" width="0.1" height="15.0" fill="rgb(254,110,42)" rx="2" ry="2" />
<text  x="1056.69" y="655.5" ></text>
</g>
<g >
<title>CWalletTx::Init (24 samples, 0.03%)</title><rect x="531.8" y="629" width="0.3" height="15.0" fill="rgb(240,197,37)" rx="2" ry="2" />
<text  x="534.80" y="639.5" ></text>
</g>
<g >
<title>WalletBatch::WalletBatch (18 samples, 0.02%)</title><rect x="1107.4" y="709" width="0.2" height="15.0" fill="rgb(213,48,25)" rx="2" ry="2" />
<text  x="1110.41" y="719.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CMerkleTx, std::allocator&lt;CMerkleTx&gt; &gt;::~_Vector_base (30 samples, 0.03%)</title><rect x="556.9" y="613" width="0.4" height="15.0" fill="rgb(215,15,17)" rx="2" ry="2" />
<text  x="559.94" y="623.5" ></text>
</g>
<g >
<title>__subvdi3 (8 samples, 0.01%)</title><rect x="355.0" y="645" width="0.1" height="15.0" fill="rgb(214,159,44)" rx="2" ry="2" />
<text  x="358.04" y="655.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, CScript&gt; (271 samples, 0.29%)</title><rect x="1137.3" y="357" width="3.5" height="15.0" fill="rgb(238,15,44)" rx="2" ry="2" />
<text  x="1140.31" y="367.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream&gt; (9 samples, 0.01%)</title><rect x="436.9" y="197" width="0.1" height="15.0" fill="rgb(206,149,24)" rx="2" ry="2" />
<text  x="439.88" y="207.5" ></text>
</g>
<g >
<title>boost::detail::variant::visitation_impl&lt;mpl_::int_&lt;0&gt;, boost::detail::variant::visitation_impl_step&lt;boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, CNoDestination, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, PKHash, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, ScriptHash, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, WitnessV0ScriptHash, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, WitnessV0KeyHash, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, WitnessUnknown, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_iter&lt;boost::mpl::l_end&gt; &gt;, boost::detail::variant::invoke_visitor&lt;(anonymous namespace)::CScriptVisitor const, false&gt;, void const*, boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt;::has_fallback_type_&gt; (849 samples, 0.92%)</title><rect x="758.6" y="533" width="10.9" height="15.0" fill="rgb(217,16,45)" rx="2" ry="2" />
<text  x="761.62" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (8 samples, 0.01%)</title><rect x="486.1" y="245" width="0.1" height="15.0" fill="rgb(233,51,34)" rx="2" ry="2" />
<text  x="489.11" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;uint256, std::allocator&lt;uint256&gt; &gt;::_M_erase_at_end (13 samples, 0.01%)</title><rect x="530.7" y="565" width="0.2" height="15.0" fill="rgb(244,43,49)" rx="2" ry="2" />
<text  x="533.72" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::operator++ (60 samples, 0.07%)</title><rect x="35.2" y="645" width="0.8" height="15.0" fill="rgb(226,222,5)" rx="2" ry="2" />
<text  x="38.23" y="655.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, unsigned char, std::allocator&lt;unsigned char&gt; &gt; (246 samples, 0.27%)</title><rect x="514.2" y="277" width="3.1" height="15.0" fill="rgb(239,202,4)" rx="2" ry="2" />
<text  x="517.16" y="287.5" ></text>
</g>
<g >
<title>__bamc_init (55 samples, 0.06%)</title><rect x="72.8" y="485" width="0.7" height="15.0" fill="rgb(238,18,17)" rx="2" ry="2" />
<text  x="75.79" y="495.5" ></text>
</g>
<g >
<title>__db_tas_mutex_readlock (12 samples, 0.01%)</title><rect x="158.0" y="549" width="0.2" height="15.0" fill="rgb(226,48,13)" rx="2" ry="2" />
<text  x="161.04" y="559.5" ></text>
</g>
<g >
<title>CScript::~CScript (14 samples, 0.02%)</title><rect x="737.8" y="613" width="0.2" height="15.0" fill="rgb(212,229,51)" rx="2" ry="2" />
<text  x="740.82" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::max_size (10 samples, 0.01%)</title><rect x="1180.2" y="757" width="0.1" height="15.0" fill="rgb(243,154,4)" rx="2" ry="2" />
<text  x="1183.19" y="767.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::BGWork (33 samples, 0.04%)</title><rect x="1147.3" y="693" width="0.4" height="15.0" fill="rgb(206,22,15)" rx="2" ry="2" />
<text  x="1150.32" y="703.5" ></text>
</g>
<g >
<title>std::map&lt;CKeyID, CKey, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::operator[] (3,208 samples, 3.48%)</title><rect x="795.9" y="629" width="41.1" height="15.0" fill="rgb(215,129,5)" rx="2" ry="2" />
<text  x="798.89" y="639.5" >std..</text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (197 samples, 0.21%)</title><rect x="103.1" y="437" width="2.6" height="15.0" fill="rgb(244,221,5)" rx="2" ry="2" />
<text  x="106.14" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_M_check_len (25 samples, 0.03%)</title><rect x="819.8" y="453" width="0.3" height="15.0" fill="rgb(211,199,45)" rx="2" ry="2" />
<text  x="822.79" y="463.5" ></text>
</g>
<g >
<title>__bamc_dup (13 samples, 0.01%)</title><rect x="343.8" y="613" width="0.2" height="15.0" fill="rgb(218,221,20)" rx="2" ry="2" />
<text  x="346.82" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (42 samples, 0.05%)</title><rect x="562.7" y="629" width="0.6" height="15.0" fill="rgb(233,70,48)" rx="2" ry="2" />
<text  x="565.72" y="639.5" ></text>
</g>
<g >
<title>std::pair&lt;void*, void*&gt;::pair&lt;void*&amp;, true&gt; (11 samples, 0.01%)</title><rect x="681.7" y="565" width="0.2" height="15.0" fill="rgb(223,106,50)" rx="2" ry="2" />
<text  x="684.72" y="575.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTxOut, std::allocator&lt;CTxOut&gt; &gt; (397 samples, 0.43%)</title><rect x="494.7" y="325" width="5.1" height="15.0" fill="rgb(206,27,30)" rx="2" ry="2" />
<text  x="497.73" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_valptr (124 samples, 0.13%)</title><rect x="987.9" y="581" width="1.6" height="15.0" fill="rgb(254,132,20)" rx="2" ry="2" />
<text  x="990.91" y="591.5" ></text>
</g>
<g >
<title>std::map&lt;CKeyID, CKey, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::operator[] (8 samples, 0.01%)</title><rect x="1175.1" y="757" width="0.1" height="15.0" fill="rgb(214,11,39)" rx="2" ry="2" />
<text  x="1178.11" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_S_max_size (8 samples, 0.01%)</title><rect x="445.6" y="293" width="0.1" height="15.0" fill="rgb(224,222,34)" rx="2" ry="2" />
<text  x="448.58" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;COutPoint&gt; &gt;::construct&lt;COutPoint, COutPoint const&amp;&gt; (24 samples, 0.03%)</title><rect x="1047.6" y="549" width="0.3" height="15.0" fill="rgb(249,131,47)" rx="2" ry="2" />
<text  x="1050.59" y="559.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (29 samples, 0.03%)</title><rect x="348.6" y="565" width="0.4" height="15.0" fill="rgb(219,179,36)" rx="2" ry="2" />
<text  x="351.62" y="575.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::item_ptr (9 samples, 0.01%)</title><rect x="761.9" y="421" width="0.1" height="15.0" fill="rgb(237,201,54)" rx="2" ry="2" />
<text  x="764.93" y="431.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (826 samples, 0.90%)</title><rect x="201.3" y="597" width="10.5" height="15.0" fill="rgb(244,181,0)" rx="2" ry="2" />
<text  x="204.25" y="607.5" ></text>
</g>
<g >
<title>__dbc_cleanup (753 samples, 0.82%)</title><rect x="332.9" y="629" width="9.6" height="15.0" fill="rgb(249,123,43)" rx="2" ry="2" />
<text  x="335.91" y="639.5" ></text>
</g>
<g >
<title>boost::optional&lt;int&gt;::operator* (8 samples, 0.01%)</title><rect x="32.9" y="613" width="0.1" height="15.0" fill="rgb(251,106,40)" rx="2" ry="2" />
<text  x="35.89" y="623.5" ></text>
</g>
<g >
<title>__env_alloc (10 samples, 0.01%)</title><rect x="88.5" y="373" width="0.1" height="15.0" fill="rgb(210,91,48)" rx="2" ry="2" />
<text  x="91.47" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (177 samples, 0.19%)</title><rect x="525.7" y="533" width="2.3" height="15.0" fill="rgb(241,74,32)" rx="2" ry="2" />
<text  x="528.71" y="543.5" ></text>
</g>
<g >
<title>std::map&lt;CScriptID, CScript, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::lower_bound (703 samples, 0.76%)</title><rect x="777.9" y="597" width="9.0" height="15.0" fill="rgb(252,45,19)" rx="2" ry="2" />
<text  x="780.88" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (31 samples, 0.03%)</title><rect x="812.6" y="277" width="0.4" height="15.0" fill="rgb(241,153,50)" rx="2" ry="2" />
<text  x="815.64" y="287.5" ></text>
</g>
<g >
<title>__lock_put (26 samples, 0.03%)</title><rect x="133.5" y="485" width="0.3" height="15.0" fill="rgb(219,60,0)" rx="2" ry="2" />
<text  x="136.51" y="495.5" ></text>
</g>
<g >
<title>CTxIn::Serialize&lt;CHashWriter&gt; (527 samples, 0.57%)</title><rect x="486.7" y="277" width="6.7" height="15.0" fill="rgb(212,156,44)" rx="2" ry="2" />
<text  x="489.67" y="287.5" ></text>
</g>
<g >
<title>std::recursive_mutex::unlock (9 samples, 0.01%)</title><rect x="687.3" y="597" width="0.2" height="15.0" fill="rgb(230,154,3)" rx="2" ry="2" />
<text  x="690.34" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_allocate (88 samples, 0.10%)</title><rect x="469.3" y="325" width="1.1" height="15.0" fill="rgb(231,6,43)" rx="2" ry="2" />
<text  x="472.30" y="335.5" ></text>
</g>
<g >
<title>CLockLocation::~CLockLocation (17 samples, 0.02%)</title><rect x="839.5" y="597" width="0.2" height="15.0" fill="rgb(241,77,47)" rx="2" ry="2" />
<text  x="842.48" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;char*, unsigned long&amp;&gt; (71 samples, 0.08%)</title><rect x="813.4" y="325" width="0.9" height="15.0" fill="rgb(205,126,0)" rx="2" ry="2" />
<text  x="816.41" y="335.5" ></text>
</g>
<g >
<title>dl_main (15 samples, 0.02%)</title><rect x="1189.8" y="709" width="0.2" height="15.0" fill="rgb(221,88,28)" rx="2" ry="2" />
<text  x="1192.81" y="719.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (112 samples, 0.12%)</title><rect x="636.4" y="533" width="1.5" height="15.0" fill="rgb(208,226,29)" rx="2" ry="2" />
<text  x="639.42" y="543.5" ></text>
</g>
<g >
<title>CSHA256::Write (271 samples, 0.29%)</title><rect x="1137.3" y="197" width="3.5" height="15.0" fill="rgb(216,66,39)" rx="2" ry="2" />
<text  x="1140.31" y="207.5" ></text>
</g>
<g >
<title>__bam_split (19 samples, 0.02%)</title><rect x="61.7" y="485" width="0.3" height="15.0" fill="rgb(230,124,7)" rx="2" ry="2" />
<text  x="64.73" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;::_M_ptr (23 samples, 0.02%)</title><rect x="1017.2" y="581" width="0.3" height="15.0" fill="rgb(254,81,2)" rx="2" ry="2" />
<text  x="1020.17" y="591.5" ></text>
</g>
<g >
<title>CMutableTransaction::CMutableTransaction&lt;CDataStream&gt; (3,814 samples, 4.14%)</title><rect x="429.8" y="453" width="48.9" height="15.0" fill="rgb(248,130,14)" rx="2" ry="2" />
<text  x="432.83" y="463.5" >CMut..</text>
</g>
<g >
<title>ser_readdata32&lt;CDataStream&gt; (14 samples, 0.02%)</title><rect x="408.4" y="597" width="0.2" height="15.0" fill="rgb(205,143,23)" rx="2" ry="2" />
<text  x="411.41" y="607.5" ></text>
</g>
<g >
<title>BerkeleyEnvironment::Open (28 samples, 0.03%)</title><rect x="162.0" y="645" width="0.4" height="15.0" fill="rgb(212,103,51)" rx="2" ry="2" />
<text  x="165.00" y="655.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.02%)</title><rect x="975.5" y="565" width="0.3" height="15.0" fill="rgb(222,129,18)" rx="2" ry="2" />
<text  x="978.54" y="575.5" ></text>
</g>
<g >
<title>__strlen_avx2 (20 samples, 0.02%)</title><rect x="944.5" y="501" width="0.2" height="15.0" fill="rgb(239,128,44)" rx="2" ry="2" />
<text  x="947.47" y="511.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (9 samples, 0.01%)</title><rect x="127.8" y="421" width="0.1" height="15.0" fill="rgb(254,172,39)" rx="2" ry="2" />
<text  x="130.81" y="431.5" ></text>
</g>
<g >
<title>WriteLE32 (14 samples, 0.02%)</title><rect x="678.3" y="581" width="0.2" height="15.0" fill="rgb(248,81,33)" rx="2" ry="2" />
<text  x="681.31" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;CTransaction&gt; &gt;::construct&lt;CTransaction const, deserialize_type const&amp;, CDataStream&amp;&gt; (352 samples, 0.38%)</title><rect x="162.5" y="613" width="4.5" height="15.0" fill="rgb(216,107,24)" rx="2" ry="2" />
<text  x="165.53" y="623.5" ></text>
</g>
<g >
<title>_mm_set_epi64x (20 samples, 0.02%)</title><rect x="1139.0" y="149" width="0.2" height="15.0" fill="rgb(235,167,31)" rx="2" ry="2" />
<text  x="1141.99" y="159.5" ></text>
</g>
<g >
<title>std::make_pair&lt;void*&amp;, CLockLocation const&amp;&gt; (13 samples, 0.01%)</title><rect x="1174.9" y="757" width="0.1" height="15.0" fill="rgb(244,91,5)" rx="2" ry="2" />
<text  x="1177.86" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;::_Rb_tree_iterator (8 samples, 0.01%)</title><rect x="829.9" y="565" width="0.1" height="15.0" fill="rgb(218,157,54)" rx="2" ry="2" />
<text  x="832.89" y="575.5" ></text>
</g>
<g >
<title>boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt;::convert_construct&lt;WitnessV0KeyHash&gt; (48 samples, 0.05%)</title><rect x="770.0" y="597" width="0.6" height="15.0" fill="rgb(242,137,36)" rx="2" ry="2" />
<text  x="773.01" y="607.5" ></text>
</g>
<g >
<title>CSHA256::Write (9 samples, 0.01%)</title><rect x="679.1" y="597" width="0.2" height="15.0" fill="rgb(212,51,36)" rx="2" ry="2" />
<text  x="682.14" y="607.5" ></text>
</g>
<g >
<title>CRIPEMD160::Finalize (1,388 samples, 1.51%)</title><rect x="738.4" y="565" width="17.8" height="15.0" fill="rgb(217,88,38)" rx="2" ry="2" />
<text  x="741.44" y="575.5" ></text>
</g>
<g >
<title>__db_cursor (33 samples, 0.04%)</title><rect x="110.4" y="469" width="0.4" height="15.0" fill="rgb(217,196,29)" rx="2" ry="2" />
<text  x="113.39" y="479.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned char*&gt; (12 samples, 0.01%)</title><rect x="1153.4" y="741" width="0.2" height="15.0" fill="rgb(213,214,12)" rx="2" ry="2" />
<text  x="1156.45" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::pop_back (30 samples, 0.03%)</title><rect x="686.9" y="597" width="0.3" height="15.0" fill="rgb(228,26,29)" rx="2" ry="2" />
<text  x="689.85" y="607.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter&gt; (9 samples, 0.01%)</title><rect x="488.5" y="133" width="0.2" height="15.0" fill="rgb(242,214,4)" rx="2" ry="2" />
<text  x="491.54" y="143.5" ></text>
</g>
<g >
<title>__db_retcopy (8 samples, 0.01%)</title><rect x="146.4" y="533" width="0.1" height="15.0" fill="rgb(216,165,50)" rx="2" ry="2" />
<text  x="149.40" y="543.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, unsigned long, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt; &gt;::erase (150 samples, 0.16%)</title><rect x="1090.7" y="565" width="1.9" height="15.0" fill="rgb(245,141,48)" rx="2" ry="2" />
<text  x="1093.66" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (140 samples, 0.15%)</title><rect x="1090.7" y="533" width="1.8" height="15.0" fill="rgb(240,94,31)" rx="2" ry="2" />
<text  x="1093.72" y="543.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned char&gt;::store (8 samples, 0.01%)</title><rect x="30.6" y="629" width="0.1" height="15.0" fill="rgb(241,97,21)" rx="2" ry="2" />
<text  x="33.55" y="639.5" ></text>
</g>
<g >
<title>__memp_fput (22 samples, 0.02%)</title><rect x="102.1" y="405" width="0.3" height="15.0" fill="rgb(209,53,0)" rx="2" ry="2" />
<text  x="105.12" y="415.5" ></text>
</g>
<g >
<title>std::less&lt;CKeyID&gt;::operator (17 samples, 0.02%)</title><rect x="824.0" y="581" width="0.2" height="15.0" fill="rgb(244,20,25)" rx="2" ry="2" />
<text  x="827.01" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (28 samples, 0.03%)</title><rect x="570.0" y="453" width="0.4" height="15.0" fill="rgb(248,20,49)" rx="2" ry="2" />
<text  x="573.05" y="463.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::shrink_to_fit (21 samples, 0.02%)</title><rect x="759.8" y="453" width="0.3" height="15.0" fill="rgb(222,91,9)" rx="2" ry="2" />
<text  x="762.84" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;void*, CLockLocation&gt;::pair (8 samples, 0.01%)</title><rect x="686.4" y="517" width="0.1" height="15.0" fill="rgb(241,15,48)" rx="2" ry="2" />
<text  x="689.37" y="527.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned char*, unsigned char*, secure_allocator&lt;unsigned char&gt; &gt; (15 samples, 0.02%)</title><rect x="623.4" y="597" width="0.2" height="15.0" fill="rgb(225,189,36)" rx="2" ry="2" />
<text  x="626.40" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt;::allocate (8 samples, 0.01%)</title><rect x="1087.3" y="501" width="0.1" height="15.0" fill="rgb(229,98,33)" rx="2" ry="2" />
<text  x="1090.32" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (89 samples, 0.10%)</title><rect x="185.0" y="613" width="1.1" height="15.0" fill="rgb(209,121,19)" rx="2" ry="2" />
<text  x="188.00" y="623.5" ></text>
</g>
<g >
<title>__bam_defcmp (11 samples, 0.01%)</title><rect x="153.3" y="469" width="0.2" height="15.0" fill="rgb(254,119,20)" rx="2" ry="2" />
<text  x="156.32" y="479.5" ></text>
</g>
<g >
<title>CScriptWitness::~CScriptWitness (22 samples, 0.02%)</title><rect x="485.9" y="293" width="0.3" height="15.0" fill="rgb(223,96,37)" rx="2" ry="2" />
<text  x="488.93" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_range_insert&lt;unsigned char const*&gt; (269 samples, 0.29%)</title><rect x="1099.8" y="645" width="3.4" height="15.0" fill="rgb(211,120,5)" rx="2" ry="2" />
<text  x="1102.76" y="655.5" ></text>
</g>
<g >
<title>_mm_set_epi64x (9 samples, 0.01%)</title><rect x="1123.1" y="565" width="0.2" height="15.0" fill="rgb(225,133,16)" rx="2" ry="2" />
<text  x="1126.15" y="575.5" ></text>
</g>
<g >
<title>__bam_vrfy_itemorder (44 samples, 0.05%)</title><rect x="64.2" y="565" width="0.5" height="15.0" fill="rgb(210,41,49)" rx="2" ry="2" />
<text  x="67.17" y="575.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::TwoLevelIterator::Next (14 samples, 0.02%)</title><rect x="42.2" y="581" width="0.2" height="15.0" fill="rgb(207,124,14)" rx="2" ry="2" />
<text  x="45.21" y="591.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (9 samples, 0.01%)</title><rect x="81.4" y="437" width="0.1" height="15.0" fill="rgb(218,75,10)" rx="2" ry="2" />
<text  x="84.40" y="447.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (41 samples, 0.04%)</title><rect x="1096.9" y="597" width="0.5" height="15.0" fill="rgb(231,33,32)" rx="2" ry="2" />
<text  x="1099.91" y="607.5" ></text>
</g>
<g >
<title>CTransaction::Serialize&lt;CHashWriter&gt; (271 samples, 0.29%)</title><rect x="1137.3" y="501" width="3.5" height="15.0" fill="rgb(233,67,54)" rx="2" ry="2" />
<text  x="1140.31" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;COutPoint&gt; &gt; &gt;::deallocate (13 samples, 0.01%)</title><rect x="1051.9" y="581" width="0.2" height="15.0" fill="rgb(209,148,18)" rx="2" ry="2" />
<text  x="1054.89" y="591.5" ></text>
</g>
<g >
<title>std::__addressof&lt;unsigned char&gt; (122 samples, 0.13%)</title><rect x="576.6" y="581" width="1.6" height="15.0" fill="rgb(225,189,40)" rx="2" ry="2" />
<text  x="579.60" y="591.5" ></text>
</g>
<g >
<title>__db_lget (90 samples, 0.10%)</title><rect x="83.8" y="405" width="1.1" height="15.0" fill="rgb(248,153,1)" rx="2" ry="2" />
<text  x="86.79" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (13 samples, 0.01%)</title><rect x="1085.8" y="517" width="0.1" height="15.0" fill="rgb(207,175,32)" rx="2" ry="2" />
<text  x="1088.78" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13 samples, 0.01%)</title><rect x="458.5" y="309" width="0.2" height="15.0" fill="rgb(207,148,48)" rx="2" ry="2" />
<text  x="461.54" y="319.5" ></text>
</g>
<g >
<title>COutPoint::Serialize&lt;CHashWriter&gt; (182 samples, 0.20%)</title><rect x="487.2" y="197" width="2.4" height="15.0" fill="rgb(244,227,12)" rx="2" ry="2" />
<text  x="490.24" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (8 samples, 0.01%)</title><rect x="806.2" y="309" width="0.1" height="15.0" fill="rgb(238,164,5)" rx="2" ry="2" />
<text  x="809.21" y="319.5" ></text>
</g>
<g >
<title>CDataStream::size (33 samples, 0.04%)</title><rect x="39.2" y="629" width="0.4" height="15.0" fill="rgb(212,136,53)" rx="2" ry="2" />
<text  x="42.21" y="639.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (45 samples, 0.05%)</title><rect x="62.1" y="501" width="0.6" height="15.0" fill="rgb(236,221,19)" rx="2" ry="2" />
<text  x="65.08" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;::operator++ (43 samples, 0.05%)</title><rect x="869.2" y="613" width="0.5" height="15.0" fill="rgb(216,41,20)" rx="2" ry="2" />
<text  x="872.17" y="623.5" ></text>
</g>
<g >
<title>std::forward&lt;char const&amp;&gt; (20 samples, 0.02%)</title><rect x="38.5" y="549" width="0.2" height="15.0" fill="rgb(233,59,0)" rx="2" ry="2" />
<text  x="41.46" y="559.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CSizeComputer, unsigned int&gt; (19 samples, 0.02%)</title><rect x="1037.4" y="469" width="0.3" height="15.0" fill="rgb(252,29,4)" rx="2" ry="2" />
<text  x="1040.43" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::allocate (47 samples, 0.05%)</title><rect x="1003.4" y="581" width="0.6" height="15.0" fill="rgb(249,110,4)" rx="2" ry="2" />
<text  x="1006.36" y="591.5" ></text>
</g>
<g >
<title>ChainActive (13 samples, 0.01%)</title><rect x="51.1" y="613" width="0.2" height="15.0" fill="rgb(247,66,49)" rx="2" ry="2" />
<text  x="54.08" y="623.5" ></text>
</g>
<g >
<title>std::less&lt;CScriptID&gt;::operator (514 samples, 0.56%)</title><rect x="780.3" y="549" width="6.6" height="15.0" fill="rgb(249,229,20)" rx="2" ry="2" />
<text  x="783.30" y="559.5" ></text>
</g>
<g >
<title>BerkeleyEnvironment::Verify (8,448 samples, 9.17%)</title><rect x="53.8" y="645" width="108.2" height="15.0" fill="rgb(235,15,6)" rx="2" ry="2" />
<text  x="56.80" y="655.5" >BerkeleyEnvir..</text>
</g>
<g >
<title>interfaces::(anonymous namespace)::WalletClientImpl::verify (10 samples, 0.01%)</title><rect x="1144.7" y="741" width="0.1" height="15.0" fill="rgb(224,111,24)" rx="2" ry="2" />
<text  x="1147.70" y="751.5" ></text>
</g>
<g >
<title>Unserialize_impl&lt;CDataStream, uint256, std::allocator&lt;uint256&gt;, uint256&gt; (58 samples, 0.06%)</title><rect x="530.1" y="597" width="0.8" height="15.0" fill="rgb(242,122,8)" rx="2" ry="2" />
<text  x="533.14" y="607.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;CTransaction&gt; (361 samples, 0.39%)</title><rect x="1114.6" y="453" width="4.6" height="15.0" fill="rgb(215,123,21)" rx="2" ry="2" />
<text  x="1117.57" y="463.5" ></text>
</g>
<g >
<title>EnterCritical (9 samples, 0.01%)</title><rect x="19.9" y="757" width="0.1" height="15.0" fill="rgb(236,29,36)" rx="2" ry="2" />
<text  x="22.91" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (35 samples, 0.04%)</title><rect x="632.7" y="485" width="0.4" height="15.0" fill="rgb(210,34,37)" rx="2" ry="2" />
<text  x="635.68" y="495.5" ></text>
</g>
<g >
<title>__db_lput (19 samples, 0.02%)</title><rect x="68.4" y="501" width="0.3" height="15.0" fill="rgb(228,212,11)" rx="2" ry="2" />
<text  x="71.44" y="511.5" ></text>
</g>
<g >
<title>CHashWriter::GetHash (271 samples, 0.29%)</title><rect x="1107.7" y="453" width="3.4" height="15.0" fill="rgb(225,217,20)" rx="2" ry="2" />
<text  x="1110.65" y="463.5" ></text>
</g>
<g >
<title>COutPoint::IsNull (8 samples, 0.01%)</title><rect x="1029.0" y="661" width="0.1" height="15.0" fill="rgb(226,188,0)" rx="2" ry="2" />
<text  x="1031.96" y="671.5" ></text>
</g>
<g >
<title>__db_lget (17 samples, 0.02%)</title><rect x="138.8" y="469" width="0.2" height="15.0" fill="rgb(210,191,30)" rx="2" ry="2" />
<text  x="141.77" y="479.5" ></text>
</g>
<g >
<title>CHashWriter::write (17 samples, 0.02%)</title><rect x="493.1" y="181" width="0.2" height="15.0" fill="rgb(225,82,50)" rx="2" ry="2" />
<text  x="496.09" y="191.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (16 samples, 0.02%)</title><rect x="84.7" y="357" width="0.2" height="15.0" fill="rgb(243,77,32)" rx="2" ry="2" />
<text  x="87.73" y="367.5" ></text>
</g>
<g >
<title>boost::apply_visitor&lt;(anonymous namespace)::CScriptVisitor, boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt; const&amp;&gt; (902 samples, 0.98%)</title><rect x="758.1" y="597" width="11.5" height="15.0" fill="rgb(222,100,27)" rx="2" ry="2" />
<text  x="761.07" y="607.5" ></text>
</g>
<g >
<title>CScript::Serialize&lt;CSizeComputer&gt; (63 samples, 0.07%)</title><rect x="1040.1" y="437" width="0.8" height="15.0" fill="rgb(249,80,22)" rx="2" ry="2" />
<text  x="1043.07" y="447.5" ></text>
</g>
<g >
<title>__memp_fget (32 samples, 0.03%)</title><rect x="97.8" y="389" width="0.4" height="15.0" fill="rgb(220,118,45)" rx="2" ry="2" />
<text  x="100.80" y="399.5" ></text>
</g>
<g >
<title>LoadBlockIndexDB (43 samples, 0.05%)</title><rect x="31.4" y="693" width="0.6" height="15.0" fill="rgb(250,13,5)" rx="2" ry="2" />
<text  x="34.40" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;char* const, unsigned long&gt;, false, false&gt;::operator* (12 samples, 0.01%)</title><rect x="1081.4" y="565" width="0.1" height="15.0" fill="rgb(210,43,46)" rx="2" ry="2" />
<text  x="1084.37" y="575.5" ></text>
</g>
<g >
<title>CDataStream::read (9 samples, 0.01%)</title><rect x="528.8" y="549" width="0.1" height="15.0" fill="rgb(214,87,33)" rx="2" ry="2" />
<text  x="531.77" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::end (10 samples, 0.01%)</title><rect x="848.9" y="581" width="0.1" height="15.0" fill="rgb(250,185,5)" rx="2" ry="2" />
<text  x="851.92" y="591.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (47 samples, 0.05%)</title><rect x="461.9" y="229" width="0.6" height="15.0" fill="rgb(213,84,15)" rx="2" ry="2" />
<text  x="464.94" y="239.5" ></text>
</g>
<g >
<title>base_uint&lt;256u&gt;::operator&lt;&lt;= (17 samples, 0.02%)</title><rect x="44.1" y="629" width="0.2" height="15.0" fill="rgb(233,64,9)" rx="2" ry="2" />
<text  x="47.08" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;interfaces::Chain::Lock, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt; (57 samples, 0.06%)</title><rect x="953.8" y="613" width="0.8" height="15.0" fill="rgb(238,215,21)" rx="2" ry="2" />
<text  x="956.82" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (9 samples, 0.01%)</title><rect x="632.2" y="485" width="0.2" height="15.0" fill="rgb(218,99,39)" rx="2" ry="2" />
<text  x="635.25" y="495.5" ></text>
</g>
<g >
<title>std::make_pair&lt;long&amp;, CWalletTx*&gt; (8 samples, 0.01%)</title><rect x="1174.6" y="757" width="0.1" height="15.0" fill="rgb(245,221,44)" rx="2" ry="2" />
<text  x="1177.57" y="767.5" ></text>
</g>
<g >
<title>Unserialize_impl&lt;CDataStream, unsigned int, std::allocator&lt;unsigned int&gt;, unsigned int&gt; (180 samples, 0.20%)</title><rect x="362.9" y="485" width="2.4" height="15.0" fill="rgb(230,110,22)" rx="2" ry="2" />
<text  x="365.95" y="495.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, 28u, unsigned char&gt; (279 samples, 0.30%)</title><rect x="1140.8" y="261" width="3.6" height="15.0" fill="rgb(232,142,41)" rx="2" ry="2" />
<text  x="1143.78" y="271.5" ></text>
</g>
<g >
<title>[unknown] (48 samples, 0.05%)</title><rect x="89.9" y="293" width="0.6" height="15.0" fill="rgb(228,71,46)" rx="2" ry="2" />
<text  x="92.89" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (17 samples, 0.02%)</title><rect x="962.4" y="565" width="0.2" height="15.0" fill="rgb(250,33,49)" rx="2" ry="2" />
<text  x="965.43" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::size (9 samples, 0.01%)</title><rect x="608.1" y="613" width="0.1" height="15.0" fill="rgb(224,118,12)" rx="2" ry="2" />
<text  x="611.06" y="623.5" ></text>
</g>
<g >
<title>__bswap_32 (8 samples, 0.01%)</title><rect x="736.4" y="533" width="0.1" height="15.0" fill="rgb(220,168,5)" rx="2" ry="2" />
<text  x="739.38" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;interfaces::Chain::Lock, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt;::_M_deleter (17 samples, 0.02%)</title><rect x="1021.9" y="629" width="0.2" height="15.0" fill="rgb(211,135,46)" rx="2" ry="2" />
<text  x="1024.93" y="639.5" ></text>
</g>
<g >
<title>CHash256::Write (169 samples, 0.18%)</title><rect x="162.5" y="197" width="2.2" height="15.0" fill="rgb(238,50,34)" rx="2" ry="2" />
<text  x="165.53" y="207.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (361 samples, 0.39%)</title><rect x="1114.6" y="373" width="4.6" height="15.0" fill="rgb(252,199,0)" rx="2" ry="2" />
<text  x="1117.57" y="383.5" ></text>
</g>
<g >
<title>CTransaction::Serialize&lt;CHashWriter&gt; (169 samples, 0.18%)</title><rect x="162.5" y="485" width="2.2" height="15.0" fill="rgb(210,220,16)" rx="2" ry="2" />
<text  x="165.53" y="495.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, char&gt; (277 samples, 0.30%)</title><rect x="409.4" y="581" width="3.5" height="15.0" fill="rgb(218,15,0)" rx="2" ry="2" />
<text  x="412.36" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::begin (9 samples, 0.01%)</title><rect x="1152.5" y="741" width="0.1" height="15.0" fill="rgb(220,145,6)" rx="2" ry="2" />
<text  x="1155.45" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (37 samples, 0.04%)</title><rect x="52.8" y="533" width="0.4" height="15.0" fill="rgb(234,129,40)" rx="2" ry="2" />
<text  x="55.76" y="543.5" ></text>
</g>
<g >
<title>push_lock (29 samples, 0.03%)</title><rect x="1152.2" y="757" width="0.4" height="15.0" fill="rgb(222,93,24)" rx="2" ry="2" />
<text  x="1155.23" y="767.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (44 samples, 0.05%)</title><rect x="946.9" y="533" width="0.5" height="15.0" fill="rgb(230,83,33)" rx="2" ry="2" />
<text  x="949.87" y="543.5" ></text>
</g>
<g >
<title>__bam_search (23 samples, 0.02%)</title><rect x="61.4" y="469" width="0.2" height="15.0" fill="rgb(238,181,13)" rx="2" ry="2" />
<text  x="64.35" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_M_lower_bound (25 samples, 0.03%)</title><rect x="893.4" y="597" width="0.3" height="15.0" fill="rgb(236,224,18)" rx="2" ry="2" />
<text  x="896.39" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_erase_at_end (9 samples, 0.01%)</title><rect x="1179.1" y="757" width="0.1" height="15.0" fill="rgb(245,86,49)" rx="2" ry="2" />
<text  x="1182.05" y="767.5" ></text>
</g>
<g >
<title>CTxOut::SetNull (27 samples, 0.03%)</title><rect x="454.3" y="245" width="0.3" height="15.0" fill="rgb(217,105,14)" rx="2" ry="2" />
<text  x="457.27" y="255.5" ></text>
</g>
<g >
<title>operator new (182 samples, 0.20%)</title><rect x="587.3" y="533" width="2.4" height="15.0" fill="rgb(209,85,1)" rx="2" ry="2" />
<text  x="590.33" y="543.5" ></text>
</g>
<g >
<title>CDataStream::read (15 samples, 0.02%)</title><rect x="531.6" y="581" width="0.2" height="15.0" fill="rgb(214,3,26)" rx="2" ry="2" />
<text  x="534.57" y="591.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;false&gt;::__uninit_default_n&lt;uint256*, unsigned long&gt; (52 samples, 0.06%)</title><rect x="29.9" y="597" width="0.6" height="15.0" fill="rgb(240,179,42)" rx="2" ry="2" />
<text  x="32.86" y="607.5" ></text>
</g>
<g >
<title>secure_allocator&lt;unsigned char&gt;::secure_allocator (23 samples, 0.02%)</title><rect x="624.3" y="613" width="0.3" height="15.0" fill="rgb(238,104,51)" rx="2" ry="2" />
<text  x="627.32" y="623.5" ></text>
</g>
<g >
<title>_mm_add_epi32 (11 samples, 0.01%)</title><rect x="1127.0" y="549" width="0.1" height="15.0" fill="rgb(215,140,41)" rx="2" ry="2" />
<text  x="1129.95" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_check_len (22 samples, 0.02%)</title><rect x="364.6" y="437" width="0.3" height="15.0" fill="rgb(216,47,36)" rx="2" ry="2" />
<text  x="367.61" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_addr (28 samples, 0.03%)</title><rect x="978.7" y="549" width="0.3" height="15.0" fill="rgb(217,76,53)" rx="2" ry="2" />
<text  x="981.68" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned int&gt;::allocate (15 samples, 0.02%)</title><rect x="852.7" y="565" width="0.2" height="15.0" fill="rgb(247,131,44)" rx="2" ry="2" />
<text  x="855.70" y="575.5" ></text>
</g>
<g >
<title>__db_cursor (26 samples, 0.03%)</title><rect x="141.9" y="549" width="0.3" height="15.0" fill="rgb(225,39,11)" rx="2" ry="2" />
<text  x="144.90" y="559.5" ></text>
</g>
<g >
<title>__dbc_cleanup (23 samples, 0.02%)</title><rect x="90.8" y="453" width="0.3" height="15.0" fill="rgb(237,188,42)" rx="2" ry="2" />
<text  x="93.82" y="463.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (80 samples, 0.09%)</title><rect x="119.3" y="469" width="1.0" height="15.0" fill="rgb(217,71,34)" rx="2" ry="2" />
<text  x="122.28" y="479.5" ></text>
</g>
<g >
<title>CKey::CKey (1,287 samples, 1.40%)</title><rect x="608.2" y="677" width="16.5" height="15.0" fill="rgb(244,82,8)" rx="2" ry="2" />
<text  x="611.17" y="687.5" ></text>
</g>
<g >
<title>CTxIn::SerializationOp&lt;CSizeComputer, CSerActionSerialize&gt; (8 samples, 0.01%)</title><rect x="17.4" y="757" width="0.1" height="15.0" fill="rgb(242,178,0)" rx="2" ry="2" />
<text  x="20.36" y="767.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::begin (32 samples, 0.03%)</title><rect x="761.8" y="437" width="0.4" height="15.0" fill="rgb(213,152,15)" rx="2" ry="2" />
<text  x="764.79" y="447.5" ></text>
</g>
<g >
<title>sha256_shani::Transform (161 samples, 0.17%)</title><rect x="1124.1" y="581" width="2.1" height="15.0" fill="rgb(240,181,22)" rx="2" ry="2" />
<text  x="1127.12" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;char* const, unsigned long&gt; &gt;::_M_valptr (15 samples, 0.02%)</title><rect x="1166.6" y="741" width="0.1" height="15.0" fill="rgb(253,153,6)" rx="2" ry="2" />
<text  x="1169.55" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const*, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::__normal_iterator (8 samples, 0.01%)</title><rect x="974.5" y="501" width="0.1" height="15.0" fill="rgb(206,182,7)" rx="2" ry="2" />
<text  x="977.54" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::allocate (21 samples, 0.02%)</title><rect x="774.0" y="533" width="0.2" height="15.0" fill="rgb(248,147,22)" rx="2" ry="2" />
<text  x="776.96" y="543.5" ></text>
</g>
<g >
<title>UniqueLock&lt;AnnotatedMixin&lt;std::recursive_mutex&gt;, std::unique_lock&lt;std::recursive_mutex&gt; &gt;::~UniqueLock (111 samples, 0.12%)</title><rect x="794.5" y="629" width="1.4" height="15.0" fill="rgb(226,66,22)" rx="2" ry="2" />
<text  x="797.47" y="639.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_storage (8 samples, 0.01%)</title><rect x="973.6" y="501" width="0.1" height="15.0" fill="rgb(233,168,14)" rx="2" ry="2" />
<text  x="976.57" y="511.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;char*, char*, zero_after_free_allocator&lt;char&gt; &gt; (314 samples, 0.34%)</title><rect x="291.3" y="613" width="4.0" height="15.0" fill="rgb(209,122,35)" rx="2" ry="2" />
<text  x="294.26" y="623.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned (13 samples, 0.01%)</title><rect x="31.2" y="533" width="0.2" height="15.0" fill="rgb(250,120,33)" rx="2" ry="2" />
<text  x="34.21" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::~_Vector_base (19 samples, 0.02%)</title><rect x="640.5" y="629" width="0.3" height="15.0" fill="rgb(234,34,19)" rx="2" ry="2" />
<text  x="643.52" y="639.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1,134 samples, 1.23%)</title><rect x="912.7" y="533" width="14.5" height="15.0" fill="rgb(221,84,22)" rx="2" ry="2" />
<text  x="915.67" y="543.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (8 samples, 0.01%)</title><rect x="472.4" y="277" width="0.1" height="15.0" fill="rgb(230,9,45)" rx="2" ry="2" />
<text  x="475.43" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_M_get_insert_equal_pos (9 samples, 0.01%)</title><rect x="1156.4" y="757" width="0.1" height="15.0" fill="rgb(237,103,41)" rx="2" ry="2" />
<text  x="1159.41" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::size (18 samples, 0.02%)</title><rect x="474.6" y="341" width="0.3" height="15.0" fill="rgb(223,214,5)" rx="2" ry="2" />
<text  x="477.62" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_node (136 samples, 0.15%)</title><rect x="423.6" y="565" width="1.7" height="15.0" fill="rgb(206,171,50)" rx="2" ry="2" />
<text  x="426.56" y="575.5" ></text>
</g>
<g >
<title>__dbc_iget (204 samples, 0.22%)</title><rect x="103.1" y="469" width="2.6" height="15.0" fill="rgb(206,32,43)" rx="2" ry="2" />
<text  x="106.08" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;void*, CLockLocation&gt;*, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; (17 samples, 0.02%)</title><rect x="716.8" y="597" width="0.2" height="15.0" fill="rgb(233,187,15)" rx="2" ry="2" />
<text  x="719.80" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;char*, unsigned long&amp;&gt; (256 samples, 0.28%)</title><rect x="811.3" y="341" width="3.3" height="15.0" fill="rgb(229,172,47)" rx="2" ry="2" />
<text  x="814.32" y="351.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::is_direct (8 samples, 0.01%)</title><rect x="511.7" y="85" width="0.1" height="15.0" fill="rgb(233,19,0)" rx="2" ry="2" />
<text  x="514.72" y="95.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTxOut, std::allocator&lt;CTxOut&gt; &gt; (309 samples, 0.34%)</title><rect x="509.4" y="325" width="4.0" height="15.0" fill="rgb(213,200,11)" rx="2" ry="2" />
<text  x="512.41" y="335.5" ></text>
</g>
<g >
<title>std::_List_node&lt;LockedPool::LockedPageArena&gt;::_M_valptr (9 samples, 0.01%)</title><rect x="1094.1" y="565" width="0.1" height="15.0" fill="rgb(213,168,9)" rx="2" ry="2" />
<text  x="1097.05" y="575.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTxIn&gt; (271 samples, 0.29%)</title><rect x="1137.3" y="421" width="3.5" height="15.0" fill="rgb(233,80,33)" rx="2" ry="2" />
<text  x="1140.31" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (18 samples, 0.02%)</title><rect x="526.5" y="485" width="0.3" height="15.0" fill="rgb(247,229,51)" rx="2" ry="2" />
<text  x="529.54" y="495.5" ></text>
</g>
<g >
<title>sha256_shani::Transform (153 samples, 0.17%)</title><rect x="1126.2" y="581" width="1.9" height="15.0" fill="rgb(234,202,21)" rx="2" ry="2" />
<text  x="1129.18" y="591.5" ></text>
</g>
<g >
<title>__lock_get_internal (127 samples, 0.14%)</title><rect x="315.9" y="565" width="1.6" height="15.0" fill="rgb(209,44,43)" rx="2" ry="2" />
<text  x="318.91" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_erase_at_end (31 samples, 0.03%)</title><rect x="175.2" y="645" width="0.4" height="15.0" fill="rgb(233,134,16)" rx="2" ry="2" />
<text  x="178.21" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_range_initialize&lt;unsigned char const*&gt; (149 samples, 0.16%)</title><rect x="767.0" y="437" width="1.9" height="15.0" fill="rgb(240,15,35)" rx="2" ry="2" />
<text  x="770.01" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false, false&gt;, bool&gt;::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false, false&gt;, bool, true&gt; (9 samples, 0.01%)</title><rect x="808.5" y="309" width="0.1" height="15.0" fill="rgb(205,126,20)" rx="2" ry="2" />
<text  x="811.48" y="319.5" ></text>
</g>
<g >
<title>Dbt::get_data (44 samples, 0.05%)</title><rect x="172.5" y="661" width="0.5" height="15.0" fill="rgb(251,97,0)" rx="2" ry="2" />
<text  x="175.46" y="671.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt; &gt;::operator[] (344 samples, 0.37%)</title><rect x="631.9" y="549" width="4.4" height="15.0" fill="rgb(243,89,40)" rx="2" ry="2" />
<text  x="634.94" y="559.5" ></text>
</g>
<g >
<title>CSHA256::Write (15 samples, 0.02%)</title><rect x="1058.4" y="645" width="0.2" height="15.0" fill="rgb(246,93,23)" rx="2" ry="2" />
<text  x="1061.43" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (9 samples, 0.01%)</title><rect x="555.8" y="533" width="0.1" height="15.0" fill="rgb(251,31,48)" rx="2" ry="2" />
<text  x="558.79" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;void*, CLockLocation&gt; &gt; (17 samples, 0.02%)</title><rect x="794.0" y="549" width="0.2" height="15.0" fill="rgb(228,162,51)" rx="2" ry="2" />
<text  x="797.01" y="559.5" ></text>
</g>
<g >
<title>__os_calloc (42 samples, 0.05%)</title><rect x="73.5" y="485" width="0.6" height="15.0" fill="rgb(229,214,19)" rx="2" ry="2" />
<text  x="76.55" y="495.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt;&gt; (84 samples, 0.09%)</title><rect x="510.8" y="149" width="1.1" height="15.0" fill="rgb(207,220,40)" rx="2" ry="2" />
<text  x="513.79" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;COutPoint&gt; &gt; &gt;::allocate (59 samples, 0.06%)</title><rect x="1048.2" y="565" width="0.8" height="15.0" fill="rgb(214,229,38)" rx="2" ry="2" />
<text  x="1051.23" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;COutPoint&gt; &gt; &gt;::destroy&lt;COutPoint&gt; (8 samples, 0.01%)</title><rect x="1051.7" y="581" width="0.1" height="15.0" fill="rgb(212,97,10)" rx="2" ry="2" />
<text  x="1054.68" y="591.5" ></text>
</g>
<g >
<title>__env_close (12 samples, 0.01%)</title><rect x="162.4" y="453" width="0.1" height="15.0" fill="rgb(248,54,34)" rx="2" ry="2" />
<text  x="165.37" y="463.5" ></text>
</g>
<g >
<title>CDataStream::write (16 samples, 0.02%)</title><rect x="14.2" y="757" width="0.2" height="15.0" fill="rgb(228,199,40)" rx="2" ry="2" />
<text  x="17.20" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_erase_at_end (1,164 samples, 1.26%)</title><rect x="593.1" y="597" width="14.9" height="15.0" fill="rgb(218,95,49)" rx="2" ry="2" />
<text  x="596.10" y="607.5" ></text>
</g>
<g >
<title>BerkeleyBatch::ReadAtCursor (14,275 samples, 15.49%)</title><rect x="168.0" y="693" width="182.8" height="15.0" fill="rgb(213,136,7)" rx="2" ry="2" />
<text  x="170.97" y="703.5" >BerkeleyBatch::ReadAtCu..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::allocate (11 samples, 0.01%)</title><rect x="1087.3" y="517" width="0.1" height="15.0" fill="rgb(206,218,29)" rx="2" ry="2" />
<text  x="1090.28" y="527.5" ></text>
</g>
<g >
<title>CDataStream::read (50 samples, 0.05%)</title><rect x="40.9" y="517" width="0.6" height="15.0" fill="rgb(237,176,13)" rx="2" ry="2" />
<text  x="43.89" y="527.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt; &gt;::end (11 samples, 0.01%)</title><rect x="630.7" y="549" width="0.2" height="15.0" fill="rgb(210,99,7)" rx="2" ry="2" />
<text  x="633.74" y="559.5" ></text>
</g>
<g >
<title>CPubKey::GetID (146 samples, 0.16%)</title><rect x="1122.3" y="677" width="1.8" height="15.0" fill="rgb(213,205,27)" rx="2" ry="2" />
<text  x="1125.25" y="687.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 0.02%)</title><rect x="1146.2" y="725" width="0.3" height="15.0" fill="rgb(228,198,47)" rx="2" ry="2" />
<text  x="1149.23" y="735.5" ></text>
</g>
<g >
<title>CuckooCache::bit_packed_atomic_flags::setup (14 samples, 0.02%)</title><rect x="29.7" y="661" width="0.2" height="15.0" fill="rgb(239,39,35)" rx="2" ry="2" />
<text  x="32.68" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;CTransaction const,  (8 samples, 0.01%)</title><rect x="956.5" y="645" width="0.1" height="15.0" fill="rgb(229,78,44)" rx="2" ry="2" />
<text  x="959.46" y="655.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (19 samples, 0.02%)</title><rect x="1025.0" y="629" width="0.3" height="15.0" fill="rgb(230,38,19)" rx="2" ry="2" />
<text  x="1028.01" y="639.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (12 samples, 0.01%)</title><rect x="315.8" y="565" width="0.1" height="15.0" fill="rgb(233,48,29)" rx="2" ry="2" />
<text  x="318.76" y="575.5" ></text>
</g>
<g >
<title>CScript::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (93 samples, 0.10%)</title><rect x="510.7" y="181" width="1.2" height="15.0" fill="rgb(207,106,36)" rx="2" ry="2" />
<text  x="513.67" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::erase (8 samples, 0.01%)</title><rect x="1156.2" y="757" width="0.1" height="15.0" fill="rgb(217,76,19)" rx="2" ry="2" />
<text  x="1159.15" y="767.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, CBlockIndex*&gt;*, std::vector&lt;std::pair&lt;int, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;int, CBlockIndex*&gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (11 samples, 0.01%)</title><rect x="48.9" y="597" width="0.1" height="15.0" fill="rgb(237,125,47)" rx="2" ry="2" />
<text  x="51.91" y="607.5" ></text>
</g>
<g >
<title>_mm_add_epi32 (30 samples, 0.03%)</title><rect x="1134.1" y="645" width="0.4" height="15.0" fill="rgb(220,117,54)" rx="2" ry="2" />
<text  x="1137.11" y="655.5" ></text>
</g>
<g >
<title>COutPoint::Serialize&lt;CHashWriter&gt; (75 samples, 0.08%)</title><rect x="505.1" y="197" width="0.9" height="15.0" fill="rgb(219,34,27)" rx="2" ry="2" />
<text  x="508.06" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;::_Rb_tree_const_iterator (10 samples, 0.01%)</title><rect x="793.4" y="517" width="0.2" height="15.0" fill="rgb(247,115,54)" rx="2" ry="2" />
<text  x="796.43" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::max_size (80 samples, 0.09%)</title><rect x="467.1" y="293" width="1.0" height="15.0" fill="rgb(220,29,17)" rx="2" ry="2" />
<text  x="470.05" y="303.5" ></text>
</g>
<g >
<title>CSHA256::Write (12 samples, 0.01%)</title><rect x="512.2" y="149" width="0.2" height="15.0" fill="rgb(238,223,28)" rx="2" ry="2" />
<text  x="515.25" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_M_check_len (32 samples, 0.03%)</title><rect x="622.9" y="629" width="0.4" height="15.0" fill="rgb(246,108,29)" rx="2" ry="2" />
<text  x="625.89" y="639.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (16 samples, 0.02%)</title><rect x="131.2" y="421" width="0.2" height="15.0" fill="rgb(252,50,32)" rx="2" ry="2" />
<text  x="134.19" y="431.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (13 samples, 0.01%)</title><rect x="127.2" y="421" width="0.2" height="15.0" fill="rgb(218,227,33)" rx="2" ry="2" />
<text  x="130.23" y="431.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (11 samples, 0.01%)</title><rect x="104.7" y="373" width="0.1" height="15.0" fill="rgb(251,187,10)" rx="2" ry="2" />
<text  x="107.67" y="383.5" ></text>
</g>
<g >
<title>CHash160::Finalize (161 samples, 0.17%)</title><rect x="1124.1" y="629" width="2.1" height="15.0" fill="rgb(232,119,29)" rx="2" ry="2" />
<text  x="1127.12" y="639.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt;&gt; (82 samples, 0.09%)</title><rect x="506.5" y="149" width="1.0" height="15.0" fill="rgb(238,172,21)" rx="2" ry="2" />
<text  x="509.47" y="159.5" ></text>
</g>
<g >
<title>base_uint&lt;256u&gt;::operator&lt;&lt;= (11 samples, 0.01%)</title><rect x="46.8" y="629" width="0.1" height="15.0" fill="rgb(234,39,26)" rx="2" ry="2" />
<text  x="49.78" y="639.5" ></text>
</g>
<g >
<title>CSHA256::Write (13 samples, 0.01%)</title><rect x="1058.7" y="645" width="0.2" height="15.0" fill="rgb(254,8,6)" rx="2" ry="2" />
<text  x="1061.75" y="655.5" ></text>
</g>
<g >
<title>operator&lt; (45 samples, 0.05%)</title><rect x="1150.9" y="757" width="0.6" height="15.0" fill="rgb(253,103,52)" rx="2" ry="2" />
<text  x="1153.93" y="767.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_Vector_base (9 samples, 0.01%)</title><rect x="485.7" y="261" width="0.1" height="15.0" fill="rgb(227,133,45)" rx="2" ry="2" />
<text  x="488.73" y="271.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (15 samples, 0.02%)</title><rect x="321.7" y="581" width="0.2" height="15.0" fill="rgb(236,145,5)" rx="2" ry="2" />
<text  x="324.70" y="591.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::capacity (8 samples, 0.01%)</title><rect x="762.2" y="437" width="0.1" height="15.0" fill="rgb(253,93,24)" rx="2" ry="2" />
<text  x="765.20" y="447.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (9 samples, 0.01%)</title><rect x="139.7" y="437" width="0.1" height="15.0" fill="rgb(240,82,4)" rx="2" ry="2" />
<text  x="142.65" y="447.5" ></text>
</g>
<g >
<title>uint256::uint256 (30 samples, 0.03%)</title><rect x="31.0" y="565" width="0.4" height="15.0" fill="rgb(251,15,9)" rx="2" ry="2" />
<text  x="33.99" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;CTxOut&gt;::allocate (29 samples, 0.03%)</title><rect x="453.1" y="293" width="0.4" height="15.0" fill="rgb(211,129,52)" rx="2" ry="2" />
<text  x="456.13" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (9 samples, 0.01%)</title><rect x="811.4" y="325" width="0.1" height="15.0" fill="rgb(214,200,12)" rx="2" ry="2" />
<text  x="814.37" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKeyMetadata&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt;::_S_key (14 samples, 0.02%)</title><rect x="857.0" y="613" width="0.2" height="15.0" fill="rgb(247,186,28)" rx="2" ry="2" />
<text  x="859.99" y="623.5" ></text>
</g>
<g >
<title>__memp_bhfree (89 samples, 0.10%)</title><rect x="159.2" y="549" width="1.2" height="15.0" fill="rgb(210,57,25)" rx="2" ry="2" />
<text  x="162.24" y="559.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (53 samples, 0.06%)</title><rect x="305.1" y="629" width="0.7" height="15.0" fill="rgb(231,213,36)" rx="2" ry="2" />
<text  x="308.10" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_M_emplace_unique&lt;uint256&amp;, CWalletTx&amp;&gt; (1,310 samples, 1.42%)</title><rect x="968.4" y="645" width="16.7" height="15.0" fill="rgb(228,103,3)" rx="2" ry="2" />
<text  x="971.36" y="655.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.02%)</title><rect x="79.3" y="325" width="0.3" height="15.0" fill="rgb(232,138,4)" rx="2" ry="2" />
<text  x="82.35" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::vector (14 samples, 0.02%)</title><rect x="444.5" y="229" width="0.2" height="15.0" fill="rgb(206,149,48)" rx="2" ry="2" />
<text  x="447.54" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;CTxIn const*, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt;::__normal_iterator (13 samples, 0.01%)</title><rect x="494.4" y="277" width="0.2" height="15.0" fill="rgb(221,48,29)" rx="2" ry="2" />
<text  x="497.41" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::end (31 samples, 0.03%)</title><rect x="518.3" y="293" width="0.4" height="15.0" fill="rgb(215,38,25)" rx="2" ry="2" />
<text  x="521.29" y="303.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;void*, void*&gt; &gt;::operator (56 samples, 0.06%)</title><rect x="792.5" y="517" width="0.7" height="15.0" fill="rgb(229,133,43)" rx="2" ry="2" />
<text  x="795.48" y="527.5" ></text>
</g>
<g >
<title>boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt;::~variant (74 samples, 0.08%)</title><rect x="770.6" y="613" width="1.0" height="15.0" fill="rgb(210,34,42)" rx="2" ry="2" />
<text  x="773.62" y="623.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;LockedPool::LockedPageArena&gt;::operator* (15 samples, 0.02%)</title><rect x="1094.0" y="581" width="0.2" height="15.0" fill="rgb(229,150,31)" rx="2" ry="2" />
<text  x="1096.98" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt; &gt;::allocate (30 samples, 0.03%)</title><rect x="856.4" y="597" width="0.4" height="15.0" fill="rgb(207,6,4)" rx="2" ry="2" />
<text  x="859.41" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (10 samples, 0.01%)</title><rect x="540.4" y="613" width="0.1" height="15.0" fill="rgb(226,72,43)" rx="2" ry="2" />
<text  x="543.37" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt;::_M_ptr (37 samples, 0.04%)</title><rect x="860.4" y="549" width="0.4" height="15.0" fill="rgb(229,207,28)" rx="2" ry="2" />
<text  x="863.36" y="559.5" ></text>
</g>
<g >
<title>__db_cursor_int (20 samples, 0.02%)</title><rect x="81.3" y="453" width="0.2" height="15.0" fill="rgb(226,2,0)" rx="2" ry="2" />
<text  x="84.28" y="463.5" ></text>
</g>
<g >
<title>__dbc_cleanup (14 samples, 0.02%)</title><rect x="146.5" y="533" width="0.2" height="15.0" fill="rgb(240,193,26)" rx="2" ry="2" />
<text  x="149.51" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;uint256, std::allocator&lt;uint256&gt; &gt;::resize (54 samples, 0.06%)</title><rect x="30.7" y="661" width="0.7" height="15.0" fill="rgb(232,225,43)" rx="2" ry="2" />
<text  x="33.71" y="671.5" ></text>
</g>
<g >
<title>__db_retcopy (166 samples, 0.18%)</title><rect x="330.8" y="629" width="2.1" height="15.0" fill="rgb(206,218,45)" rx="2" ry="2" />
<text  x="333.78" y="639.5" ></text>
</g>
<g >
<title>memory_cleanse (11 samples, 0.01%)</title><rect x="1095.2" y="597" width="0.1" height="15.0" fill="rgb(228,134,51)" rx="2" ry="2" />
<text  x="1098.17" y="607.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, prevector&lt;28u, unsigned char, unsigned int, int&gt;&amp;&gt; (234 samples, 0.25%)</title><rect x="438.7" y="229" width="3.0" height="15.0" fill="rgb(209,5,50)" rx="2" ry="2" />
<text  x="441.68" y="239.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;int&amp;&gt; (19 samples, 0.02%)</title><rect x="408.3" y="629" width="0.3" height="15.0" fill="rgb(227,204,32)" rx="2" ry="2" />
<text  x="411.35" y="639.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;BerkeleyEnvironment&gt; &gt;::destroy&lt;BerkeleyEnvironment&gt; (13 samples, 0.01%)</title><rect x="162.4" y="549" width="0.1" height="15.0" fill="rgb(211,95,46)" rx="2" ry="2" />
<text  x="165.36" y="559.5" ></text>
</g>
<g >
<title>LockedPool::alloc (531 samples, 0.58%)</title><rect x="565.5" y="549" width="6.8" height="15.0" fill="rgb(254,138,4)" rx="2" ry="2" />
<text  x="568.50" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CBlockIndex*, CBlockIndex*, std::_Identity&lt;CBlockIndex*&gt;, CBlockIndexWorkComparator, std::allocator&lt;CBlockIndex*&gt; &gt;::_M_create_node&lt;CBlockIndex* const&amp;&gt; (10 samples, 0.01%)</title><rect x="48.6" y="613" width="0.1" height="15.0" fill="rgb(210,61,8)" rx="2" ry="2" />
<text  x="51.61" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;::operator-- (41 samples, 0.04%)</title><rect x="775.1" y="565" width="0.5" height="15.0" fill="rgb(217,93,34)" rx="2" ry="2" />
<text  x="778.08" y="575.5" ></text>
</g>
<g >
<title>__memp_fput (27 samples, 0.03%)</title><rect x="114.3" y="405" width="0.3" height="15.0" fill="rgb(212,115,23)" rx="2" ry="2" />
<text  x="117.28" y="415.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::fill&lt;prevector&lt;28u, unsigned char, unsigned int, int&gt;::const_iterator&gt; (107 samples, 0.12%)</title><rect x="661.1" y="597" width="1.3" height="15.0" fill="rgb(240,75,16)" rx="2" ry="2" />
<text  x="664.07" y="607.5" ></text>
</g>
<g >
<title>__libc_pwrite64 (14 samples, 0.02%)</title><rect x="89.1" y="325" width="0.1" height="15.0" fill="rgb(206,212,15)" rx="2" ry="2" />
<text  x="92.06" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (42 samples, 0.05%)</title><rect x="421.6" y="549" width="0.5" height="15.0" fill="rgb(218,158,46)" rx="2" ry="2" />
<text  x="424.57" y="559.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::recursive_mutex&gt;::unique_lock (8 samples, 0.01%)</title><rect x="850.6" y="629" width="0.1" height="15.0" fill="rgb(210,137,41)" rx="2" ry="2" />
<text  x="853.59" y="639.5" ></text>
</g>
<g >
<title>_mm_set_epi64x (34 samples, 0.04%)</title><rect x="1134.5" y="645" width="0.4" height="15.0" fill="rgb(235,73,12)" rx="2" ry="2" />
<text  x="1137.50" y="655.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::change_capacity (13 samples, 0.01%)</title><rect x="759.9" y="437" width="0.2" height="15.0" fill="rgb(241,121,14)" rx="2" ry="2" />
<text  x="762.89" y="447.5" ></text>
</g>
<g >
<title>execute_native_thread_routine (34 samples, 0.04%)</title><rect x="1146.9" y="725" width="0.4" height="15.0" fill="rgb(234,29,37)" rx="2" ry="2" />
<text  x="1149.87" y="735.5" ></text>
</g>
<g >
<title>__bam_search (62 samples, 0.07%)</title><rect x="93.1" y="405" width="0.7" height="15.0" fill="rgb(250,54,5)" rx="2" ry="2" />
<text  x="96.05" y="415.5" ></text>
</g>
<g >
<title>std::operator== (8 samples, 0.01%)</title><rect x="891.2" y="597" width="0.1" height="15.0" fill="rgb(238,23,17)" rx="2" ry="2" />
<text  x="894.21" y="607.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;CMerkleTx*&gt; (13 samples, 0.01%)</title><rect x="556.7" y="597" width="0.2" height="15.0" fill="rgb(226,161,28)" rx="2" ry="2" />
<text  x="559.73" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, unsigned long, false&gt;::_S_equals (18 samples, 0.02%)</title><rect x="810.8" y="293" width="0.3" height="15.0" fill="rgb(223,208,11)" rx="2" ry="2" />
<text  x="813.85" y="303.5" ></text>
</g>
<g >
<title>CSizeComputer::operator&lt;&lt; &lt;std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; &gt; (303 samples, 0.33%)</title><rect x="1038.7" y="581" width="3.9" height="15.0" fill="rgb(209,171,34)" rx="2" ry="2" />
<text  x="1041.74" y="591.5" ></text>
</g>
<g >
<title>_mm_set_epi64x (17 samples, 0.02%)</title><rect x="1142.6" y="149" width="0.2" height="15.0" fill="rgb(207,214,26)" rx="2" ry="2" />
<text  x="1145.60" y="159.5" ></text>
</g>
<g >
<title>__GI___ctype_init (26 samples, 0.03%)</title><rect x="1146.5" y="725" width="0.3" height="15.0" fill="rgb(234,75,4)" rx="2" ry="2" />
<text  x="1149.47" y="735.5" ></text>
</g>
<g >
<title>CWalletTx::Init (40 samples, 0.04%)</title><rect x="1022.8" y="661" width="0.5" height="15.0" fill="rgb(208,40,6)" rx="2" ry="2" />
<text  x="1025.82" y="671.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;CTxOut*, CTxOut&gt; (15 samples, 0.02%)</title><rect x="452.8" y="325" width="0.2" height="15.0" fill="rgb(225,152,4)" rx="2" ry="2" />
<text  x="455.80" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator* (12 samples, 0.01%)</title><rect x="537.5" y="597" width="0.2" height="15.0" fill="rgb(246,42,5)" rx="2" ry="2" />
<text  x="540.53" y="607.5" ></text>
</g>
<g >
<title>CSHA256::Write (13 samples, 0.01%)</title><rect x="505.8" y="69" width="0.1" height="15.0" fill="rgb(234,11,46)" rx="2" ry="2" />
<text  x="508.78" y="79.5" ></text>
</g>
<g >
<title>CHash256::Finalize (92 samples, 0.10%)</title><rect x="500.9" y="389" width="1.2" height="15.0" fill="rgb(242,158,25)" rx="2" ry="2" />
<text  x="503.92" y="399.5" ></text>
</g>
<g >
<title>std::__addressof&lt;unsigned char&gt; (25 samples, 0.03%)</title><rect x="620.8" y="613" width="0.3" height="15.0" fill="rgb(221,164,11)" rx="2" ry="2" />
<text  x="623.79" y="623.5" ></text>
</g>
<g >
<title>__lock_get_internal (14 samples, 0.02%)</title><rect x="139.4" y="453" width="0.2" height="15.0" fill="rgb(247,181,9)" rx="2" ry="2" />
<text  x="142.42" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (13 samples, 0.01%)</title><rect x="1085.9" y="533" width="0.2" height="15.0" fill="rgb(219,146,51)" rx="2" ry="2" />
<text  x="1088.95" y="543.5" ></text>
</g>
<g >
<title>__db_cursor (9 samples, 0.01%)</title><rect x="92.8" y="453" width="0.1" height="15.0" fill="rgb(209,148,53)" rx="2" ry="2" />
<text  x="95.83" y="463.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter&gt; (50 samples, 0.05%)</title><rect x="497.9" y="213" width="0.7" height="15.0" fill="rgb(210,50,28)" rx="2" ry="2" />
<text  x="500.92" y="223.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream&gt; (32 samples, 0.03%)</title><rect x="437.5" y="197" width="0.4" height="15.0" fill="rgb(242,46,47)" rx="2" ry="2" />
<text  x="440.47" y="207.5" ></text>
</g>
<g >
<title>CuckooCache::bit_packed_atomic_flags::setup (14 samples, 0.02%)</title><rect x="30.5" y="661" width="0.2" height="15.0" fill="rgb(208,27,43)" rx="2" ry="2" />
<text  x="33.53" y="671.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_M_allocate (560 samples, 0.61%)</title><rect x="565.4" y="597" width="7.2" height="15.0" fill="rgb(223,216,48)" rx="2" ry="2" />
<text  x="568.38" y="607.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, CScript&amp;&gt; (291 samples, 0.32%)</title><rect x="438.0" y="309" width="3.7" height="15.0" fill="rgb(242,224,46)" rx="2" ry="2" />
<text  x="441.01" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_Vector_base (11 samples, 0.01%)</title><rect x="444.6" y="213" width="0.1" height="15.0" fill="rgb(231,75,21)" rx="2" ry="2" />
<text  x="447.58" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_erase_at_end (17 samples, 0.02%)</title><rect x="459.8" y="309" width="0.2" height="15.0" fill="rgb(221,217,6)" rx="2" ry="2" />
<text  x="462.77" y="319.5" ></text>
</g>
<g >
<title>_mm_set_epi64x (9 samples, 0.01%)</title><rect x="1121.4" y="581" width="0.1" height="15.0" fill="rgb(242,124,36)" rx="2" ry="2" />
<text  x="1124.42" y="591.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;BerkeleyEnvironment, std::allocator&lt;BerkeleyEnvironment&gt;,  (13 samples, 0.01%)</title><rect x="162.4" y="565" width="0.1" height="15.0" fill="rgb(242,49,44)" rx="2" ry="2" />
<text  x="165.36" y="575.5" ></text>
</g>
<g >
<title>__db_vrfy_ccset (484 samples, 0.53%)</title><rect x="74.4" y="501" width="6.2" height="15.0" fill="rgb(231,152,7)" rx="2" ry="2" />
<text  x="77.37" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::emplace&lt;char*, unsigned long&amp;&gt; (243 samples, 0.26%)</title><rect x="615.8" y="533" width="3.1" height="15.0" fill="rgb(248,45,53)" rx="2" ry="2" />
<text  x="618.82" y="543.5" ></text>
</g>
<g >
<title>CSHA256::Finalize (101 samples, 0.11%)</title><rect x="481.2" y="373" width="1.3" height="15.0" fill="rgb(249,53,11)" rx="2" ry="2" />
<text  x="484.18" y="383.5" ></text>
</g>
<g >
<title>std::tuple&lt;CKeyID const&amp;&gt;::tuple&lt;void, true&gt; (12 samples, 0.01%)</title><rect x="865.7" y="645" width="0.2" height="15.0" fill="rgb(226,6,35)" rx="2" ry="2" />
<text  x="868.71" y="655.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.01%)</title><rect x="89.1" y="293" width="0.1" height="15.0" fill="rgb(215,81,6)" rx="2" ry="2" />
<text  x="92.08" y="303.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned (10 samples, 0.01%)</title><rect x="463.9" y="197" width="0.2" height="15.0" fill="rgb(237,170,31)" rx="2" ry="2" />
<text  x="466.93" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (105 samples, 0.11%)</title><rect x="636.5" y="517" width="1.3" height="15.0" fill="rgb(208,26,36)" rx="2" ry="2" />
<text  x="639.47" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_M_get_node (36 samples, 0.04%)</title><rect x="773.8" y="565" width="0.4" height="15.0" fill="rgb(239,133,33)" rx="2" ry="2" />
<text  x="776.77" y="575.5" ></text>
</g>
<g >
<title>std::forward&lt;char const&amp;&gt; (9 samples, 0.01%)</title><rect x="38.7" y="565" width="0.1" height="15.0" fill="rgb(217,61,40)" rx="2" ry="2" />
<text  x="41.71" y="575.5" ></text>
</g>
<g >
<title>CPubKey::GetID (46 samples, 0.05%)</title><rect x="865.9" y="661" width="0.6" height="15.0" fill="rgb(207,192,47)" rx="2" ry="2" />
<text  x="868.92" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::vector (23 samples, 0.02%)</title><rect x="432.3" y="341" width="0.3" height="15.0" fill="rgb(249,146,17)" rx="2" ry="2" />
<text  x="435.30" y="351.5" ></text>
</g>
<g >
<title>__db_lget (20 samples, 0.02%)</title><rect x="107.6" y="405" width="0.3" height="15.0" fill="rgb(205,108,8)" rx="2" ry="2" />
<text  x="110.64" y="415.5" ></text>
</g>
<g >
<title>CHash256::Write (361 samples, 0.39%)</title><rect x="1114.6" y="293" width="4.6" height="15.0" fill="rgb(225,45,33)" rx="2" ry="2" />
<text  x="1117.57" y="303.5" ></text>
</g>
<g >
<title>__os_io (34 samples, 0.04%)</title><rect x="123.4" y="469" width="0.5" height="15.0" fill="rgb(234,191,33)" rx="2" ry="2" />
<text  x="126.42" y="479.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (400 samples, 0.43%)</title><rect x="513.7" y="309" width="5.1" height="15.0" fill="rgb(246,104,24)" rx="2" ry="2" />
<text  x="516.70" y="319.5" ></text>
</g>
<g >
<title>std::map&lt;CKeyID, CKey, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::lower_bound (781 samples, 0.85%)</title><rect x="826.8" y="613" width="10.0" height="15.0" fill="rgb(226,43,19)" rx="2" ry="2" />
<text  x="829.75" y="623.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (12 samples, 0.01%)</title><rect x="789.1" y="565" width="0.2" height="15.0" fill="rgb(253,220,20)" rx="2" ry="2" />
<text  x="792.10" y="575.5" ></text>
</g>
<g >
<title>zero_after_free_allocator&lt;char&gt;::deallocate (159 samples, 0.17%)</title><rect x="356.1" y="613" width="2.0" height="15.0" fill="rgb(240,90,34)" rx="2" ry="2" />
<text  x="359.06" y="623.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_a&lt;unsigned char*, unsigned char*, std::allocator&lt;unsigned char&gt; &gt; (83 samples, 0.09%)</title><rect x="1100.9" y="629" width="1.1" height="15.0" fill="rgb(239,71,1)" rx="2" ry="2" />
<text  x="1103.93" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::end (12 samples, 0.01%)</title><rect x="941.1" y="613" width="0.2" height="15.0" fill="rgb(239,191,38)" rx="2" ry="2" />
<text  x="944.12" y="623.5" ></text>
</g>
<g >
<title>ShiftMessageB (20 samples, 0.02%)</title><rect x="1131.5" y="645" width="0.2" height="15.0" fill="rgb(224,171,36)" rx="2" ry="2" />
<text  x="1134.49" y="655.5" ></text>
</g>
<g >
<title>__memp_fget (26 samples, 0.03%)</title><rect x="75.4" y="405" width="0.3" height="15.0" fill="rgb(250,210,33)" rx="2" ry="2" />
<text  x="78.40" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_default_append (10 samples, 0.01%)</title><rect x="1181.4" y="757" width="0.1" height="15.0" fill="rgb(231,183,19)" rx="2" ry="2" />
<text  x="1184.37" y="767.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (29 samples, 0.03%)</title><rect x="1098.2" y="613" width="0.3" height="15.0" fill="rgb(207,50,42)" rx="2" ry="2" />
<text  x="1101.16" y="623.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, zero_after_free_allocator&lt;char&gt; &gt; (115 samples, 0.12%)</title><rect x="590.9" y="581" width="1.5" height="15.0" fill="rgb(216,93,35)" rx="2" ry="2" />
<text  x="593.92" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_M_deallocate (1,183 samples, 1.28%)</title><rect x="1080.2" y="645" width="15.1" height="15.0" fill="rgb(235,67,46)" rx="2" ry="2" />
<text  x="1083.16" y="655.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTxIn, std::allocator&lt;CTxIn&gt; &gt; (271 samples, 0.29%)</title><rect x="1137.3" y="453" width="3.5" height="15.0" fill="rgb(247,192,28)" rx="2" ry="2" />
<text  x="1140.31" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (13 samples, 0.01%)</title><rect x="542.0" y="629" width="0.2" height="15.0" fill="rgb(216,59,4)" rx="2" ry="2" />
<text  x="545.04" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (41 samples, 0.04%)</title><rect x="613.4" y="469" width="0.5" height="15.0" fill="rgb(242,153,33)" rx="2" ry="2" />
<text  x="616.42" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::_S_destroy&lt;zero_after_free_allocator&lt;char&gt;, char&gt; (632 samples, 0.69%)</title><rect x="400.1" y="501" width="8.1" height="15.0" fill="rgb(239,49,13)" rx="2" ry="2" />
<text  x="403.10" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (8 samples, 0.01%)</title><rect x="1059.1" y="661" width="0.1" height="15.0" fill="rgb(224,196,10)" rx="2" ry="2" />
<text  x="1062.05" y="671.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, unsigned char const*, unsigned char*&gt; (23 samples, 0.02%)</title><rect x="1100.6" y="565" width="0.3" height="15.0" fill="rgb(242,169,9)" rx="2" ry="2" />
<text  x="1103.61" y="575.5" ></text>
</g>
<g >
<title>LockedPoolManager::Instance (17 samples, 0.02%)</title><rect x="639.2" y="581" width="0.3" height="15.0" fill="rgb(209,100,47)" rx="2" ry="2" />
<text  x="642.24" y="591.5" ></text>
</g>
<g >
<title>CHash256::Write (403 samples, 0.44%)</title><rect x="1132.1" y="709" width="5.2" height="15.0" fill="rgb(225,195,54)" rx="2" ry="2" />
<text  x="1135.11" y="719.5" ></text>
</g>
<g >
<title>__gthread_once (13 samples, 0.01%)</title><rect x="816.3" y="373" width="0.1" height="15.0" fill="rgb(252,97,54)" rx="2" ry="2" />
<text  x="819.27" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, interfaces::Chain::Lock*, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt; (27 samples, 0.03%)</title><rect x="1018.4" y="597" width="0.3" height="15.0" fill="rgb(214,176,35)" rx="2" ry="2" />
<text  x="1021.35" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (10 samples, 0.01%)</title><rect x="418.2" y="485" width="0.2" height="15.0" fill="rgb(240,50,1)" rx="2" ry="2" />
<text  x="421.25" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (68 samples, 0.07%)</title><rect x="183.8" y="549" width="0.9" height="15.0" fill="rgb(218,184,36)" rx="2" ry="2" />
<text  x="186.84" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_erase_at_end (10 samples, 0.01%)</title><rect x="1179.9" y="741" width="0.2" height="15.0" fill="rgb(215,227,7)" rx="2" ry="2" />
<text  x="1182.95" y="751.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;CTxIn*, CTxIn&gt; (12 samples, 0.01%)</title><rect x="443.1" y="325" width="0.2" height="15.0" fill="rgb(249,35,43)" rx="2" ry="2" />
<text  x="446.13" y="335.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::size (8 samples, 0.01%)</title><rect x="1040.6" y="325" width="0.1" height="15.0" fill="rgb(233,0,30)" rx="2" ry="2" />
<text  x="1043.56" y="335.5" ></text>
</g>
<g >
<title>LookupBlockIndex (11 samples, 0.01%)</title><rect x="20.9" y="757" width="0.2" height="15.0" fill="rgb(223,11,28)" rx="2" ry="2" />
<text  x="23.94" y="767.5" ></text>
</g>
<g >
<title>CKey::begin (8 samples, 0.01%)</title><rect x="624.9" y="661" width="0.1" height="15.0" fill="rgb(220,30,6)" rx="2" ry="2" />
<text  x="627.93" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned char&gt; &gt;::allocate (11 samples, 0.01%)</title><rect x="1104.0" y="645" width="0.1" height="15.0" fill="rgb(205,85,54)" rx="2" ry="2" />
<text  x="1106.98" y="655.5" ></text>
</g>
<g >
<title>CBlockIndex::CBlockIndex (10 samples, 0.01%)</title><rect x="44.6" y="597" width="0.1" height="15.0" fill="rgb(236,209,21)" rx="2" ry="2" />
<text  x="47.62" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;::_Rb_tree_const_iterator (8 samples, 0.01%)</title><rect x="684.7" y="533" width="0.1" height="15.0" fill="rgb(223,199,44)" rx="2" ry="2" />
<text  x="687.66" y="543.5" ></text>
</g>
<g >
<title>__memp_fget (21 samples, 0.02%)</title><rect x="83.5" y="389" width="0.3" height="15.0" fill="rgb(247,228,24)" rx="2" ry="2" />
<text  x="86.52" y="399.5" ></text>
</g>
<g >
<title>LeaveCritical (67 samples, 0.07%)</title><rect x="1020.2" y="581" width="0.8" height="15.0" fill="rgb(224,114,44)" rx="2" ry="2" />
<text  x="1023.16" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, CScriptID const&amp;&gt;::_Tuple_impl (11 samples, 0.01%)</title><rect x="787.0" y="581" width="0.1" height="15.0" fill="rgb(217,170,0)" rx="2" ry="2" />
<text  x="790.00" y="591.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, CScript&gt; (130 samples, 0.14%)</title><rect x="496.0" y="229" width="1.6" height="15.0" fill="rgb(207,110,5)" rx="2" ry="2" />
<text  x="498.98" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::_M_insert_node (64 samples, 0.07%)</title><rect x="824.4" y="597" width="0.9" height="15.0" fill="rgb(233,54,41)" rx="2" ry="2" />
<text  x="827.44" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;CTransaction const,  (14 samples, 0.02%)</title><rect x="1065.3" y="677" width="0.2" height="15.0" fill="rgb(210,143,44)" rx="2" ry="2" />
<text  x="1068.33" y="687.5" ></text>
</g>
<g >
<title>_mm_set_epi64x (12 samples, 0.01%)</title><rect x="163.6" y="133" width="0.1" height="15.0" fill="rgb(226,202,28)" rx="2" ry="2" />
<text  x="166.59" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (43 samples, 0.05%)</title><rect x="615.1" y="485" width="0.6" height="15.0" fill="rgb(247,45,6)" rx="2" ry="2" />
<text  x="618.14" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;CTxIn const*, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt; (11 samples, 0.01%)</title><rect x="1053.0" y="645" width="0.1" height="15.0" fill="rgb(217,132,21)" rx="2" ry="2" />
<text  x="1055.97" y="655.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (45 samples, 0.05%)</title><rect x="332.3" y="597" width="0.6" height="15.0" fill="rgb(223,159,1)" rx="2" ry="2" />
<text  x="335.33" y="607.5" ></text>
</g>
<g >
<title>std::make_pair&lt;void* const&amp;, void*&amp;&gt; (22 samples, 0.02%)</title><rect x="841.4" y="581" width="0.2" height="15.0" fill="rgb(222,106,5)" rx="2" ry="2" />
<text  x="844.35" y="591.5" ></text>
</g>
<g >
<title>InitScriptExecutionCache (66 samples, 0.07%)</title><rect x="29.7" y="709" width="0.8" height="15.0" fill="rgb(234,71,41)" rx="2" ry="2" />
<text  x="32.68" y="719.5" ></text>
</g>
<g >
<title>CHash256::Write (21 samples, 0.02%)</title><rect x="484.6" y="277" width="0.3" height="15.0" fill="rgb(234,226,18)" rx="2" ry="2" />
<text  x="487.63" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (283 samples, 0.31%)</title><rect x="887.6" y="501" width="3.6" height="15.0" fill="rgb(236,135,15)" rx="2" ry="2" />
<text  x="890.58" y="511.5" ></text>
</g>
<g >
<title>CTransaction::ComputeWitnessHash (630 samples, 0.68%)</title><rect x="1111.1" y="485" width="8.1" height="15.0" fill="rgb(241,222,31)" rx="2" ry="2" />
<text  x="1114.12" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::_S_key (8 samples, 0.01%)</title><rect x="825.3" y="597" width="0.1" height="15.0" fill="rgb(223,1,19)" rx="2" ry="2" />
<text  x="828.26" y="607.5" ></text>
</g>
<g >
<title>secp256k1_fe_mul_inner (15 samples, 0.02%)</title><rect x="1149.6" y="581" width="0.2" height="15.0" fill="rgb(235,111,51)" rx="2" ry="2" />
<text  x="1152.61" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;interfaces::(anonymous namespace)::LockImpl, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt;::~unique_ptr (21 samples, 0.02%)</title><rect x="953.5" y="629" width="0.3" height="15.0" fill="rgb(240,219,19)" rx="2" ry="2" />
<text  x="956.51" y="639.5" ></text>
</g>
<g >
<title>CPubKey::IsCompressed (13 samples, 0.01%)</title><rect x="625.0" y="661" width="0.2" height="15.0" fill="rgb(237,224,16)" rx="2" ry="2" />
<text  x="628.04" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::erase[abi:cxx11] (9 samples, 0.01%)</title><rect x="630.6" y="533" width="0.1" height="15.0" fill="rgb(218,14,0)" rx="2" ry="2" />
<text  x="633.59" y="543.5" ></text>
</g>
<g >
<title>__db_lput (222 samples, 0.24%)</title><rect x="336.0" y="581" width="2.8" height="15.0" fill="rgb(226,195,5)" rx="2" ry="2" />
<text  x="339.00" y="591.5" ></text>
</g>
<g >
<title>std::map&lt;CScriptID, CScript, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::operator[] (11 samples, 0.01%)</title><rect x="1175.3" y="757" width="0.1" height="15.0" fill="rgb(227,227,31)" rx="2" ry="2" />
<text  x="1178.26" y="767.5" ></text>
</g>
<g >
<title>ser_writedata8&lt;CHashWriter&gt; (10 samples, 0.01%)</title><rect x="512.5" y="277" width="0.2" height="15.0" fill="rgb(245,162,8)" rx="2" ry="2" />
<text  x="515.54" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::~_Vector_base (21 samples, 0.02%)</title><rect x="504.1" y="261" width="0.2" height="15.0" fill="rgb(218,73,46)" rx="2" ry="2" />
<text  x="507.08" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::find (359 samples, 0.39%)</title><rect x="843.9" y="565" width="4.6" height="15.0" fill="rgb(227,149,23)" rx="2" ry="2" />
<text  x="846.89" y="575.5" ></text>
</g>
<g >
<title>_int_malloc (18 samples, 0.02%)</title><rect x="1003.7" y="533" width="0.3" height="15.0" fill="rgb(240,82,41)" rx="2" ry="2" />
<text  x="1006.73" y="543.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, 28u, unsigned char&gt; (104 samples, 0.11%)</title><rect x="449.3" y="197" width="1.3" height="15.0" fill="rgb(210,57,22)" rx="2" ry="2" />
<text  x="452.25" y="207.5" ></text>
</g>
<g >
<title>QuadRound (111 samples, 0.12%)</title><rect x="1126.4" y="565" width="1.5" height="15.0" fill="rgb(208,23,30)" rx="2" ry="2" />
<text  x="1129.44" y="575.5" ></text>
</g>
<g >
<title>std::_List_node&lt;LockedPool::LockedPageArena&gt;::_M_valptr (8 samples, 0.01%)</title><rect x="619.1" y="549" width="0.1" height="15.0" fill="rgb(235,77,38)" rx="2" ry="2" />
<text  x="622.08" y="559.5" ></text>
</g>
<g >
<title>std::move&lt;std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;&amp;&gt; (9 samples, 0.01%)</title><rect x="521.7" y="437" width="0.1" height="15.0" fill="rgb(252,123,12)" rx="2" ry="2" />
<text  x="524.69" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;LockedPool::LockedPageArena, std::allocator&lt;LockedPool::LockedPageArena&gt; &gt;::begin (15 samples, 0.02%)</title><rect x="619.2" y="565" width="0.2" height="15.0" fill="rgb(223,195,40)" rx="2" ry="2" />
<text  x="622.18" y="575.5" ></text>
</g>
<g >
<title>UniqueLock&lt;AnnotatedMixin&lt;std::recursive_mutex&gt;, std::unique_lock&lt;std::recursive_mutex&gt; &gt;::~UniqueLock (51 samples, 0.06%)</title><rect x="850.7" y="645" width="0.6" height="15.0" fill="rgb(225,72,11)" rx="2" ry="2" />
<text  x="853.69" y="655.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (9 samples, 0.01%)</title><rect x="1165.3" y="757" width="0.1" height="15.0" fill="rgb(238,88,12)" rx="2" ry="2" />
<text  x="1168.33" y="767.5" ></text>
</g>
<g >
<title>ReadCompactSize&lt;CDataStream&gt; (16 samples, 0.02%)</title><rect x="529.5" y="581" width="0.2" height="15.0" fill="rgb(245,70,26)" rx="2" ry="2" />
<text  x="532.46" y="591.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::operator++ (14 samples, 0.02%)</title><rect x="1055.6" y="613" width="0.1" height="15.0" fill="rgb(212,135,16)" rx="2" ry="2" />
<text  x="1058.56" y="623.5" ></text>
</g>
<g >
<title>operator&lt; (150 samples, 0.16%)</title><rect x="939.1" y="581" width="1.9" height="15.0" fill="rgb(213,117,1)" rx="2" ry="2" />
<text  x="942.09" y="591.5" ></text>
</g>
<g >
<title>__db_vrfy_pgset_inc (609 samples, 0.66%)</title><rect x="102.4" y="501" width="7.8" height="15.0" fill="rgb(223,87,4)" rx="2" ry="2" />
<text  x="105.44" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (9 samples, 0.01%)</title><rect x="631.3" y="485" width="0.1" height="15.0" fill="rgb(240,194,6)" rx="2" ry="2" />
<text  x="634.27" y="495.5" ></text>
</g>
<g >
<title>operator&lt; (494 samples, 0.54%)</title><rect x="780.6" y="533" width="6.3" height="15.0" fill="rgb(216,177,54)" rx="2" ry="2" />
<text  x="783.56" y="543.5" ></text>
</g>
<g >
<title>secure_allocator&lt;unsigned char&gt;::allocate (856 samples, 0.93%)</title><rect x="609.2" y="597" width="11.0" height="15.0" fill="rgb(236,53,15)" rx="2" ry="2" />
<text  x="612.20" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::resize (487 samples, 0.53%)</title><rect x="468.6" y="357" width="6.3" height="15.0" fill="rgb(240,1,23)" rx="2" ry="2" />
<text  x="471.62" y="367.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (22 samples, 0.02%)</title><rect x="145.3" y="469" width="0.3" height="15.0" fill="rgb(235,34,27)" rx="2" ry="2" />
<text  x="148.31" y="479.5" ></text>
</g>
<g >
<title>__db_tas_mutex_readlock (23 samples, 0.02%)</title><rect x="145.0" y="469" width="0.3" height="15.0" fill="rgb(223,75,44)" rx="2" ry="2" />
<text  x="148.02" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt;::_Hash_node (11 samples, 0.01%)</title><rect x="1086.9" y="517" width="0.1" height="15.0" fill="rgb(249,130,52)" rx="2" ry="2" />
<text  x="1089.87" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (11 samples, 0.01%)</title><rect x="1049.2" y="613" width="0.2" height="15.0" fill="rgb(230,21,17)" rx="2" ry="2" />
<text  x="1052.22" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::allocate (127 samples, 0.14%)</title><rect x="183.1" y="597" width="1.6" height="15.0" fill="rgb(224,73,18)" rx="2" ry="2" />
<text  x="186.09" y="607.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (276 samples, 0.30%)</title><rect x="142.9" y="533" width="3.5" height="15.0" fill="rgb(213,5,33)" rx="2" ry="2" />
<text  x="145.86" y="543.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (14 samples, 0.02%)</title><rect x="68.5" y="469" width="0.2" height="15.0" fill="rgb(227,170,10)" rx="2" ry="2" />
<text  x="71.50" y="479.5" ></text>
</g>
<g >
<title>[unknown] (22 samples, 0.02%)</title><rect x="161.6" y="453" width="0.3" height="15.0" fill="rgb(242,226,37)" rx="2" ry="2" />
<text  x="164.64" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (46 samples, 0.05%)</title><rect x="812.0" y="293" width="0.6" height="15.0" fill="rgb(223,142,19)" rx="2" ry="2" />
<text  x="815.00" y="303.5" ></text>
</g>
<g >
<title>secure_allocator&lt;unsigned char&gt;::allocate (1,425 samples, 1.55%)</title><rect x="798.3" y="421" width="18.2" height="15.0" fill="rgb(228,184,32)" rx="2" ry="2" />
<text  x="801.27" y="431.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::recursive_mutex&gt;::unlock (18 samples, 0.02%)</title><rect x="851.1" y="613" width="0.2" height="15.0" fill="rgb(234,211,45)" rx="2" ry="2" />
<text  x="854.11" y="623.5" ></text>
</g>
<g >
<title>CRIPEMD160::Finalize (9 samples, 0.01%)</title><rect x="14.5" y="741" width="0.1" height="15.0" fill="rgb(216,158,54)" rx="2" ry="2" />
<text  x="17.50" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;::_M_valptr (60 samples, 0.07%)</title><rect x="778.9" y="517" width="0.8" height="15.0" fill="rgb(242,88,6)" rx="2" ry="2" />
<text  x="781.95" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::size (15 samples, 0.02%)</title><rect x="517.1" y="261" width="0.2" height="15.0" fill="rgb(212,66,10)" rx="2" ry="2" />
<text  x="520.12" y="271.5" ></text>
</g>
<g >
<title>std::map&lt;uint256, CWalletTx, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::end (10 samples, 0.01%)</title><rect x="985.4" y="661" width="0.1" height="15.0" fill="rgb(214,54,25)" rx="2" ry="2" />
<text  x="988.41" y="671.5" ></text>
</g>
<g >
<title>WriteBE32 (16 samples, 0.02%)</title><rect x="736.3" y="549" width="0.2" height="15.0" fill="rgb(213,200,31)" rx="2" ry="2" />
<text  x="739.28" y="559.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, prevector&lt;28u, unsigned char, unsigned int, int&gt;&amp;&gt; (165 samples, 0.18%)</title><rect x="376.8" y="597" width="2.1" height="15.0" fill="rgb(240,10,40)" rx="2" ry="2" />
<text  x="379.83" y="607.5" ></text>
</g>
<g >
<title>CDataStream::read (20 samples, 0.02%)</title><rect x="439.9" y="133" width="0.3" height="15.0" fill="rgb(206,140,0)" rx="2" ry="2" />
<text  x="442.92" y="143.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, unsigned long, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt; &gt;::emplace&lt;char*, unsigned long&amp;&gt; (256 samples, 0.28%)</title><rect x="615.8" y="549" width="3.2" height="15.0" fill="rgb(211,53,1)" rx="2" ry="2" />
<text  x="618.76" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;CTransaction&gt; &gt;::construct&lt;CTransaction const, deserialize_type const&amp;, CDataStream&amp;&gt; (550 samples, 0.60%)</title><rect x="1137.3" y="629" width="7.1" height="15.0" fill="rgb(212,213,46)" rx="2" ry="2" />
<text  x="1140.31" y="639.5" ></text>
</g>
<g >
<title>CWallet::LoadCScript (127 samples, 0.14%)</title><rect x="1120.6" y="725" width="1.7" height="15.0" fill="rgb(239,45,4)" rx="2" ry="2" />
<text  x="1123.63" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (115 samples, 0.12%)</title><rect x="535.8" y="597" width="1.5" height="15.0" fill="rgb(241,122,28)" rx="2" ry="2" />
<text  x="538.80" y="607.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Compare (1,164 samples, 1.26%)</title><rect x="912.3" y="549" width="14.9" height="15.0" fill="rgb(225,208,10)" rx="2" ry="2" />
<text  x="915.29" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::begin (13 samples, 0.01%)</title><rect x="960.3" y="613" width="0.1" height="15.0" fill="rgb(229,7,39)" rx="2" ry="2" />
<text  x="963.28" y="623.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (14 samples, 0.02%)</title><rect x="110.6" y="437" width="0.2" height="15.0" fill="rgb(231,48,25)" rx="2" ry="2" />
<text  x="113.60" y="447.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (34 samples, 0.04%)</title><rect x="337.6" y="533" width="0.4" height="15.0" fill="rgb(217,172,12)" rx="2" ry="2" />
<text  x="340.58" y="543.5" ></text>
</g>
<g >
<title>__env_close_pp (12 samples, 0.01%)</title><rect x="162.4" y="469" width="0.1" height="15.0" fill="rgb(216,66,23)" rx="2" ry="2" />
<text  x="165.37" y="479.5" ></text>
</g>
<g >
<title>__db_vrfy_putpageinfo (692 samples, 0.75%)</title><rect x="133.0" y="565" width="8.8" height="15.0" fill="rgb(230,111,31)" rx="2" ry="2" />
<text  x="135.97" y="575.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::Next (12 samples, 0.01%)</title><rect x="42.2" y="565" width="0.2" height="15.0" fill="rgb(207,151,3)" rx="2" ry="2" />
<text  x="45.23" y="575.5" ></text>
</g>
<g >
<title>ser_writedata8&lt;CHashWriter&gt; (12 samples, 0.01%)</title><rect x="508.3" y="277" width="0.1" height="15.0" fill="rgb(216,105,9)" rx="2" ry="2" />
<text  x="511.29" y="287.5" ></text>
</g>
<g >
<title>operator== (20 samples, 0.02%)</title><rect x="966.1" y="517" width="0.3" height="15.0" fill="rgb(207,24,6)" rx="2" ry="2" />
<text  x="969.13" y="527.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (27 samples, 0.03%)</title><rect x="100.2" y="389" width="0.3" height="15.0" fill="rgb(237,45,32)" rx="2" ry="2" />
<text  x="103.18" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char* const&amp;&gt; (8 samples, 0.01%)</title><rect x="1087.9" y="453" width="0.1" height="15.0" fill="rgb(237,204,5)" rx="2" ry="2" />
<text  x="1090.92" y="463.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, CBlockIndex*&gt;*, std::vector&lt;std::pair&lt;int, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;int, CBlockIndex*&gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (9 samples, 0.01%)</title><rect x="48.9" y="581" width="0.1" height="15.0" fill="rgb(233,25,31)" rx="2" ry="2" />
<text  x="51.91" y="591.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (14 samples, 0.02%)</title><rect x="70.2" y="421" width="0.2" height="15.0" fill="rgb(211,53,2)" rx="2" ry="2" />
<text  x="73.18" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;CTxIn const*, CTxIn*, CTxIn&gt; (18 samples, 0.02%)</title><rect x="445.0" y="309" width="0.2" height="15.0" fill="rgb(243,50,9)" rx="2" ry="2" />
<text  x="448.00" y="319.5" ></text>
</g>
<g >
<title>CKey::Load (146 samples, 0.16%)</title><rect x="624.7" y="677" width="1.8" height="15.0" fill="rgb(218,206,18)" rx="2" ry="2" />
<text  x="627.65" y="687.5" ></text>
</g>
<g >
<title>__lock_put (14 samples, 0.02%)</title><rect x="142.3" y="501" width="0.2" height="15.0" fill="rgb(208,81,11)" rx="2" ry="2" />
<text  x="145.34" y="511.5" ></text>
</g>
<g >
<title>uint256::uint256 (11 samples, 0.01%)</title><rect x="482.8" y="389" width="0.1" height="15.0" fill="rgb(225,62,15)" rx="2" ry="2" />
<text  x="485.76" y="399.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CKeyMetadata&amp;&gt; (707 samples, 0.77%)</title><rect x="362.1" y="661" width="9.0" height="15.0" fill="rgb(247,133,38)" rx="2" ry="2" />
<text  x="365.08" y="671.5" ></text>
</g>
<g >
<title>__bam_cmp (8 samples, 0.01%)</title><rect x="72.5" y="501" width="0.1" height="15.0" fill="rgb(209,142,5)" rx="2" ry="2" />
<text  x="75.51" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;::_M_addr (13 samples, 0.01%)</title><rect x="791.8" y="453" width="0.2" height="15.0" fill="rgb(250,144,46)" rx="2" ry="2" />
<text  x="794.80" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (11 samples, 0.01%)</title><rect x="1085.2" y="533" width="0.1" height="15.0" fill="rgb(253,27,29)" rx="2" ry="2" />
<text  x="1088.20" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;COutPoint&gt; &gt;::deallocate (11 samples, 0.01%)</title><rect x="1051.9" y="565" width="0.2" height="15.0" fill="rgb(225,23,37)" rx="2" ry="2" />
<text  x="1054.92" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_insert_node (24 samples, 0.03%)</title><rect x="1083.5" y="533" width="0.3" height="15.0" fill="rgb(241,198,2)" rx="2" ry="2" />
<text  x="1086.46" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::allocate (14 samples, 0.02%)</title><rect x="1083.0" y="485" width="0.2" height="15.0" fill="rgb(232,63,18)" rx="2" ry="2" />
<text  x="1085.98" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (20 samples, 0.02%)</title><rect x="567.8" y="469" width="0.2" height="15.0" fill="rgb(205,106,30)" rx="2" ry="2" />
<text  x="570.79" y="479.5" ></text>
</g>
<g >
<title>boost::detail::variant::visitation_impl&lt;mpl_::int_&lt;0&gt;, boost::detail::variant::visitation_impl_step&lt;boost::mpl::l_iter&lt;boost::mpl::l_item&lt;mpl_::long_&lt;6l&gt;, CNoDestination, boost::mpl::l_item&lt;mpl_::long_&lt;5l&gt;, PKHash, boost::mpl::l_item&lt;mpl_::long_&lt;4l&gt;, ScriptHash, boost::mpl::l_item&lt;mpl_::long_&lt;3l&gt;, WitnessV0ScriptHash, boost::mpl::l_item&lt;mpl_::long_&lt;2l&gt;, WitnessV0KeyHash, boost::mpl::l_item&lt;mpl_::long_&lt;1l&gt;, WitnessUnknown, boost::mpl::l_end&gt; &gt; &gt; &gt; &gt; &gt; &gt;, boost::mpl::l_iter&lt;boost::mpl::l_end&gt; &gt;, boost::detail::variant::destroyer, void*, boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt;::has_fallback_type_&gt; (28 samples, 0.03%)</title><rect x="771.2" y="549" width="0.3" height="15.0" fill="rgb(240,79,11)" rx="2" ry="2" />
<text  x="774.19" y="559.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, CScript&gt; (169 samples, 0.18%)</title><rect x="162.5" y="357" width="2.2" height="15.0" fill="rgb(209,10,52)" rx="2" ry="2" />
<text  x="165.53" y="367.5" ></text>
</g>
<g >
<title>Unserialize_impl&lt;CDataStream, 28u, unsigned char&gt; (101 samples, 0.11%)</title><rect x="449.3" y="181" width="1.3" height="15.0" fill="rgb(251,184,29)" rx="2" ry="2" />
<text  x="452.29" y="191.5" ></text>
</g>
<g >
<title>DecodeBase58 (174 samples, 0.19%)</title><rect x="1054.1" y="629" width="2.2" height="15.0" fill="rgb(209,198,16)" rx="2" ry="2" />
<text  x="1057.10" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::vector (41 samples, 0.04%)</title><rect x="624.1" y="661" width="0.6" height="15.0" fill="rgb(208,40,16)" rx="2" ry="2" />
<text  x="627.13" y="671.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, long&gt; (69 samples, 0.07%)</title><rect x="497.8" y="229" width="0.8" height="15.0" fill="rgb(219,148,39)" rx="2" ry="2" />
<text  x="500.75" y="239.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, 28u, unsigned char&gt; (92 samples, 0.10%)</title><rect x="496.4" y="117" width="1.2" height="15.0" fill="rgb(231,177,53)" rx="2" ry="2" />
<text  x="499.39" y="127.5" ></text>
</g>
<g >
<title>__memp_alloc (27 samples, 0.03%)</title><rect x="141.2" y="469" width="0.3" height="15.0" fill="rgb(235,80,36)" rx="2" ry="2" />
<text  x="144.20" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;char* const, unsigned long&gt; &gt;::_M_v (10 samples, 0.01%)</title><rect x="812.2" y="261" width="0.2" height="15.0" fill="rgb(233,165,49)" rx="2" ry="2" />
<text  x="815.23" y="271.5" ></text>
</g>
<g >
<title>CHashWriter::write (18 samples, 0.02%)</title><rect x="488.3" y="101" width="0.2" height="15.0" fill="rgb(254,136,6)" rx="2" ry="2" />
<text  x="491.31" y="111.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;BerkeleyEnvironment&gt;::~shared_ptr (13 samples, 0.01%)</title><rect x="162.4" y="629" width="0.1" height="15.0" fill="rgb(236,134,9)" rx="2" ry="2" />
<text  x="165.36" y="639.5" ></text>
</g>
<g >
<title>leveldb::DBImpl::DoCompactionWork (31 samples, 0.03%)</title><rect x="1147.3" y="645" width="0.4" height="15.0" fill="rgb(238,59,32)" rx="2" ry="2" />
<text  x="1150.32" y="655.5" ></text>
</g>
<g >
<title>std::operator!= (21 samples, 0.02%)</title><rect x="891.3" y="613" width="0.3" height="15.0" fill="rgb(222,171,11)" rx="2" ry="2" />
<text  x="894.31" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (387 samples, 0.42%)</title><rect x="1085.5" y="549" width="5.0" height="15.0" fill="rgb(232,79,0)" rx="2" ry="2" />
<text  x="1088.52" y="559.5" ></text>
</g>
<g >
<title>CHash160::CHash160 (8 samples, 0.01%)</title><rect x="663.0" y="613" width="0.1" height="15.0" fill="rgb(231,174,50)" rx="2" ry="2" />
<text  x="665.96" y="623.5" ></text>
</g>
<g >
<title>std::equal_to&lt;char*&gt;::operator (9 samples, 0.01%)</title><rect x="615.5" y="453" width="0.1" height="15.0" fill="rgb(240,175,9)" rx="2" ry="2" />
<text  x="618.48" y="463.5" ></text>
</g>
<g >
<title>UniqueLock&lt;AnnotatedMixin&lt;std::recursive_mutex&gt;, std::unique_lock&lt;std::recursive_mutex&gt; &gt;::~UniqueLock (13 samples, 0.01%)</title><rect x="25.5" y="757" width="0.1" height="15.0" fill="rgb(230,17,50)" rx="2" ry="2" />
<text  x="28.46" y="767.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::size (15 samples, 0.02%)</title><rect x="1040.7" y="341" width="0.2" height="15.0" fill="rgb(232,96,11)" rx="2" ry="2" />
<text  x="1043.66" y="351.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.03%)</title><rect x="1003.6" y="565" width="0.4" height="15.0" fill="rgb(240,101,53)" rx="2" ry="2" />
<text  x="1006.61" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (38 samples, 0.04%)</title><rect x="858.0" y="613" width="0.5" height="15.0" fill="rgb(250,209,2)" rx="2" ry="2" />
<text  x="861.00" y="623.5" ></text>
</g>
<g >
<title>CWallet::LoadKey (12,457 samples, 13.52%)</title><rect x="691.8" y="677" width="159.5" height="15.0" fill="rgb(226,80,29)" rx="2" ry="2" />
<text  x="694.81" y="687.5" >CWallet::LoadKey</text>
</g>
<g >
<title>__db_verify (10 samples, 0.01%)</title><rect x="1144.7" y="613" width="0.1" height="15.0" fill="rgb(213,223,47)" rx="2" ry="2" />
<text  x="1147.70" y="623.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, prevector&lt;28u, unsigned char, unsigned int, int&gt;&amp;&gt; (168 samples, 0.18%)</title><rect x="376.8" y="613" width="2.1" height="15.0" fill="rgb(232,195,32)" rx="2" ry="2" />
<text  x="379.79" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;CTransaction const,  (46 samples, 0.05%)</title><rect x="33.7" y="629" width="0.6" height="15.0" fill="rgb(236,142,53)" rx="2" ry="2" />
<text  x="36.68" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;CTxOut const*, std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; &gt; (12 samples, 0.01%)</title><rect x="512.8" y="293" width="0.1" height="15.0" fill="rgb(232,196,19)" rx="2" ry="2" />
<text  x="515.79" y="303.5" ></text>
</g>
<g >
<title>CScript::~CScript (14 samples, 0.02%)</title><rect x="659.6" y="677" width="0.1" height="15.0" fill="rgb(207,209,3)" rx="2" ry="2" />
<text  x="662.56" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (14 samples, 0.02%)</title><rect x="774.1" y="501" width="0.1" height="15.0" fill="rgb(245,24,7)" rx="2" ry="2" />
<text  x="777.05" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKeyMetadata&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (77 samples, 0.08%)</title><rect x="856.9" y="629" width="0.9" height="15.0" fill="rgb(216,160,21)" rx="2" ry="2" />
<text  x="859.86" y="639.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.01%)</title><rect x="540.2" y="613" width="0.1" height="15.0" fill="rgb(249,219,40)" rx="2" ry="2" />
<text  x="543.21" y="623.5" ></text>
</g>
<g >
<title>CDataStream::read (124 samples, 0.13%)</title><rect x="377.0" y="549" width="1.5" height="15.0" fill="rgb(232,149,0)" rx="2" ry="2" />
<text  x="379.96" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::lower_bound (292 samples, 0.32%)</title><rect x="688.0" y="613" width="3.7" height="15.0" fill="rgb(233,51,23)" rx="2" ry="2" />
<text  x="690.99" y="623.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Serialize&lt;CHashWriter&gt; (27 samples, 0.03%)</title><rect x="488.2" y="117" width="0.3" height="15.0" fill="rgb(220,141,40)" rx="2" ry="2" />
<text  x="491.20" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false, false&gt;::_Node_iterator (11 samples, 0.01%)</title><rect x="1084.2" y="533" width="0.1" height="15.0" fill="rgb(206,7,25)" rx="2" ry="2" />
<text  x="1087.18" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned int const*, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt; &gt;::__normal_iterator (13 samples, 0.01%)</title><rect x="853.6" y="597" width="0.2" height="15.0" fill="rgb(226,187,12)" rx="2" ry="2" />
<text  x="856.65" y="607.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (15 samples, 0.02%)</title><rect x="81.9" y="389" width="0.2" height="15.0" fill="rgb(246,191,28)" rx="2" ry="2" />
<text  x="84.92" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_key (203 samples, 0.22%)</title><rect x="976.9" y="613" width="2.6" height="15.0" fill="rgb(236,148,52)" rx="2" ry="2" />
<text  x="979.92" y="623.5" ></text>
</g>
<g >
<title>__db_tas_mutex_readlock (11 samples, 0.01%)</title><rect x="136.9" y="453" width="0.2" height="15.0" fill="rgb(205,29,15)" rx="2" ry="2" />
<text  x="139.94" y="463.5" ></text>
</g>
<g >
<title>__db_put (78 samples, 0.08%)</title><rect x="94.5" y="469" width="1.0" height="15.0" fill="rgb(238,205,25)" rx="2" ry="2" />
<text  x="97.47" y="479.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CTransaction&gt; (550 samples, 0.60%)</title><rect x="1137.3" y="741" width="7.1" height="15.0" fill="rgb(230,66,33)" rx="2" ry="2" />
<text  x="1140.31" y="751.5" ></text>
</g>
<g >
<title>std::distance&lt;unsigned char const*&gt; (22 samples, 0.02%)</title><rect x="1102.7" y="629" width="0.3" height="15.0" fill="rgb(253,228,24)" rx="2" ry="2" />
<text  x="1105.71" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::size (11 samples, 0.01%)</title><rect x="451.5" y="229" width="0.1" height="15.0" fill="rgb(223,74,43)" rx="2" ry="2" />
<text  x="454.48" y="239.5" ></text>
</g>
<g >
<title>CTransaction::CTransaction (3,398 samples, 3.69%)</title><rect x="479.8" y="453" width="43.5" height="15.0" fill="rgb(250,4,50)" rx="2" ry="2" />
<text  x="482.78" y="463.5" >CTra..</text>
</g>
<g >
<title>CuckooCache::cache&lt;uint256, SignatureCacheHasher&gt;::setup_bytes (66 samples, 0.07%)</title><rect x="29.7" y="693" width="0.8" height="15.0" fill="rgb(250,17,22)" rx="2" ry="2" />
<text  x="32.68" y="703.5" ></text>
</g>
<g >
<title>ShiftMessageB (12 samples, 0.01%)</title><rect x="1122.0" y="597" width="0.2" height="15.0" fill="rgb(232,53,27)" rx="2" ry="2" />
<text  x="1125.02" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;secure_allocator&lt;unsigned char&gt; &gt;::_S_construct&lt;unsigned char&gt; (105 samples, 0.11%)</title><rect x="621.5" y="597" width="1.4" height="15.0" fill="rgb(205,131,29)" rx="2" ry="2" />
<text  x="624.54" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (9 samples, 0.01%)</title><rect x="1161.7" y="757" width="0.1" height="15.0" fill="rgb(237,40,40)" rx="2" ry="2" />
<text  x="1164.70" y="767.5" ></text>
</g>
<g >
<title>_int_malloc (21 samples, 0.02%)</title><rect x="73.2" y="421" width="0.3" height="15.0" fill="rgb(208,143,21)" rx="2" ry="2" />
<text  x="76.23" y="431.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, uint256&gt; (20 samples, 0.02%)</title><rect x="43.4" y="549" width="0.2" height="15.0" fill="rgb(207,89,38)" rx="2" ry="2" />
<text  x="46.36" y="559.5" ></text>
</g>
<g >
<title>std::forward&lt;interfaces::Chain::Lock*&amp;&gt; (9 samples, 0.01%)</title><rect x="954.4" y="581" width="0.1" height="15.0" fill="rgb(227,57,28)" rx="2" ry="2" />
<text  x="957.41" y="591.5" ></text>
</g>
<g >
<title>TLS wrapper function for g_lockstack (15 samples, 0.02%)</title><rect x="945.7" y="533" width="0.2" height="15.0" fill="rgb(217,154,48)" rx="2" ry="2" />
<text  x="948.68" y="543.5" ></text>
</g>
<g >
<title>__uint32_identity (16 samples, 0.02%)</title><rect x="755.7" y="517" width="0.2" height="15.0" fill="rgb(213,64,9)" rx="2" ry="2" />
<text  x="758.74" y="527.5" ></text>
</g>
<g >
<title>CSHA256::Finalize (35 samples, 0.04%)</title><rect x="756.3" y="565" width="0.4" height="15.0" fill="rgb(205,98,37)" rx="2" ry="2" />
<text  x="759.29" y="575.5" ></text>
</g>
<g >
<title>std::forward&lt;COutPoint const&amp;&gt; (10 samples, 0.01%)</title><rect x="891.9" y="613" width="0.1" height="15.0" fill="rgb(210,226,21)" rx="2" ry="2" />
<text  x="894.89" y="623.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CScript&amp;&gt; (128 samples, 0.14%)</title><rect x="449.0" y="277" width="1.6" height="15.0" fill="rgb(211,5,12)" rx="2" ry="2" />
<text  x="451.98" y="287.5" ></text>
</g>
<g >
<title>CDataStream::read (19 samples, 0.02%)</title><rect x="376.3" y="597" width="0.3" height="15.0" fill="rgb(223,60,6)" rx="2" ry="2" />
<text  x="379.32" y="607.5" ></text>
</g>
<g >
<title>__dbc_close (47 samples, 0.05%)</title><rect x="110.8" y="469" width="0.6" height="15.0" fill="rgb(240,209,16)" rx="2" ry="2" />
<text  x="113.81" y="479.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;LockedPool::LockedPageArena&gt;::operator* (38 samples, 0.04%)</title><rect x="814.7" y="389" width="0.5" height="15.0" fill="rgb(223,98,39)" rx="2" ry="2" />
<text  x="817.74" y="399.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::size (8 samples, 0.01%)</title><rect x="1036.9" y="325" width="0.2" height="15.0" fill="rgb(207,170,1)" rx="2" ry="2" />
<text  x="1039.95" y="335.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, 28u, unsigned char&gt; (169 samples, 0.18%)</title><rect x="162.5" y="229" width="2.2" height="15.0" fill="rgb(220,211,7)" rx="2" ry="2" />
<text  x="165.53" y="239.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound (82 samples, 0.09%)</title><rect x="538.2" y="597" width="1.0" height="15.0" fill="rgb(243,32,28)" rx="2" ry="2" />
<text  x="541.17" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;COutPoint&gt; &gt;::allocate (52 samples, 0.06%)</title><rect x="1048.3" y="549" width="0.7" height="15.0" fill="rgb(208,114,39)" rx="2" ry="2" />
<text  x="1051.32" y="559.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.01%)</title><rect x="635.3" y="469" width="0.1" height="15.0" fill="rgb(210,65,32)" rx="2" ry="2" />
<text  x="638.31" y="479.5" ></text>
</g>
<g >
<title>std::tuple&lt;CScriptID const&amp;&gt;::tuple (43 samples, 0.05%)</title><rect x="773.1" y="517" width="0.5" height="15.0" fill="rgb(224,15,24)" rx="2" ry="2" />
<text  x="776.08" y="527.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::size (18 samples, 0.02%)</title><rect x="441.2" y="149" width="0.3" height="15.0" fill="rgb(225,96,27)" rx="2" ry="2" />
<text  x="444.25" y="159.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;unsigned char*, unsigned char&gt; (10 samples, 0.01%)</title><rect x="519.4" y="293" width="0.1" height="15.0" fill="rgb(248,82,40)" rx="2" ry="2" />
<text  x="522.36" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::destroy&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt; (8 samples, 0.01%)</title><rect x="568.8" y="437" width="0.1" height="15.0" fill="rgb(254,147,31)" rx="2" ry="2" />
<text  x="571.80" y="447.5" ></text>
</g>
<g >
<title>BerkeleyEnvironment::Verify (10 samples, 0.01%)</title><rect x="1144.7" y="661" width="0.1" height="15.0" fill="rgb(225,66,2)" rx="2" ry="2" />
<text  x="1147.70" y="671.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, CVarInt&lt; (48 samples, 0.05%)</title><rect x="40.1" y="565" width="0.7" height="15.0" fill="rgb(245,71,32)" rx="2" ry="2" />
<text  x="43.15" y="575.5" ></text>
</g>
<g >
<title>ReadKeyValue (2,313 samples, 2.51%)</title><rect x="1107.7" y="741" width="29.6" height="15.0" fill="rgb(237,111,0)" rx="2" ry="2" />
<text  x="1110.65" y="751.5" >Re..</text>
</g>
<g >
<title>std::map&lt;uint256, CWalletTx, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::end (29 samples, 0.03%)</title><rect x="871.2" y="597" width="0.3" height="15.0" fill="rgb(218,154,16)" rx="2" ry="2" />
<text  x="874.15" y="607.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;CTxOut*&gt; (10 samples, 0.01%)</title><rect x="452.9" y="309" width="0.1" height="15.0" fill="rgb(206,224,40)" rx="2" ry="2" />
<text  x="455.86" y="319.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CSizeComputer&gt; (8 samples, 0.01%)</title><rect x="1040.9" y="453" width="0.1" height="15.0" fill="rgb(250,106,12)" rx="2" ry="2" />
<text  x="1043.88" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKeyMetadata&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt;::_S_right (10 samples, 0.01%)</title><rect x="861.0" y="597" width="0.2" height="15.0" fill="rgb(252,67,20)" rx="2" ry="2" />
<text  x="864.05" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;uint256, std::allocator&lt;uint256&gt; &gt;::_Vector_base (37 samples, 0.04%)</title><rect x="557.5" y="613" width="0.5" height="15.0" fill="rgb(219,138,3)" rx="2" ry="2" />
<text  x="560.55" y="623.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;std::shared_ptr&lt;CTransaction const&gt;&amp;&gt; (901 samples, 0.98%)</title><rect x="1107.7" y="677" width="11.5" height="15.0" fill="rgb(243,79,19)" rx="2" ry="2" />
<text  x="1110.65" y="687.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;unsigned char const*, unsigned char*&gt; (41 samples, 0.04%)</title><rect x="767.9" y="405" width="0.5" height="15.0" fill="rgb(205,71,54)" rx="2" ry="2" />
<text  x="770.88" y="415.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTransaction&gt; (183 samples, 0.20%)</title><rect x="164.7" y="501" width="2.3" height="15.0" fill="rgb(239,229,43)" rx="2" ry="2" />
<text  x="167.69" y="511.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (8 samples, 0.01%)</title><rect x="76.2" y="373" width="0.2" height="15.0" fill="rgb(212,211,50)" rx="2" ry="2" />
<text  x="79.25" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (19 samples, 0.02%)</title><rect x="975.6" y="549" width="0.2" height="15.0" fill="rgb(212,221,53)" rx="2" ry="2" />
<text  x="978.59" y="559.5" ></text>
</g>
<g >
<title>std::tuple&lt;char* const&amp;&gt;::tuple (21 samples, 0.02%)</title><rect x="1088.0" y="485" width="0.3" height="15.0" fill="rgb(205,39,6)" rx="2" ry="2" />
<text  x="1091.02" y="495.5" ></text>
</g>
<g >
<title>CTxIn::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (271 samples, 0.29%)</title><rect x="1137.3" y="389" width="3.5" height="15.0" fill="rgb(228,98,10)" rx="2" ry="2" />
<text  x="1140.31" y="399.5" ></text>
</g>
<g >
<title>std::set&lt;COutPoint, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::insert (510 samples, 0.55%)</title><rect x="1043.7" y="661" width="6.6" height="15.0" fill="rgb(209,137,50)" rx="2" ry="2" />
<text  x="1046.75" y="671.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl::_Vector_impl (9 samples, 0.01%)</title><rect x="1165.0" y="757" width="0.1" height="15.0" fill="rgb(220,143,40)" rx="2" ry="2" />
<text  x="1168.03" y="767.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned char*&gt; (14 samples, 0.02%)</title><rect x="466.4" y="245" width="0.1" height="15.0" fill="rgb(209,28,34)" rx="2" ry="2" />
<text  x="469.36" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_Alloc_node::operator (186 samples, 0.20%)</title><rect x="1046.7" y="613" width="2.4" height="15.0" fill="rgb(215,67,52)" rx="2" ry="2" />
<text  x="1049.71" y="623.5" ></text>
</g>
<g >
<title>Arena::free (1,030 samples, 1.12%)</title><rect x="1080.8" y="581" width="13.2" height="15.0" fill="rgb(248,12,47)" rx="2" ry="2" />
<text  x="1083.79" y="591.5" ></text>
</g>
<g >
<title>std::fill_n&lt;unsigned char*, unsigned long, unsigned char&gt; (81 samples, 0.09%)</title><rect x="463.4" y="245" width="1.0" height="15.0" fill="rgb(230,19,29)" rx="2" ry="2" />
<text  x="466.39" y="255.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned (8 samples, 0.01%)</title><rect x="593.0" y="613" width="0.1" height="15.0" fill="rgb(249,24,46)" rx="2" ry="2" />
<text  x="595.97" y="623.5" ></text>
</g>
<g >
<title>sha256_shani::Transform (361 samples, 0.39%)</title><rect x="1114.6" y="261" width="4.6" height="15.0" fill="rgb(208,11,11)" rx="2" ry="2" />
<text  x="1117.57" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_M_get_insert_equal_pos (1,649 samples, 1.79%)</title><rect x="906.3" y="597" width="21.1" height="15.0" fill="rgb(253,119,40)" rx="2" ry="2" />
<text  x="909.27" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::_M_get_node (63 samples, 0.07%)</title><rect x="905.4" y="581" width="0.8" height="15.0" fill="rgb(242,152,9)" rx="2" ry="2" />
<text  x="908.40" y="591.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;CTransaction const&gt;::shared_ptr&lt;std::allocator&lt;CTransaction&gt;, deserialize_type const&amp;, CDataStream&amp;&gt; (550 samples, 0.60%)</title><rect x="1137.3" y="693" width="7.1" height="15.0" fill="rgb(225,108,29)" rx="2" ry="2" />
<text  x="1140.31" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (23 samples, 0.02%)</title><rect x="984.0" y="613" width="0.2" height="15.0" fill="rgb(244,87,37)" rx="2" ry="2" />
<text  x="986.95" y="623.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, 28u, unsigned char&gt; (149 samples, 0.16%)</title><rect x="490.8" y="133" width="1.9" height="15.0" fill="rgb(213,11,5)" rx="2" ry="2" />
<text  x="493.82" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::clear (10 samples, 0.01%)</title><rect x="1179.9" y="757" width="0.2" height="15.0" fill="rgb(241,116,0)" rx="2" ry="2" />
<text  x="1182.95" y="767.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (10 samples, 0.01%)</title><rect x="806.6" y="309" width="0.1" height="15.0" fill="rgb(205,51,39)" rx="2" ry="2" />
<text  x="809.56" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::__normal_iterator (15 samples, 0.02%)</title><rect x="1095.6" y="661" width="0.2" height="15.0" fill="rgb(245,172,30)" rx="2" ry="2" />
<text  x="1098.58" y="671.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.03%)</title><rect x="819.5" y="389" width="0.3" height="15.0" fill="rgb(227,226,32)" rx="2" ry="2" />
<text  x="822.48" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_S_max_size (11 samples, 0.01%)</title><rect x="623.1" y="597" width="0.1" height="15.0" fill="rgb(218,86,29)" rx="2" ry="2" />
<text  x="626.05" y="607.5" ></text>
</g>
<g >
<title>CScript::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (169 samples, 0.18%)</title><rect x="162.5" y="293" width="2.2" height="15.0" fill="rgb(231,193,5)" rx="2" ry="2" />
<text  x="165.53" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;uint256, std::allocator&lt;uint256&gt; &gt;::clear (27 samples, 0.03%)</title><rect x="530.5" y="581" width="0.4" height="15.0" fill="rgb(228,190,27)" rx="2" ry="2" />
<text  x="533.54" y="591.5" ></text>
</g>
<g >
<title>std::local_Rb_tree_decrement (18 samples, 0.02%)</title><rect x="823.8" y="565" width="0.2" height="15.0" fill="rgb(206,34,44)" rx="2" ry="2" />
<text  x="826.78" y="575.5" ></text>
</g>
<g >
<title>CDataStream::read (17 samples, 0.02%)</title><rect x="476.6" y="357" width="0.2" height="15.0" fill="rgb(228,54,26)" rx="2" ry="2" />
<text  x="479.62" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::~vector (46 samples, 0.05%)</title><rect x="521.1" y="341" width="0.6" height="15.0" fill="rgb(245,194,23)" rx="2" ry="2" />
<text  x="524.10" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (50 samples, 0.05%)</title><rect x="553.3" y="549" width="0.6" height="15.0" fill="rgb(209,63,6)" rx="2" ry="2" />
<text  x="556.27" y="559.5" ></text>
</g>
<g >
<title>[unknown] (22 samples, 0.02%)</title><rect x="79.3" y="341" width="0.3" height="15.0" fill="rgb(252,189,53)" rx="2" ry="2" />
<text  x="82.32" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt; &gt;::__normal_iterator (55 samples, 0.06%)</title><rect x="178.3" y="629" width="0.7" height="15.0" fill="rgb(216,172,42)" rx="2" ry="2" />
<text  x="181.25" y="639.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream&gt; (26 samples, 0.03%)</title><rect x="441.9" y="277" width="0.3" height="15.0" fill="rgb(214,109,26)" rx="2" ry="2" />
<text  x="444.90" y="287.5" ></text>
</g>
<g >
<title>std::less&lt;CScriptID&gt;::operator (12 samples, 0.01%)</title><rect x="775.6" y="565" width="0.2" height="15.0" fill="rgb(213,54,7)" rx="2" ry="2" />
<text  x="778.60" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_S_key (11 samples, 0.01%)</title><rect x="802.0" y="325" width="0.1" height="15.0" fill="rgb(235,126,0)" rx="2" ry="2" />
<text  x="804.97" y="335.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (40 samples, 0.04%)</title><rect x="562.7" y="613" width="0.6" height="15.0" fill="rgb(243,98,43)" rx="2" ry="2" />
<text  x="565.75" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (37 samples, 0.04%)</title><rect x="551.7" y="549" width="0.5" height="15.0" fill="rgb(209,216,8)" rx="2" ry="2" />
<text  x="554.73" y="559.5" ></text>
</g>
<g >
<title>__db_vrfy_getpageinfo (48 samples, 0.05%)</title><rect x="146.7" y="565" width="0.6" height="15.0" fill="rgb(210,210,52)" rx="2" ry="2" />
<text  x="149.68" y="575.5" ></text>
</g>
<g >
<title>std::make_pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;char* const, unsigned long&gt;, false, false&gt;, bool&gt; (9 samples, 0.01%)</title><rect x="571.6" y="469" width="0.1" height="15.0" fill="rgb(249,141,18)" rx="2" ry="2" />
<text  x="574.58" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (9 samples, 0.01%)</title><rect x="421.8" y="501" width="0.2" height="15.0" fill="rgb(231,154,43)" rx="2" ry="2" />
<text  x="424.85" y="511.5" ></text>
</g>
<g >
<title>__bam_search (194 samples, 0.21%)</title><rect x="103.2" y="421" width="2.5" height="15.0" fill="rgb(223,63,40)" rx="2" ry="2" />
<text  x="106.18" y="431.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.01%)</title><rect x="1083.0" y="469" width="0.2" height="15.0" fill="rgb(216,45,44)" rx="2" ry="2" />
<text  x="1086.04" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::_S_key (16 samples, 0.02%)</title><rect x="1154.7" y="757" width="0.2" height="15.0" fill="rgb(242,180,45)" rx="2" ry="2" />
<text  x="1157.72" y="767.5" ></text>
</g>
<g >
<title>CWallet::LoadKeyMetadata (1,134 samples, 1.23%)</title><rect x="851.3" y="677" width="14.6" height="15.0" fill="rgb(227,65,5)" rx="2" ry="2" />
<text  x="854.34" y="687.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::construct&lt;char, char const&amp;&gt; (81 samples, 0.09%)</title><rect x="37.8" y="581" width="1.0" height="15.0" fill="rgb(206,226,23)" rx="2" ry="2" />
<text  x="40.79" y="591.5" ></text>
</g>
<g >
<title>__memp_fput (14 samples, 0.02%)</title><rect x="328.7" y="597" width="0.1" height="15.0" fill="rgb(226,157,24)" rx="2" ry="2" />
<text  x="331.67" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt;::allocate (26 samples, 0.03%)</title><rect x="856.5" y="581" width="0.3" height="15.0" fill="rgb(244,223,39)" rx="2" ry="2" />
<text  x="859.46" y="591.5" ></text>
</g>
<g >
<title>CHashWriter::write (18 samples, 0.02%)</title><rect x="507.9" y="181" width="0.2" height="15.0" fill="rgb(220,3,50)" rx="2" ry="2" />
<text  x="510.88" y="191.5" ></text>
</g>
<g >
<title>std::multimap&lt;CBlockIndex*, CBlockIndex*, std::less&lt;CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;CBlockIndex* const, CBlockIndex*&gt; &gt; &gt;::equal_range (64 samples, 0.07%)</title><rect x="49.4" y="677" width="0.8" height="15.0" fill="rgb(252,173,7)" rx="2" ry="2" />
<text  x="52.42" y="687.5" ></text>
</g>
<g >
<title>CSHA256::Write (13 samples, 0.01%)</title><rect x="510.9" y="69" width="0.2" height="15.0" fill="rgb(225,142,11)" rx="2" ry="2" />
<text  x="513.93" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, char*&gt; &gt;::_M_valptr (11 samples, 0.01%)</title><rect x="802.5" y="293" width="0.1" height="15.0" fill="rgb(211,67,26)" rx="2" ry="2" />
<text  x="805.47" y="303.5" ></text>
</g>
<g >
<title>__memp_pgread (68 samples, 0.07%)</title><rect x="89.6" y="389" width="0.9" height="15.0" fill="rgb(223,30,21)" rx="2" ry="2" />
<text  x="92.63" y="399.5" ></text>
</g>
<g >
<title>__bam_defcmp (11 samples, 0.01%)</title><rect x="135.1" y="453" width="0.1" height="15.0" fill="rgb(252,33,24)" rx="2" ry="2" />
<text  x="138.06" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::end (16 samples, 0.02%)</title><rect x="1001.2" y="629" width="0.2" height="15.0" fill="rgb(228,226,4)" rx="2" ry="2" />
<text  x="1004.17" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_right (98 samples, 0.11%)</title><rect x="882.1" y="549" width="1.2" height="15.0" fill="rgb(213,87,1)" rx="2" ry="2" />
<text  x="885.09" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned long const, char*&gt; &gt;::_M_ptr (11 samples, 0.01%)</title><rect x="800.2" y="341" width="0.2" height="15.0" fill="rgb(242,15,40)" rx="2" ry="2" />
<text  x="803.24" y="351.5" ></text>
</g>
<g >
<title>std::move&lt;std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;&amp;&gt; (8 samples, 0.01%)</title><rect x="521.8" y="437" width="0.1" height="15.0" fill="rgb(244,101,3)" rx="2" ry="2" />
<text  x="524.80" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;CTransaction const,  (8 samples, 0.01%)</title><rect x="967.6" y="661" width="0.1" height="15.0" fill="rgb(224,128,22)" rx="2" ry="2" />
<text  x="970.56" y="671.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::~_Vector_base (13 samples, 0.01%)</title><rect x="486.0" y="261" width="0.2" height="15.0" fill="rgb(228,1,10)" rx="2" ry="2" />
<text  x="489.05" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (11 samples, 0.01%)</title><rect x="630.9" y="517" width="0.1" height="15.0" fill="rgb(214,229,37)" rx="2" ry="2" />
<text  x="633.88" y="527.5" ></text>
</g>
<g >
<title>CKeyMetadata::Unserialize&lt;CDataStream&gt; (700 samples, 0.76%)</title><rect x="362.2" y="645" width="8.9" height="15.0" fill="rgb(253,189,24)" rx="2" ry="2" />
<text  x="365.17" y="655.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;uint256, CBlockIndex*, BlockHasher, std::equal_to&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt; &gt;::find (423 samples, 0.46%)</title><rect x="961.9" y="629" width="5.4" height="15.0" fill="rgb(237,116,33)" rx="2" ry="2" />
<text  x="964.89" y="639.5" ></text>
</g>
<g >
<title>GetScriptForDestination (922 samples, 1.00%)</title><rect x="757.8" y="613" width="11.8" height="15.0" fill="rgb(216,79,23)" rx="2" ry="2" />
<text  x="760.82" y="623.5" ></text>
</g>
<g >
<title>QuadRound (85 samples, 0.09%)</title><rect x="1119.4" y="629" width="1.1" height="15.0" fill="rgb(222,9,22)" rx="2" ry="2" />
<text  x="1122.38" y="639.5" ></text>
</g>
<g >
<title>CMutableTransaction::HasWitness (66 samples, 0.07%)</title><rect x="476.9" y="405" width="0.8" height="15.0" fill="rgb(230,93,19)" rx="2" ry="2" />
<text  x="479.88" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (14 samples, 0.02%)</title><rect x="1085.8" y="533" width="0.1" height="15.0" fill="rgb(213,200,47)" rx="2" ry="2" />
<text  x="1088.77" y="543.5" ></text>
</g>
<g >
<title>interfaces::(anonymous namespace)::LockImpl::getBlockHeight (772 samples, 0.84%)</title><rect x="957.4" y="661" width="9.9" height="15.0" fill="rgb(247,131,9)" rx="2" ry="2" />
<text  x="960.44" y="671.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_M_get_Tp_allocator (13 samples, 0.01%)</title><rect x="443.6" y="325" width="0.2" height="15.0" fill="rgb(208,174,24)" rx="2" ry="2" />
<text  x="446.59" y="335.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::shrink_to_fit (9 samples, 0.01%)</title><rect x="447.5" y="325" width="0.1" height="15.0" fill="rgb(212,46,29)" rx="2" ry="2" />
<text  x="450.46" y="335.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (19 samples, 0.02%)</title><rect x="534.6" y="597" width="0.2" height="15.0" fill="rgb(221,160,1)" rx="2" ry="2" />
<text  x="537.56" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, unsigned long, false&gt;::_S_equals (20 samples, 0.02%)</title><rect x="638.2" y="469" width="0.3" height="15.0" fill="rgb(206,86,40)" rx="2" ry="2" />
<text  x="641.20" y="479.5" ></text>
</g>
<g >
<title>CHash256::Finalize (132 samples, 0.14%)</title><rect x="481.1" y="389" width="1.7" height="15.0" fill="rgb(232,204,7)" rx="2" ry="2" />
<text  x="484.07" y="399.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (101 samples, 0.11%)</title><rect x="322.9" y="581" width="1.3" height="15.0" fill="rgb(240,5,17)" rx="2" ry="2" />
<text  x="325.93" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (59 samples, 0.06%)</title><rect x="632.4" y="501" width="0.7" height="15.0" fill="rgb(228,18,36)" rx="2" ry="2" />
<text  x="635.38" y="511.5" ></text>
</g>
<g >
<title>CPubKey::GetID (1,655 samples, 1.80%)</title><rect x="694.7" y="629" width="21.2" height="15.0" fill="rgb(216,205,10)" rx="2" ry="2" />
<text  x="697.74" y="639.5" ></text>
</g>
<g >
<title>ser_readdata32&lt;CDataStream&gt; (37 samples, 0.04%)</title><rect x="363.3" y="453" width="0.5" height="15.0" fill="rgb(234,86,23)" rx="2" ry="2" />
<text  x="366.31" y="463.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, CScript&gt; (243 samples, 0.26%)</title><rect x="489.8" y="229" width="3.1" height="15.0" fill="rgb(250,195,45)" rx="2" ry="2" />
<text  x="492.77" y="239.5" ></text>
</g>
<g >
<title>boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt;::apply_visitor&lt;(anonymous namespace)::CScriptVisitor const&gt; (895 samples, 0.97%)</title><rect x="758.2" y="581" width="11.4" height="15.0" fill="rgb(207,10,51)" rx="2" ry="2" />
<text  x="761.16" y="591.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, zero_after_free_allocator&lt;char&gt; &gt; (21 samples, 0.02%)</title><rect x="1153.0" y="757" width="0.3" height="15.0" fill="rgb(221,229,53)" rx="2" ry="2" />
<text  x="1156.04" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_S_right (33 samples, 0.04%)</title><rect x="990.3" y="613" width="0.4" height="15.0" fill="rgb(233,164,29)" rx="2" ry="2" />
<text  x="993.29" y="623.5" ></text>
</g>
<g >
<title>__bam_search (203 samples, 0.22%)</title><rect x="152.7" y="501" width="2.6" height="15.0" fill="rgb(217,129,11)" rx="2" ry="2" />
<text  x="155.67" y="511.5" ></text>
</g>
<g >
<title>QuadRound (20 samples, 0.02%)</title><rect x="42.8" y="533" width="0.3" height="15.0" fill="rgb(207,209,18)" rx="2" ry="2" />
<text  x="45.80" y="543.5" ></text>
</g>
<g >
<title>__bam_get_root (42 samples, 0.05%)</title><rect x="135.2" y="469" width="0.5" height="15.0" fill="rgb(243,36,54)" rx="2" ry="2" />
<text  x="138.20" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (22 samples, 0.02%)</title><rect x="73.2" y="437" width="0.3" height="15.0" fill="rgb(238,177,25)" rx="2" ry="2" />
<text  x="76.21" y="447.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (8 samples, 0.01%)</title><rect x="102.7" y="437" width="0.1" height="15.0" fill="rgb(229,76,6)" rx="2" ry="2" />
<text  x="105.69" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::begin (9 samples, 0.01%)</title><rect x="1053.8" y="645" width="0.1" height="15.0" fill="rgb(247,203,52)" rx="2" ry="2" />
<text  x="1056.81" y="655.5" ></text>
</g>
<g >
<title>Db::verify (10 samples, 0.01%)</title><rect x="1144.7" y="645" width="0.1" height="15.0" fill="rgb(251,110,41)" rx="2" ry="2" />
<text  x="1147.70" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::vector (11 samples, 0.01%)</title><rect x="478.4" y="437" width="0.1" height="15.0" fill="rgb(228,220,13)" rx="2" ry="2" />
<text  x="481.40" y="447.5" ></text>
</g>
<g >
<title>std::less&lt;COutPoint&gt;::operator (9 samples, 0.01%)</title><rect x="1049.4" y="613" width="0.2" height="15.0" fill="rgb(209,198,22)" rx="2" ry="2" />
<text  x="1052.45" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_erase_at_end (48 samples, 0.05%)</title><rect x="40.9" y="485" width="0.6" height="15.0" fill="rgb(237,31,54)" rx="2" ry="2" />
<text  x="43.90" y="495.5" ></text>
</g>
<g >
<title>__db_lget (17 samples, 0.02%)</title><rect x="153.8" y="485" width="0.2" height="15.0" fill="rgb(207,54,51)" rx="2" ry="2" />
<text  x="156.82" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt;::_M_next (8 samples, 0.01%)</title><rect x="614.0" y="485" width="0.1" height="15.0" fill="rgb(222,173,53)" rx="2" ry="2" />
<text  x="617.00" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned long const, char*&gt;, unsigned long const&amp;, char*&amp;&gt; (23 samples, 0.02%)</title><rect x="801.0" y="293" width="0.3" height="15.0" fill="rgb(230,82,45)" rx="2" ry="2" />
<text  x="803.96" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::destroy&lt;char&gt; (28 samples, 0.03%)</title><rect x="369.2" y="453" width="0.3" height="15.0" fill="rgb(239,84,40)" rx="2" ry="2" />
<text  x="372.17" y="463.5" ></text>
</g>
<g >
<title>CheckTransaction (25 samples, 0.03%)</title><rect x="19.6" y="757" width="0.3" height="15.0" fill="rgb(218,66,29)" rx="2" ry="2" />
<text  x="22.59" y="767.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, zero_after_free_allocator&lt;char&gt; &gt; (286 samples, 0.31%)</title><rect x="365.9" y="501" width="3.6" height="15.0" fill="rgb(234,6,47)" rx="2" ry="2" />
<text  x="368.87" y="511.5" ></text>
</g>
<g >
<title>CRIPEMD160::Write (8 samples, 0.01%)</title><rect x="678.6" y="597" width="0.1" height="15.0" fill="rgb(217,220,42)" rx="2" ry="2" />
<text  x="681.56" y="607.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (39 samples, 0.04%)</title><rect x="95.7" y="437" width="0.5" height="15.0" fill="rgb(236,50,25)" rx="2" ry="2" />
<text  x="98.70" y="447.5" ></text>
</g>
<g >
<title>CValidationState::~CValidationState (8 samples, 0.01%)</title><rect x="660.1" y="677" width="0.1" height="15.0" fill="rgb(227,125,32)" rx="2" ry="2" />
<text  x="663.11" y="687.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (24 samples, 0.03%)</title><rect x="422.9" y="485" width="0.4" height="15.0" fill="rgb(244,7,35)" rx="2" ry="2" />
<text  x="425.95" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::end (9 samples, 0.01%)</title><rect x="1098.9" y="629" width="0.1" height="15.0" fill="rgb(228,6,13)" rx="2" ry="2" />
<text  x="1101.92" y="639.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;COutPoint const, uint256&gt;, std::pair&lt;COutPoint, uint256&gt; &gt; (67 samples, 0.07%)</title><rect x="904.5" y="565" width="0.9" height="15.0" fill="rgb(251,145,39)" rx="2" ry="2" />
<text  x="907.52" y="575.5" ></text>
</g>
<g >
<title>zero_after_free_allocator&lt;char&gt;::zero_after_free_allocator (38 samples, 0.04%)</title><rect x="352.6" y="629" width="0.5" height="15.0" fill="rgb(209,92,4)" rx="2" ry="2" />
<text  x="355.59" y="639.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (16 samples, 0.02%)</title><rect x="89.0" y="357" width="0.2" height="15.0" fill="rgb(219,118,42)" rx="2" ry="2" />
<text  x="92.03" y="367.5" ></text>
</g>
<g >
<title>std::operator!= (15 samples, 0.02%)</title><rect x="548.5" y="581" width="0.2" height="15.0" fill="rgb(241,94,19)" rx="2" ry="2" />
<text  x="551.47" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::cbegin (52 samples, 0.06%)</title><rect x="301.6" y="645" width="0.7" height="15.0" fill="rgb(208,96,9)" rx="2" ry="2" />
<text  x="304.62" y="655.5" ></text>
</g>
<g >
<title>std::pair&lt;void*, CLockLocation&gt;::~pair (15 samples, 0.02%)</title><rect x="949.0" y="533" width="0.2" height="15.0" fill="rgb(232,189,49)" rx="2" ry="2" />
<text  x="952.03" y="543.5" ></text>
</g>
<g >
<title>__db_get (47 samples, 0.05%)</title><rect x="93.9" y="469" width="0.6" height="15.0" fill="rgb(221,93,23)" rx="2" ry="2" />
<text  x="96.87" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::clear (294 samples, 0.32%)</title><rect x="365.8" y="533" width="3.7" height="15.0" fill="rgb(213,121,14)" rx="2" ry="2" />
<text  x="368.77" y="543.5" ></text>
</g>
<g >
<title>CTransaction::HasWitness (30 samples, 0.03%)</title><rect x="520.4" y="341" width="0.4" height="15.0" fill="rgb(237,16,6)" rx="2" ry="2" />
<text  x="523.38" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::_S_value (9 samples, 0.01%)</title><rect x="1154.7" y="741" width="0.1" height="15.0" fill="rgb(228,168,45)" rx="2" ry="2" />
<text  x="1157.72" y="751.5" ></text>
</g>
<g >
<title>FillableSigningProvider::ImplicitlyLearnRelatedKeyScripts (314 samples, 0.34%)</title><rect x="1124.1" y="677" width="4.0" height="15.0" fill="rgb(240,195,27)" rx="2" ry="2" />
<text  x="1127.12" y="687.5" ></text>
</g>
<g >
<title>operator&lt; (19 samples, 0.02%)</title><rect x="1045.8" y="597" width="0.2" height="15.0" fill="rgb(253,200,16)" rx="2" ry="2" />
<text  x="1048.80" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;CTransaction const,  (901 samples, 0.98%)</title><rect x="1107.7" y="597" width="11.5" height="15.0" fill="rgb(208,198,8)" rx="2" ry="2" />
<text  x="1110.65" y="607.5" ></text>
</g>
<g >
<title>__os_malloc (11 samples, 0.01%)</title><rect x="159.1" y="533" width="0.1" height="15.0" fill="rgb(243,57,4)" rx="2" ry="2" />
<text  x="162.09" y="543.5" ></text>
</g>
<g >
<title>__os_malloc (15 samples, 0.02%)</title><rect x="162.1" y="549" width="0.2" height="15.0" fill="rgb(231,132,5)" rx="2" ry="2" />
<text  x="165.13" y="559.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.02%)</title><rect x="131.6" y="357" width="0.2" height="15.0" fill="rgb(231,204,51)" rx="2" ry="2" />
<text  x="134.57" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (102 samples, 0.11%)</title><rect x="837.6" y="581" width="1.3" height="15.0" fill="rgb(248,193,38)" rx="2" ry="2" />
<text  x="840.63" y="591.5" ></text>
</g>
<g >
<title>Serialize&lt;CSizeComputer, CTransaction&gt; (1,010 samples, 1.10%)</title><rect x="1029.8" y="629" width="12.9" height="15.0" fill="rgb(218,151,7)" rx="2" ry="2" />
<text  x="1032.80" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (31 samples, 0.03%)</title><rect x="616.4" y="453" width="0.4" height="15.0" fill="rgb(234,68,21)" rx="2" ry="2" />
<text  x="619.35" y="463.5" ></text>
</g>
<g >
<title>__memp_bhwrite (11 samples, 0.01%)</title><rect x="79.0" y="389" width="0.1" height="15.0" fill="rgb(234,116,18)" rx="2" ry="2" />
<text  x="82.00" y="399.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CKeyID&amp;&gt; (15 samples, 0.02%)</title><rect x="362.4" y="581" width="0.2" height="15.0" fill="rgb(233,14,10)" rx="2" ry="2" />
<text  x="365.44" y="591.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;uint160&amp;&gt; (139 samples, 0.15%)</title><rect x="590.6" y="677" width="1.8" height="15.0" fill="rgb(236,61,32)" rx="2" ry="2" />
<text  x="593.63" y="687.5" ></text>
</g>
<g >
<title>CChainState::RewindBlockIndex (140 samples, 0.15%)</title><rect x="49.2" y="709" width="1.8" height="15.0" fill="rgb(208,70,49)" rx="2" ry="2" />
<text  x="52.24" y="719.5" ></text>
</g>
<g >
<title>DbEnv::close (12 samples, 0.01%)</title><rect x="162.4" y="485" width="0.1" height="15.0" fill="rgb(237,82,50)" rx="2" ry="2" />
<text  x="165.37" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::erase[abi:cxx11] (43 samples, 0.05%)</title><rect x="566.5" y="501" width="0.6" height="15.0" fill="rgb(245,151,45)" rx="2" ry="2" />
<text  x="569.54" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_S_right (11 samples, 0.01%)</title><rect x="684.5" y="533" width="0.2" height="15.0" fill="rgb(230,111,27)" rx="2" ry="2" />
<text  x="687.52" y="543.5" ></text>
</g>
<g >
<title>std::less&lt;CKeyID&gt;::operator (12 samples, 0.01%)</title><rect x="826.4" y="613" width="0.1" height="15.0" fill="rgb(239,81,47)" rx="2" ry="2" />
<text  x="829.37" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;CTxOut const*, std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; &gt;::__normal_iterator (13 samples, 0.01%)</title><rect x="513.1" y="277" width="0.2" height="15.0" fill="rgb(225,196,27)" rx="2" ry="2" />
<text  x="516.11" y="287.5" ></text>
</g>
<g >
<title>__dbc_close (10 samples, 0.01%)</title><rect x="95.6" y="453" width="0.1" height="15.0" fill="rgb(250,64,53)" rx="2" ry="2" />
<text  x="98.57" y="463.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (72 samples, 0.08%)</title><rect x="553.0" y="565" width="0.9" height="15.0" fill="rgb(223,51,38)" rx="2" ry="2" />
<text  x="555.99" y="575.5" ></text>
</g>
<g >
<title>CheckProofOfWork (53 samples, 0.06%)</title><rect x="43.7" y="661" width="0.7" height="15.0" fill="rgb(240,103,42)" rx="2" ry="2" />
<text  x="46.68" y="671.5" ></text>
</g>
<g >
<title>CRIPEMD160::Finalize (1,418 samples, 1.54%)</title><rect x="717.6" y="565" width="18.2" height="15.0" fill="rgb(239,77,7)" rx="2" ry="2" />
<text  x="720.60" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;secure_allocator&lt;unsigned char&gt; &gt;::construct&lt;unsigned char&gt; (898 samples, 0.97%)</title><rect x="578.2" y="581" width="11.5" height="15.0" fill="rgb(213,41,44)" rx="2" ry="2" />
<text  x="581.16" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, unsigned long, false&gt;::_S_equals (21 samples, 0.02%)</title><rect x="632.8" y="469" width="0.2" height="15.0" fill="rgb(219,16,17)" rx="2" ry="2" />
<text  x="635.76" y="479.5" ></text>
</g>
<g >
<title>COutPoint::COutPoint (8 samples, 0.01%)</title><rect x="503.3" y="293" width="0.1" height="15.0" fill="rgb(215,0,18)" rx="2" ry="2" />
<text  x="506.30" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::allocate (43 samples, 0.05%)</title><rect x="975.3" y="581" width="0.5" height="15.0" fill="rgb(225,223,34)" rx="2" ry="2" />
<text  x="978.28" y="591.5" ></text>
</g>
<g >
<title>operator&lt; (22 samples, 0.02%)</title><rect x="870.9" y="581" width="0.3" height="15.0" fill="rgb(221,1,23)" rx="2" ry="2" />
<text  x="873.87" y="591.5" ></text>
</g>
<g >
<title>ReadLE32 (50 samples, 0.05%)</title><rect x="734.8" y="533" width="0.7" height="15.0" fill="rgb(216,129,11)" rx="2" ry="2" />
<text  x="737.84" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (44 samples, 0.05%)</title><rect x="545.0" y="549" width="0.6" height="15.0" fill="rgb(215,58,46)" rx="2" ry="2" />
<text  x="548.00" y="559.5" ></text>
</g>
<g >
<title>__bam_search (273 samples, 0.30%)</title><rect x="142.9" y="501" width="3.5" height="15.0" fill="rgb(218,18,5)" rx="2" ry="2" />
<text  x="145.89" y="511.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (14 samples, 0.02%)</title><rect x="105.2" y="389" width="0.1" height="15.0" fill="rgb(222,202,8)" rx="2" ry="2" />
<text  x="108.17" y="399.5" ></text>
</g>
<g >
<title>COutPoint::Serialize&lt;CSizeComputer&gt; (110 samples, 0.12%)</title><rect x="1034.1" y="437" width="1.4" height="15.0" fill="rgb(217,81,36)" rx="2" ry="2" />
<text  x="1037.05" y="447.5" ></text>
</g>
<g >
<title>boost::detail::variant::make_initializer_node::apply&lt;boost::mpl::pair&lt;boost::detail::variant::make_initializer_node::apply&lt;boost::mpl::pair&lt;boost::detail::variant::make_initializer_node::apply&lt;boost::mpl::pair&lt;boost::detail::variant::make_initializer_node::apply&lt;boost::mpl::pair&lt;boost::detail::variant::make_initializer_node::apply&lt;boost::mpl::pair&lt;boost::detail::variant::initializer_root, mpl_::int_&lt;0&gt; &gt;, boost::mpl::l_iter&lt;boost::mpl::list6&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt; &gt; &gt;::initializer_node, mpl_::int_&lt;1&gt; &gt;, boost::mpl::l_iter&lt;boost::mpl::list5&lt;PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt; &gt; &gt;::initializer_node, mpl_::int_&lt;2&gt; &gt;, boost::mpl::l_iter&lt;boost::mpl::list4&lt;ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt; &gt; &gt;::initializer_node, mpl_::int_&lt;3&gt; &gt;, boost::mpl::l_iter&lt;boost::mpl::list3&lt;WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt; &gt; &gt;::initializer_node, mpl_::int_&lt;4&gt; &gt;, boost::mpl::l_iter&lt;boost::mpl::list2&lt;WitnessV0KeyHash, WitnessUnknown&gt; &gt; &gt;::initializer_node::initialize (28 samples, 0.03%)</title><rect x="770.2" y="581" width="0.4" height="15.0" fill="rgb(243,215,38)" rx="2" ry="2" />
<text  x="773.21" y="591.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned int&gt; (8 samples, 0.01%)</title><rect x="441.5" y="165" width="0.1" height="15.0" fill="rgb(245,207,27)" rx="2" ry="2" />
<text  x="444.48" y="175.5" ></text>
</g>
<g >
<title>_int_free (8 samples, 0.01%)</title><rect x="160.3" y="533" width="0.1" height="15.0" fill="rgb(236,142,10)" rx="2" ry="2" />
<text  x="163.27" y="543.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (60 samples, 0.07%)</title><rect x="366.9" y="485" width="0.8" height="15.0" fill="rgb(252,154,0)" rx="2" ry="2" />
<text  x="369.92" y="495.5" ></text>
</g>
<g >
<title>ReadLE32 (60 samples, 0.07%)</title><rect x="713.8" y="549" width="0.8" height="15.0" fill="rgb(226,87,31)" rx="2" ry="2" />
<text  x="716.83" y="559.5" ></text>
</g>
<g >
<title>std::recursive_mutex::unlock (32 samples, 0.03%)</title><rect x="795.5" y="581" width="0.4" height="15.0" fill="rgb(229,204,31)" rx="2" ry="2" />
<text  x="798.48" y="591.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (19 samples, 0.02%)</title><rect x="638.9" y="565" width="0.3" height="15.0" fill="rgb(245,152,19)" rx="2" ry="2" />
<text  x="641.92" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_insert_unique&lt;COutPoint const&amp;&gt; (9 samples, 0.01%)</title><rect x="1155.8" y="757" width="0.1" height="15.0" fill="rgb(215,165,51)" rx="2" ry="2" />
<text  x="1158.81" y="767.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (22 samples, 0.02%)</title><rect x="45.0" y="549" width="0.3" height="15.0" fill="rgb(247,159,35)" rx="2" ry="2" />
<text  x="48.01" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_ptr (18 samples, 0.02%)</title><rect x="870.6" y="565" width="0.2" height="15.0" fill="rgb(225,198,26)" rx="2" ry="2" />
<text  x="873.55" y="575.5" ></text>
</g>
<g >
<title>ser_writedata64&lt;CSizeComputer&gt; (23 samples, 0.02%)</title><rect x="1041.3" y="437" width="0.3" height="15.0" fill="rgb(233,38,53)" rx="2" ry="2" />
<text  x="1044.29" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::end (27 samples, 0.03%)</title><rect x="1095.4" y="677" width="0.4" height="15.0" fill="rgb(215,194,54)" rx="2" ry="2" />
<text  x="1098.42" y="687.5" ></text>
</g>
<g >
<title>KeyOriginInfo::KeyOriginInfo (16 samples, 0.02%)</title><rect x="855.5" y="517" width="0.2" height="15.0" fill="rgb(230,125,12)" rx="2" ry="2" />
<text  x="858.52" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (13 samples, 0.01%)</title><rect x="425.1" y="549" width="0.2" height="15.0" fill="rgb(247,193,20)" rx="2" ry="2" />
<text  x="428.14" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (24 samples, 0.03%)</title><rect x="631.4" y="517" width="0.3" height="15.0" fill="rgb(214,23,32)" rx="2" ry="2" />
<text  x="634.39" y="527.5" ></text>
</g>
<g >
<title>std::map&lt;uint256, CWalletTx, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::find (1,243 samples, 1.35%)</title><rect x="985.5" y="661" width="16.0" height="15.0" fill="rgb(242,44,2)" rx="2" ry="2" />
<text  x="988.54" y="671.5" ></text>
</g>
<g >
<title>__lock_get (10 samples, 0.01%)</title><rect x="91.7" y="373" width="0.2" height="15.0" fill="rgb(220,174,31)" rx="2" ry="2" />
<text  x="94.74" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;uint256, std::allocator&lt;uint256&gt; &gt;::vector (54 samples, 0.06%)</title><rect x="557.3" y="629" width="0.7" height="15.0" fill="rgb(214,9,46)" rx="2" ry="2" />
<text  x="560.33" y="639.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, char*, std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;&amp;&gt; (42 samples, 0.05%)</title><rect x="807.6" y="309" width="0.5" height="15.0" fill="rgb(253,210,0)" rx="2" ry="2" />
<text  x="810.58" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (30 samples, 0.03%)</title><rect x="811.5" y="309" width="0.4" height="15.0" fill="rgb(232,208,4)" rx="2" ry="2" />
<text  x="814.49" y="319.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (12 samples, 0.01%)</title><rect x="127.6" y="421" width="0.2" height="15.0" fill="rgb(210,27,24)" rx="2" ry="2" />
<text  x="130.64" y="431.5" ></text>
</g>
<g >
<title>CDBIterator::GetKey&lt;std::pair&lt;char, uint256&gt; &gt; (93 samples, 0.10%)</title><rect x="36.3" y="661" width="1.2" height="15.0" fill="rgb(246,13,27)" rx="2" ry="2" />
<text  x="39.29" y="671.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (12 samples, 0.01%)</title><rect x="329.5" y="581" width="0.2" height="15.0" fill="rgb(253,56,48)" rx="2" ry="2" />
<text  x="332.52" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_M_construct_node&lt;uint256&amp;, CWalletTx&amp;&gt; (461 samples, 0.50%)</title><rect x="968.9" y="613" width="5.9" height="15.0" fill="rgb(244,97,25)" rx="2" ry="2" />
<text  x="971.95" y="623.5" ></text>
</g>
<g >
<title>_mm_loadu_si128 (10 samples, 0.01%)</title><rect x="1131.9" y="645" width="0.2" height="15.0" fill="rgb(207,192,47)" rx="2" ry="2" />
<text  x="1134.93" y="655.5" ></text>
</g>
<g >
<title>Dbt::Dbt (22 samples, 0.02%)</title><rect x="169.6" y="661" width="0.3" height="15.0" fill="rgb(236,87,5)" rx="2" ry="2" />
<text  x="172.58" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_S_value (12 samples, 0.01%)</title><rect x="1045.2" y="597" width="0.2" height="15.0" fill="rgb(215,36,33)" rx="2" ry="2" />
<text  x="1048.25" y="607.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.01%)</title><rect x="79.5" y="277" width="0.1" height="15.0" fill="rgb(238,4,38)" rx="2" ry="2" />
<text  x="82.50" y="287.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (192 samples, 0.21%)</title><rect x="525.5" y="549" width="2.5" height="15.0" fill="rgb(246,190,43)" rx="2" ry="2" />
<text  x="528.52" y="559.5" ></text>
</g>
<g >
<title>CScript::Unserialize&lt;CDataStream&gt; (255 samples, 0.28%)</title><rect x="438.4" y="261" width="3.3" height="15.0" fill="rgb(214,189,4)" rx="2" ry="2" />
<text  x="441.41" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::reserve (103 samples, 0.11%)</title><rect x="1103.7" y="677" width="1.3" height="15.0" fill="rgb(225,149,5)" rx="2" ry="2" />
<text  x="1106.66" y="687.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (58 samples, 0.06%)</title><rect x="422.5" y="533" width="0.8" height="15.0" fill="rgb(219,24,47)" rx="2" ry="2" />
<text  x="425.51" y="543.5" ></text>
</g>
<g >
<title>std::multimap&lt;unsigned long, char*, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::emplace&lt;unsigned long&amp;, char*&amp;&gt; (115 samples, 0.12%)</title><rect x="629.1" y="549" width="1.5" height="15.0" fill="rgb(232,65,21)" rx="2" ry="2" />
<text  x="632.10" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned char&gt;::allocate (59 samples, 0.06%)</title><rect x="461.8" y="261" width="0.7" height="15.0" fill="rgb(229,91,26)" rx="2" ry="2" />
<text  x="464.79" y="271.5" ></text>
</g>
<g >
<title>_dl_start (21 samples, 0.02%)</title><rect x="1189.7" y="741" width="0.3" height="15.0" fill="rgb(228,87,30)" rx="2" ry="2" />
<text  x="1192.73" y="751.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_Vector_base (45 samples, 0.05%)</title><rect x="522.1" y="421" width="0.6" height="15.0" fill="rgb(229,1,33)" rx="2" ry="2" />
<text  x="525.10" y="431.5" ></text>
</g>
<g >
<title>CWalletTx::CWalletTx (289 samples, 0.31%)</title><rect x="1022.2" y="677" width="3.7" height="15.0" fill="rgb(208,172,26)" rx="2" ry="2" />
<text  x="1025.21" y="687.5" ></text>
</g>
<g >
<title>main (34 samples, 0.04%)</title><rect x="1149.5" y="725" width="0.4" height="15.0" fill="rgb(213,8,18)" rx="2" ry="2" />
<text  x="1152.47" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::end (32 samples, 0.03%)</title><rect x="508.9" y="293" width="0.4" height="15.0" fill="rgb(211,62,45)" rx="2" ry="2" />
<text  x="511.91" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (10 samples, 0.01%)</title><rect x="806.2" y="325" width="0.1" height="15.0" fill="rgb(233,50,19)" rx="2" ry="2" />
<text  x="809.19" y="335.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (12 samples, 0.01%)</title><rect x="139.6" y="453" width="0.2" height="15.0" fill="rgb(211,227,9)" rx="2" ry="2" />
<text  x="142.62" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::end (12 samples, 0.01%)</title><rect x="685.6" y="549" width="0.2" height="15.0" fill="rgb(249,175,12)" rx="2" ry="2" />
<text  x="688.64" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;interfaces::(anonymous namespace)::LockImpl, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt;::__uniq_ptr_impl (59 samples, 0.06%)</title><rect x="952.7" y="597" width="0.8" height="15.0" fill="rgb(250,144,32)" rx="2" ry="2" />
<text  x="955.71" y="607.5" ></text>
</g>
<g >
<title>ser_writedata64&lt;CHashWriter&gt; (8 samples, 0.01%)</title><rect x="1152.8" y="757" width="0.1" height="15.0" fill="rgb(241,52,36)" rx="2" ry="2" />
<text  x="1155.77" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;void*, CLockLocation&gt; &gt; (22 samples, 0.02%)</title><rect x="686.2" y="565" width="0.3" height="15.0" fill="rgb(223,208,10)" rx="2" ry="2" />
<text  x="689.21" y="575.5" ></text>
</g>
<g >
<title>std::pair&lt;COutPoint, uint256&gt;::pair&lt;COutPoint, uint256, true&gt; (19 samples, 0.02%)</title><rect x="892.1" y="613" width="0.2" height="15.0" fill="rgb(230,28,12)" rx="2" ry="2" />
<text  x="895.11" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::allocate (15 samples, 0.02%)</title><rect x="801.5" y="293" width="0.2" height="15.0" fill="rgb(252,117,47)" rx="2" ry="2" />
<text  x="804.46" y="303.5" ></text>
</g>
<g >
<title>__bam_search (417 samples, 0.45%)</title><rect x="97.1" y="421" width="5.3" height="15.0" fill="rgb(220,185,42)" rx="2" ry="2" />
<text  x="100.06" y="431.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::size (9 samples, 0.01%)</title><rect x="1037.1" y="341" width="0.1" height="15.0" fill="rgb(252,99,26)" rx="2" ry="2" />
<text  x="1040.05" y="351.5" ></text>
</g>
<g >
<title>__bam_vrfy_subtree (4,079 samples, 4.43%)</title><rect x="72.1" y="549" width="52.3" height="15.0" fill="rgb(222,62,34)" rx="2" ry="2" />
<text  x="75.12" y="559.5" >__bam..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::end (21 samples, 0.02%)</title><rect x="535.5" y="597" width="0.3" height="15.0" fill="rgb(222,133,7)" rx="2" ry="2" />
<text  x="538.53" y="607.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, CTxOut, std::allocator&lt;CTxOut&gt;, CTxOut&gt; (270 samples, 0.29%)</title><rect x="509.9" y="309" width="3.5" height="15.0" fill="rgb(243,94,0)" rx="2" ry="2" />
<text  x="512.91" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::end (17 samples, 0.02%)</title><rect x="790.2" y="549" width="0.3" height="15.0" fill="rgb(224,64,8)" rx="2" ry="2" />
<text  x="793.24" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (24 samples, 0.03%)</title><rect x="964.6" y="565" width="0.3" height="15.0" fill="rgb(223,154,38)" rx="2" ry="2" />
<text  x="967.59" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;CTransaction const,  (257 samples, 0.28%)</title><rect x="525.0" y="581" width="3.3" height="15.0" fill="rgb(209,136,54)" rx="2" ry="2" />
<text  x="528.04" y="591.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (8 samples, 0.01%)</title><rect x="1147.1" y="661" width="0.1" height="15.0" fill="rgb(233,83,30)" rx="2" ry="2" />
<text  x="1150.07" y="671.5" ></text>
</g>
<g >
<title>secp256k1_ecmult_context_build (32 samples, 0.03%)</title><rect x="1149.5" y="645" width="0.4" height="15.0" fill="rgb(206,83,31)" rx="2" ry="2" />
<text  x="1152.48" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (32 samples, 0.03%)</title><rect x="548.1" y="565" width="0.4" height="15.0" fill="rgb(213,155,48)" rx="2" ry="2" />
<text  x="551.06" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_erase_at_end (109 samples, 0.12%)</title><rect x="377.1" y="517" width="1.4" height="15.0" fill="rgb(221,101,12)" rx="2" ry="2" />
<text  x="380.08" y="527.5" ></text>
</g>
<g >
<title>CScript::operator= (190 samples, 0.21%)</title><rect x="660.3" y="645" width="2.4" height="15.0" fill="rgb(221,89,53)" rx="2" ry="2" />
<text  x="663.29" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt; &gt;::base (28 samples, 0.03%)</title><rect x="182.0" y="613" width="0.3" height="15.0" fill="rgb(244,138,54)" rx="2" ry="2" />
<text  x="184.95" y="623.5" ></text>
</g>
<g >
<title>CachableAmount::Reset (33 samples, 0.04%)</title><rect x="955.9" y="629" width="0.4" height="15.0" fill="rgb(226,7,50)" rx="2" ry="2" />
<text  x="958.92" y="639.5" ></text>
</g>
<g >
<title>CSHA256::Write (161 samples, 0.17%)</title><rect x="1124.1" y="597" width="2.1" height="15.0" fill="rgb(252,1,48)" rx="2" ry="2" />
<text  x="1127.12" y="607.5" ></text>
</g>
<g >
<title>arith_uint256::SetCompact (23 samples, 0.02%)</title><rect x="44.0" y="645" width="0.3" height="15.0" fill="rgb(211,10,24)" rx="2" ry="2" />
<text  x="47.00" y="655.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (9 samples, 0.01%)</title><rect x="686.6" y="565" width="0.1" height="15.0" fill="rgb(229,47,21)" rx="2" ry="2" />
<text  x="689.57" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;::_M_ptr (31 samples, 0.03%)</title><rect x="779.3" y="501" width="0.4" height="15.0" fill="rgb(215,193,9)" rx="2" ry="2" />
<text  x="782.32" y="511.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;uint256&amp;&gt; (1,231 samples, 1.34%)</title><rect x="592.4" y="677" width="15.8" height="15.0" fill="rgb(252,68,44)" rx="2" ry="2" />
<text  x="595.41" y="687.5" ></text>
</g>
<g >
<title>interfaces::Chain::Lock::~Lock (8 samples, 0.01%)</title><rect x="1021.7" y="597" width="0.1" height="15.0" fill="rgb(248,160,41)" rx="2" ry="2" />
<text  x="1024.71" y="607.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (18 samples, 0.02%)</title><rect x="1147.1" y="693" width="0.2" height="15.0" fill="rgb(244,68,28)" rx="2" ry="2" />
<text  x="1150.07" y="703.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;COutPoint&gt;, std::_Rb_tree_iterator&lt;COutPoint&gt; &gt;::pair&lt;std::_Rb_tree_iterator&lt;COutPoint&gt;, std::_Rb_tree_iterator&lt;COutPoint&gt;, true&gt; (19 samples, 0.02%)</title><rect x="932.6" y="581" width="0.2" height="15.0" fill="rgb(210,108,17)" rx="2" ry="2" />
<text  x="935.57" y="591.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (47 samples, 0.05%)</title><rect x="298.8" y="565" width="0.6" height="15.0" fill="rgb(208,165,24)" rx="2" ry="2" />
<text  x="301.79" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char*&amp;&amp;&gt;::_Tuple_impl (8 samples, 0.01%)</title><rect x="635.8" y="453" width="0.1" height="15.0" fill="rgb(239,202,42)" rx="2" ry="2" />
<text  x="638.83" y="463.5" ></text>
</g>
<g >
<title>CWallet::AddToSpends (5,061 samples, 5.49%)</title><rect x="868.3" y="645" width="64.8" height="15.0" fill="rgb(253,186,9)" rx="2" ry="2" />
<text  x="871.32" y="655.5" >CWallet..</text>
</g>
<g >
<title>_mm_add_epi32 (9 samples, 0.01%)</title><rect x="1121.3" y="581" width="0.1" height="15.0" fill="rgb(241,215,22)" rx="2" ry="2" />
<text  x="1124.31" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_range_insert&lt;char const*&gt; (46 samples, 0.05%)</title><rect x="1179.2" y="757" width="0.6" height="15.0" fill="rgb(250,66,8)" rx="2" ry="2" />
<text  x="1182.18" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_addr (31 samples, 0.03%)</title><rect x="989.1" y="549" width="0.4" height="15.0" fill="rgb(220,33,49)" rx="2" ry="2" />
<text  x="992.10" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::max_size (67 samples, 0.07%)</title><rect x="473.7" y="325" width="0.8" height="15.0" fill="rgb(217,206,7)" rx="2" ry="2" />
<text  x="476.68" y="335.5" ></text>
</g>
<g >
<title>CLockLocation::~CLockLocation (10 samples, 0.01%)</title><rect x="850.9" y="533" width="0.1" height="15.0" fill="rgb(224,114,34)" rx="2" ry="2" />
<text  x="853.92" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::vector (48 samples, 0.05%)</title><rect x="1025.3" y="661" width="0.6" height="15.0" fill="rgb(215,49,4)" rx="2" ry="2" />
<text  x="1028.29" y="671.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, zero_after_free_allocator&lt;char&gt; &gt; (98 samples, 0.11%)</title><rect x="377.2" y="501" width="1.2" height="15.0" fill="rgb(249,2,8)" rx="2" ry="2" />
<text  x="380.19" y="511.5" ></text>
</g>
<g >
<title>DbEnv::open (27 samples, 0.03%)</title><rect x="162.0" y="629" width="0.3" height="15.0" fill="rgb(241,214,19)" rx="2" ry="2" />
<text  x="165.00" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::push_back (57 samples, 0.06%)</title><rect x="849.0" y="581" width="0.8" height="15.0" fill="rgb(230,82,28)" rx="2" ry="2" />
<text  x="852.05" y="591.5" ></text>
</g>
<g >
<title>CLockLocation::CLockLocation (38 samples, 0.04%)</title><rect x="682.0" y="549" width="0.5" height="15.0" fill="rgb(218,65,50)" rx="2" ry="2" />
<text  x="685.01" y="559.5" ></text>
</g>
<g >
<title>std::multimap&lt;unsigned long, char*, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::end (12 samples, 0.01%)</title><rect x="610.5" y="549" width="0.1" height="15.0" fill="rgb(220,50,38)" rx="2" ry="2" />
<text  x="613.45" y="559.5" ></text>
</g>
<g >
<title>__db_lput (28 samples, 0.03%)</title><rect x="98.7" y="405" width="0.4" height="15.0" fill="rgb(224,130,36)" rx="2" ry="2" />
<text  x="101.75" y="415.5" ></text>
</g>
<g >
<title>CTransaction::CTransaction&lt;CDataStream&gt; (352 samples, 0.38%)</title><rect x="162.5" y="581" width="4.5" height="15.0" fill="rgb(226,140,42)" rx="2" ry="2" />
<text  x="165.53" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::end (23 samples, 0.02%)</title><rect x="871.2" y="581" width="0.3" height="15.0" fill="rgb(213,78,22)" rx="2" ry="2" />
<text  x="874.23" y="591.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const*, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (25 samples, 0.03%)</title><rect x="973.8" y="501" width="0.3" height="15.0" fill="rgb(216,151,52)" rx="2" ry="2" />
<text  x="976.81" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::construct&lt;char, char const&amp;&gt; (33 samples, 0.04%)</title><rect x="38.0" y="549" width="0.5" height="15.0" fill="rgb(232,215,2)" rx="2" ry="2" />
<text  x="41.03" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;CTxIn const*, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt;::__normal_iterator (8 samples, 0.01%)</title><rect x="1053.4" y="645" width="0.1" height="15.0" fill="rgb(238,126,33)" rx="2" ry="2" />
<text  x="1056.38" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt;, std::pair&lt;boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt; const, CAddressBookData&gt;, std::_Select1st&lt;std::pair&lt;boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt; const, CAddressBookData&gt; &gt;, std::less&lt;boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt; &gt;, std::allocator&lt;std::pair&lt;boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt; const, CAddressBookData&gt; &gt; &gt;::lower_bound (9 samples, 0.01%)</title><rect x="1065.6" y="645" width="0.1" height="15.0" fill="rgb(211,101,24)" rx="2" ry="2" />
<text  x="1068.57" y="655.5" ></text>
</g>
<g >
<title>CLockLocation::CLockLocation (84 samples, 0.09%)</title><rect x="947.9" y="501" width="1.1" height="15.0" fill="rgb(223,20,40)" rx="2" ry="2" />
<text  x="950.92" y="511.5" ></text>
</g>
<g >
<title>CHashWriter::write (46 samples, 0.05%)</title><rect x="491.1" y="101" width="0.6" height="15.0" fill="rgb(222,7,8)" rx="2" ry="2" />
<text  x="494.11" y="111.5" ></text>
</g>
<g >
<title>ser_readdata64&lt;CDataStream&gt; (16 samples, 0.02%)</title><rect x="370.2" y="565" width="0.2" height="15.0" fill="rgb(225,222,20)" rx="2" ry="2" />
<text  x="373.21" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_put_node (12 samples, 0.01%)</title><rect x="566.7" y="453" width="0.2" height="15.0" fill="rgb(217,73,27)" rx="2" ry="2" />
<text  x="569.72" y="463.5" ></text>
</g>
<g >
<title>atoi64 (24 samples, 0.03%)</title><rect x="539.3" y="629" width="0.3" height="15.0" fill="rgb(251,1,8)" rx="2" ry="2" />
<text  x="542.30" y="639.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::~_Vector_base (1,199 samples, 1.30%)</title><rect x="1080.0" y="661" width="15.4" height="15.0" fill="rgb(220,111,5)" rx="2" ry="2" />
<text  x="1083.02" y="671.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::DBIter::FindNextUserEntry (51 samples, 0.06%)</title><rect x="41.8" y="629" width="0.6" height="15.0" fill="rgb(237,31,31)" rx="2" ry="2" />
<text  x="44.77" y="639.5" ></text>
</g>
<g >
<title>secure_allocator&lt;unsigned char&gt;::deallocate (872 samples, 0.95%)</title><rect x="628.4" y="597" width="11.2" height="15.0" fill="rgb(210,70,33)" rx="2" ry="2" />
<text  x="631.39" y="607.5" ></text>
</g>
<g >
<title>__memp_pgread (11 samples, 0.01%)</title><rect x="92.6" y="373" width="0.2" height="15.0" fill="rgb(233,73,5)" rx="2" ry="2" />
<text  x="95.64" y="383.5" ></text>
</g>
<g >
<title>__memp_fget (9 samples, 0.01%)</title><rect x="139.0" y="469" width="0.1" height="15.0" fill="rgb(246,172,48)" rx="2" ry="2" />
<text  x="141.99" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; const*, std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; (12 samples, 0.01%)</title><rect x="477.1" y="357" width="0.2" height="15.0" fill="rgb(209,39,12)" rx="2" ry="2" />
<text  x="480.15" y="367.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;&amp;&gt; (188 samples, 0.20%)</title><rect x="362.9" y="533" width="2.4" height="15.0" fill="rgb(244,8,6)" rx="2" ry="2" />
<text  x="365.86" y="543.5" ></text>
</g>
<g >
<title>CSHA256::Reset (8 samples, 0.01%)</title><rect x="482.5" y="373" width="0.1" height="15.0" fill="rgb(247,134,30)" rx="2" ry="2" />
<text  x="485.47" y="383.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CScript&gt; (230 samples, 0.25%)</title><rect x="489.9" y="213" width="2.9" height="15.0" fill="rgb(230,71,10)" rx="2" ry="2" />
<text  x="492.90" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_key_compare&lt;std::less&lt;COutPoint&gt; &gt;::_Rb_tree_key_compare (10 samples, 0.01%)</title><rect x="1050.6" y="613" width="0.2" height="15.0" fill="rgb(213,95,3)" rx="2" ry="2" />
<text  x="1053.64" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_create_node&lt;unsigned long&amp;, char*&amp;&gt; (99 samples, 0.11%)</title><rect x="1081.9" y="533" width="1.3" height="15.0" fill="rgb(243,168,10)" rx="2" ry="2" />
<text  x="1084.91" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_S_do_relocate (22 samples, 0.02%)</title><rect x="623.3" y="613" width="0.3" height="15.0" fill="rgb(220,9,34)" rx="2" ry="2" />
<text  x="626.31" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (16 samples, 0.02%)</title><rect x="1054.8" y="581" width="0.2" height="15.0" fill="rgb(227,57,43)" rx="2" ry="2" />
<text  x="1057.78" y="591.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (62 samples, 0.07%)</title><rect x="93.1" y="421" width="0.7" height="15.0" fill="rgb(237,209,15)" rx="2" ry="2" />
<text  x="96.05" y="431.5" ></text>
</g>
<g >
<title>__os_io (11 samples, 0.01%)</title><rect x="92.6" y="357" width="0.2" height="15.0" fill="rgb(222,31,44)" rx="2" ry="2" />
<text  x="95.64" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;::_M_ptr (8 samples, 0.01%)</title><rect x="825.7" y="581" width="0.1" height="15.0" fill="rgb(233,213,17)" rx="2" ry="2" />
<text  x="828.74" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;::operator* (13 samples, 0.01%)</title><rect x="687.6" y="629" width="0.1" height="15.0" fill="rgb(234,22,32)" rx="2" ry="2" />
<text  x="690.56" y="639.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;&amp;&gt; (1,545 samples, 1.68%)</title><rect x="456.5" y="405" width="19.8" height="15.0" fill="rgb(215,139,3)" rx="2" ry="2" />
<text  x="459.48" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;uint256, std::allocator&lt;uint256&gt; &gt;::~_Vector_base (40 samples, 0.04%)</title><rect x="558.6" y="613" width="0.5" height="15.0" fill="rgb(223,28,13)" rx="2" ry="2" />
<text  x="561.62" y="623.5" ></text>
</g>
<g >
<title>__bam_cmp (42 samples, 0.05%)</title><rect x="82.9" y="405" width="0.6" height="15.0" fill="rgb(252,66,24)" rx="2" ry="2" />
<text  x="85.95" y="415.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;unsigned char*, unsigned long, secure_allocator&lt;unsigned char&gt; &gt; (1,329 samples, 1.44%)</title><rect x="572.6" y="597" width="17.1" height="15.0" fill="rgb(212,167,31)" rx="2" ry="2" />
<text  x="575.65" y="607.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, interfaces::Chain::Lock*, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt; (8 samples, 0.01%)</title><rect x="1173.8" y="757" width="0.1" height="15.0" fill="rgb(242,17,16)" rx="2" ry="2" />
<text  x="1176.77" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::_M_default_append (337 samples, 0.37%)</title><rect x="452.1" y="341" width="4.3" height="15.0" fill="rgb(241,10,39)" rx="2" ry="2" />
<text  x="455.10" y="351.5" ></text>
</g>
<g >
<title>ReadCompactSize&lt;CDataStream&gt; (25 samples, 0.03%)</title><rect x="564.5" y="629" width="0.3" height="15.0" fill="rgb(223,70,32)" rx="2" ry="2" />
<text  x="567.47" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase_aux (10 samples, 0.01%)</title><rect x="1158.0" y="757" width="0.2" height="15.0" fill="rgb(221,23,14)" rx="2" ry="2" />
<text  x="1161.03" y="767.5" ></text>
</g>
<g >
<title>__memp_pgread (29 samples, 0.03%)</title><rect x="101.7" y="389" width="0.4" height="15.0" fill="rgb(214,46,25)" rx="2" ry="2" />
<text  x="104.75" y="399.5" ></text>
</g>
<g >
<title>__memp_pgread (28 samples, 0.03%)</title><rect x="79.3" y="405" width="0.3" height="15.0" fill="rgb(227,4,8)" rx="2" ry="2" />
<text  x="82.26" y="415.5" ></text>
</g>
<g >
<title>__bam_search (30 samples, 0.03%)</title><rect x="147.5" y="485" width="0.4" height="15.0" fill="rgb(240,162,39)" rx="2" ry="2" />
<text  x="150.50" y="495.5" ></text>
</g>
<g >
<title>__gthread_recursive_mutex_unlock (28 samples, 0.03%)</title><rect x="795.5" y="565" width="0.4" height="15.0" fill="rgb(213,76,42)" rx="2" ry="2" />
<text  x="798.53" y="575.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (12 samples, 0.01%)</title><rect x="76.7" y="373" width="0.2" height="15.0" fill="rgb(218,140,36)" rx="2" ry="2" />
<text  x="79.75" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned int const*, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt; &gt;::base (9 samples, 0.01%)</title><rect x="853.2" y="501" width="0.1" height="15.0" fill="rgb(252,108,13)" rx="2" ry="2" />
<text  x="856.21" y="511.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (11 samples, 0.01%)</title><rect x="106.3" y="453" width="0.2" height="15.0" fill="rgb(209,64,10)" rx="2" ry="2" />
<text  x="109.33" y="463.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, unsigned long, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt; &gt;::find (109 samples, 0.12%)</title><rect x="1092.6" y="565" width="1.4" height="15.0" fill="rgb(228,149,37)" rx="2" ry="2" />
<text  x="1095.58" y="575.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CSizeComputer, long&gt; (51 samples, 0.06%)</title><rect x="1041.0" y="485" width="0.6" height="15.0" fill="rgb(251,47,7)" rx="2" ry="2" />
<text  x="1043.98" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_S_relocate (8 samples, 0.01%)</title><rect x="364.9" y="437" width="0.1" height="15.0" fill="rgb(205,68,9)" rx="2" ry="2" />
<text  x="367.90" y="447.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;char*, zero_after_free_allocator&lt;char&gt; &gt; (2,150 samples, 2.33%)</title><rect x="380.7" y="533" width="27.5" height="15.0" fill="rgb(242,69,27)" rx="2" ry="2" />
<text  x="383.66" y="543.5" >s..</text>
</g>
<g >
<title>__lock_get_internal (8 samples, 0.01%)</title><rect x="94.2" y="357" width="0.1" height="15.0" fill="rgb(220,43,23)" rx="2" ry="2" />
<text  x="97.16" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;interfaces::(anonymous namespace)::LockImpl, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt;::release (40 samples, 0.04%)</title><rect x="955.0" y="613" width="0.5" height="15.0" fill="rgb(205,116,7)" rx="2" ry="2" />
<text  x="958.02" y="623.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::end (9 samples, 0.01%)</title><rect x="660.5" y="565" width="0.1" height="15.0" fill="rgb(215,95,43)" rx="2" ry="2" />
<text  x="663.52" y="575.5" ></text>
</g>
<g >
<title>CTransaction::ComputeWitnessHash (1,685 samples, 1.83%)</title><rect x="500.1" y="437" width="21.6" height="15.0" fill="rgb(249,113,31)" rx="2" ry="2" />
<text  x="503.11" y="447.5" >C..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.01%)</title><rect x="1065.0" y="645" width="0.1" height="15.0" fill="rgb(228,129,18)" rx="2" ry="2" />
<text  x="1067.99" y="655.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::destroy&lt;char&gt; (1,111 samples, 1.21%)</title><rect x="394.0" y="517" width="14.2" height="15.0" fill="rgb(212,49,39)" rx="2" ry="2" />
<text  x="396.97" y="527.5" ></text>
</g>
<g >
<title>CSHA256::Write (28 samples, 0.03%)</title><rect x="501.0" y="357" width="0.4" height="15.0" fill="rgb(247,144,27)" rx="2" ry="2" />
<text  x="504.02" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;uint256, std::pair&lt;uint256 const, CWalletTx&gt;, std::_Select1st&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::_M_get_insert_unique_pos (608 samples, 0.66%)</title><rect x="975.9" y="629" width="7.8" height="15.0" fill="rgb(254,26,10)" rx="2" ry="2" />
<text  x="978.90" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (8 samples, 0.01%)</title><rect x="1165.6" y="757" width="0.1" height="15.0" fill="rgb(234,44,9)" rx="2" ry="2" />
<text  x="1168.60" y="767.5" ></text>
</g>
<g >
<title>CScript::Serialize&lt;CHashWriter&gt; (91 samples, 0.10%)</title><rect x="506.4" y="197" width="1.1" height="15.0" fill="rgb(231,37,36)" rx="2" ry="2" />
<text  x="509.37" y="207.5" ></text>
</g>
<g >
<title>CSHA256::Write (18 samples, 0.02%)</title><rect x="484.7" y="261" width="0.2" height="15.0" fill="rgb(208,27,42)" rx="2" ry="2" />
<text  x="487.66" y="271.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;unsigned char*, unsigned char*, secure_allocator&lt;unsigned char&gt; &gt; (10 samples, 0.01%)</title><rect x="820.2" y="421" width="0.1" height="15.0" fill="rgb(221,170,37)" rx="2" ry="2" />
<text  x="823.17" y="431.5" ></text>
</g>
<g >
<title>CDataStream::read (14 samples, 0.02%)</title><rect x="529.5" y="549" width="0.2" height="15.0" fill="rgb(216,128,43)" rx="2" ry="2" />
<text  x="532.49" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::cbegin (22 samples, 0.02%)</title><rect x="1103.4" y="661" width="0.3" height="15.0" fill="rgb(242,223,19)" rx="2" ry="2" />
<text  x="1106.38" y="671.5" ></text>
</g>
<g >
<title>std::pair&lt;void*, CLockLocation&gt;::pair&lt;void*&amp;, true&gt; (40 samples, 0.04%)</title><rect x="682.0" y="565" width="0.5" height="15.0" fill="rgb(245,2,24)" rx="2" ry="2" />
<text  x="684.99" y="575.5" ></text>
</g>
<g >
<title>std::pair&lt;void*, CLockLocation&gt;::pair (18 samples, 0.02%)</title><rect x="849.5" y="517" width="0.3" height="15.0" fill="rgb(240,2,6)" rx="2" ry="2" />
<text  x="852.52" y="527.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (16 samples, 0.02%)</title><rect x="1063.4" y="581" width="0.3" height="15.0" fill="rgb(217,81,40)" rx="2" ry="2" />
<text  x="1066.45" y="591.5" ></text>
</g>
<g >
<title>BerkeleyBatch::VerifyEnvironment (28 samples, 0.03%)</title><rect x="162.0" y="661" width="0.4" height="15.0" fill="rgb(205,159,0)" rx="2" ry="2" />
<text  x="165.00" y="671.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;unsigned char*&gt; (8 samples, 0.01%)</title><rect x="623.5" y="581" width="0.1" height="15.0" fill="rgb(243,198,50)" rx="2" ry="2" />
<text  x="626.47" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CBlockIndex*, std::pair&lt;CBlockIndex* const, CBlockIndex*&gt;, std::_Select1st&lt;std::pair&lt;CBlockIndex* const, CBlockIndex*&gt; &gt;, std::less&lt;CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;CBlockIndex* const, CBlockIndex*&gt; &gt; &gt;::_S_value (19 samples, 0.02%)</title><rect x="49.8" y="629" width="0.2" height="15.0" fill="rgb(254,179,35)" rx="2" ry="2" />
<text  x="52.80" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (11 samples, 0.01%)</title><rect x="1159.3" y="757" width="0.1" height="15.0" fill="rgb(253,28,1)" rx="2" ry="2" />
<text  x="1162.25" y="767.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CSizeComputer, unsigned int&gt; (39 samples, 0.04%)</title><rect x="1034.9" y="405" width="0.5" height="15.0" fill="rgb(235,60,22)" rx="2" ry="2" />
<text  x="1037.91" y="415.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (12 samples, 0.01%)</title><rect x="151.0" y="469" width="0.2" height="15.0" fill="rgb(212,142,1)" rx="2" ry="2" />
<text  x="154.03" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt; (16 samples, 0.02%)</title><rect x="1098.7" y="597" width="0.2" height="15.0" fill="rgb(228,114,47)" rx="2" ry="2" />
<text  x="1101.70" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_erase_at_end (2,158 samples, 2.34%)</title><rect x="380.6" y="549" width="27.6" height="15.0" fill="rgb(246,23,13)" rx="2" ry="2" />
<text  x="383.60" y="559.5" >s..</text>
</g>
<g >
<title>CHashWriter::write (8 samples, 0.01%)</title><rect x="512.6" y="261" width="0.1" height="15.0" fill="rgb(209,153,23)" rx="2" ry="2" />
<text  x="515.57" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, CWalletTx*&gt;, std::_Select1st&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;long, CWalletTx*&gt; &gt; (84 samples, 0.09%)</title><rect x="1001.9" y="613" width="1.1" height="15.0" fill="rgb(242,138,54)" rx="2" ry="2" />
<text  x="1004.91" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_begin (11 samples, 0.01%)</title><rect x="1044.9" y="613" width="0.1" height="15.0" fill="rgb(213,127,8)" rx="2" ry="2" />
<text  x="1047.88" y="623.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, CKeyID const&amp;&gt; (9 samples, 0.01%)</title><rect x="855.8" y="533" width="0.1" height="15.0" fill="rgb(228,134,12)" rx="2" ry="2" />
<text  x="858.80" y="543.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::size (9 samples, 0.01%)</title><rect x="378.8" y="533" width="0.1" height="15.0" fill="rgb(231,6,15)" rx="2" ry="2" />
<text  x="381.80" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::size (12 samples, 0.01%)</title><rect x="468.2" y="309" width="0.1" height="15.0" fill="rgb(216,54,16)" rx="2" ry="2" />
<text  x="471.16" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_deallocate (8 samples, 0.01%)</title><rect x="433.9" y="309" width="0.1" height="15.0" fill="rgb(232,118,31)" rx="2" ry="2" />
<text  x="436.89" y="319.5" ></text>
</g>
<g >
<title>CTxIn::CTxIn (34 samples, 0.04%)</title><rect x="444.3" y="261" width="0.4" height="15.0" fill="rgb(251,30,33)" rx="2" ry="2" />
<text  x="447.28" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (21 samples, 0.02%)</title><rect x="636.6" y="485" width="0.2" height="15.0" fill="rgb(253,94,52)" rx="2" ry="2" />
<text  x="639.56" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_ptr (83 samples, 0.09%)</title><rect x="988.4" y="565" width="1.1" height="15.0" fill="rgb(215,50,28)" rx="2" ry="2" />
<text  x="991.44" y="575.5" ></text>
</g>
<g >
<title>Arena::free (12 samples, 0.01%)</title><rect x="12.8" y="757" width="0.1" height="15.0" fill="rgb(237,169,45)" rx="2" ry="2" />
<text  x="15.78" y="767.5" ></text>
</g>
<g >
<title>CHashWriter::write (26 samples, 0.03%)</title><rect x="493.6" y="261" width="0.3" height="15.0" fill="rgb(228,33,20)" rx="2" ry="2" />
<text  x="496.58" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (8 samples, 0.01%)</title><rect x="1164.9" y="757" width="0.1" height="15.0" fill="rgb(224,198,26)" rx="2" ry="2" />
<text  x="1167.92" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::clear (111 samples, 0.12%)</title><rect x="377.0" y="533" width="1.5" height="15.0" fill="rgb(237,193,50)" rx="2" ry="2" />
<text  x="380.05" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt; &gt;::_M_deallocate_node_ptr (19 samples, 0.02%)</title><rect x="1092.0" y="485" width="0.3" height="15.0" fill="rgb(254,149,1)" rx="2" ry="2" />
<text  x="1095.04" y="495.5" ></text>
</g>
<g >
<title>VerifyWallets (10 samples, 0.01%)</title><rect x="1144.7" y="725" width="0.1" height="15.0" fill="rgb(241,77,6)" rx="2" ry="2" />
<text  x="1147.70" y="735.5" ></text>
</g>
<g >
<title>BerkeleyBatch::ReadAtCursor (20 samples, 0.02%)</title><rect x="13.0" y="757" width="0.3" height="15.0" fill="rgb(242,21,39)" rx="2" ry="2" />
<text  x="16.00" y="767.5" ></text>
</g>
<g >
<title>WriteLE32 (8 samples, 0.01%)</title><rect x="756.0" y="549" width="0.1" height="15.0" fill="rgb(237,221,54)" rx="2" ry="2" />
<text  x="759.04" y="559.5" ></text>
</g>
<g >
<title>CScriptWitness::IsNull (28 samples, 0.03%)</title><rect x="500.4" y="405" width="0.3" height="15.0" fill="rgb(246,61,15)" rx="2" ry="2" />
<text  x="503.35" y="415.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.02%)</title><rect x="160.9" y="389" width="0.2" height="15.0" fill="rgb(220,67,38)" rx="2" ry="2" />
<text  x="163.87" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::__normal_iterator (10 samples, 0.01%)</title><rect x="1099.2" y="645" width="0.1" height="15.0" fill="rgb(212,85,16)" rx="2" ry="2" />
<text  x="1102.18" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_S_use_relocate (13 samples, 0.01%)</title><rect x="445.9" y="325" width="0.2" height="15.0" fill="rgb(243,4,31)" rx="2" ry="2" />
<text  x="448.92" y="335.5" ></text>
</g>
<g >
<title>AppInit (509 samples, 0.55%)</title><rect x="29.5" y="741" width="6.5" height="15.0" fill="rgb(209,195,40)" rx="2" ry="2" />
<text  x="32.50" y="751.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, uint256&gt; (19 samples, 0.02%)</title><rect x="43.4" y="533" width="0.2" height="15.0" fill="rgb(237,14,42)" rx="2" ry="2" />
<text  x="46.37" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (550 samples, 0.60%)</title><rect x="1137.3" y="645" width="7.1" height="15.0" fill="rgb(252,132,40)" rx="2" ry="2" />
<text  x="1140.31" y="655.5" ></text>
</g>
<g >
<title>memory_cleanse (60 samples, 0.07%)</title><rect x="357.3" y="597" width="0.8" height="15.0" fill="rgb(232,64,46)" rx="2" ry="2" />
<text  x="360.33" y="607.5" ></text>
</g>
<g >
<title>__bam_search (33 samples, 0.04%)</title><rect x="146.8" y="485" width="0.5" height="15.0" fill="rgb(218,127,54)" rx="2" ry="2" />
<text  x="149.84" y="495.5" ></text>
</g>
<g >
<title>[unknown] (23 samples, 0.02%)</title><rect x="328.4" y="517" width="0.3" height="15.0" fill="rgb(205,108,24)" rx="2" ry="2" />
<text  x="331.36" y="527.5" ></text>
</g>
<g >
<title>__db_lget (48 samples, 0.05%)</title><rect x="112.7" y="405" width="0.6" height="15.0" fill="rgb(228,63,16)" rx="2" ry="2" />
<text  x="115.67" y="415.5" ></text>
</g>
<g >
<title>__bam_iitem (14 samples, 0.02%)</title><rect x="95.2" y="421" width="0.2" height="15.0" fill="rgb(228,17,20)" rx="2" ry="2" />
<text  x="98.18" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;CTxOut const*, std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; &gt; (11 samples, 0.01%)</title><rect x="1043.6" y="661" width="0.1" height="15.0" fill="rgb(205,205,23)" rx="2" ry="2" />
<text  x="1046.59" y="671.5" ></text>
</g>
<g >
<title>__memp_alloc (11 samples, 0.01%)</title><rect x="93.6" y="373" width="0.2" height="15.0" fill="rgb(217,77,18)" rx="2" ry="2" />
<text  x="96.63" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_M_default_append (11 samples, 0.01%)</title><rect x="1182.1" y="757" width="0.1" height="15.0" fill="rgb(231,75,1)" rx="2" ry="2" />
<text  x="1185.06" y="767.5" ></text>
</g>
<g >
<title>__dbc_close (13 samples, 0.01%)</title><rect x="94.6" y="453" width="0.2" height="15.0" fill="rgb(212,63,26)" rx="2" ry="2" />
<text  x="97.59" y="463.5" ></text>
</g>
<g >
<title>__memp_fget (22 samples, 0.02%)</title><rect x="66.4" y="453" width="0.3" height="15.0" fill="rgb(244,121,54)" rx="2" ry="2" />
<text  x="69.39" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (14 samples, 0.02%)</title><rect x="545.4" y="533" width="0.2" height="15.0" fill="rgb(209,205,1)" rx="2" ry="2" />
<text  x="548.38" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (8 samples, 0.01%)</title><rect x="425.7" y="517" width="0.1" height="15.0" fill="rgb(231,146,26)" rx="2" ry="2" />
<text  x="428.69" y="527.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (10 samples, 0.01%)</title><rect x="105.9" y="437" width="0.1" height="15.0" fill="rgb(232,145,20)" rx="2" ry="2" />
<text  x="108.86" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (8 samples, 0.01%)</title><rect x="809.0" y="293" width="0.1" height="15.0" fill="rgb(226,69,5)" rx="2" ry="2" />
<text  x="812.03" y="303.5" ></text>
</g>
<g >
<title>CDataStream::read (25 samples, 0.03%)</title><rect x="431.1" y="357" width="0.4" height="15.0" fill="rgb(237,173,2)" rx="2" ry="2" />
<text  x="434.14" y="367.5" ></text>
</g>
<g >
<title>[unknown] (39 samples, 0.04%)</title><rect x="132.1" y="389" width="0.5" height="15.0" fill="rgb(242,162,36)" rx="2" ry="2" />
<text  x="135.06" y="399.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (20 samples, 0.02%)</title><rect x="1068.2" y="645" width="0.3" height="15.0" fill="rgb(249,81,41)" rx="2" ry="2" />
<text  x="1071.22" y="655.5" ></text>
</g>
<g >
<title>std::less&lt;long&gt;::operator (619 samples, 0.67%)</title><rect x="1007.3" y="613" width="7.9" height="15.0" fill="rgb(237,53,43)" rx="2" ry="2" />
<text  x="1010.30" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_S_value (57 samples, 0.06%)</title><rect x="845.2" y="517" width="0.7" height="15.0" fill="rgb(223,92,40)" rx="2" ry="2" />
<text  x="848.16" y="527.5" ></text>
</g>
<g >
<title>__GI___libc_free (8 samples, 0.01%)</title><rect x="356.8" y="581" width="0.1" height="15.0" fill="rgb(230,51,44)" rx="2" ry="2" />
<text  x="359.82" y="591.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (18 samples, 0.02%)</title><rect x="41.1" y="453" width="0.3" height="15.0" fill="rgb(212,188,25)" rx="2" ry="2" />
<text  x="44.12" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::begin (80 samples, 0.09%)</title><rect x="300.6" y="645" width="1.0" height="15.0" fill="rgb(222,25,51)" rx="2" ry="2" />
<text  x="303.59" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;CTxOut const*, std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; &gt;::operator++ (10 samples, 0.01%)</title><rect x="1041.8" y="533" width="0.1" height="15.0" fill="rgb(218,151,15)" rx="2" ry="2" />
<text  x="1044.81" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (20 samples, 0.02%)</title><rect x="808.9" y="325" width="0.2" height="15.0" fill="rgb(232,67,21)" rx="2" ry="2" />
<text  x="811.88" y="335.5" ></text>
</g>
<g >
<title>_mm_set_epi64x (22 samples, 0.02%)</title><rect x="1116.6" y="229" width="0.3" height="15.0" fill="rgb(251,141,28)" rx="2" ry="2" />
<text  x="1119.64" y="239.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (11 samples, 0.01%)</title><rect x="536.7" y="565" width="0.2" height="15.0" fill="rgb(241,5,44)" rx="2" ry="2" />
<text  x="539.71" y="575.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned (16 samples, 0.02%)</title><rect x="357.6" y="581" width="0.3" height="15.0" fill="rgb(241,163,16)" rx="2" ry="2" />
<text  x="360.65" y="591.5" ></text>
</g>
<g >
<title>ser_readdata32&lt;CDataStream&gt; (21 samples, 0.02%)</title><rect x="531.5" y="597" width="0.3" height="15.0" fill="rgb(233,167,22)" rx="2" ry="2" />
<text  x="534.54" y="607.5" ></text>
</g>
<g >
<title>__db_get (662 samples, 0.72%)</title><rect x="124.4" y="549" width="8.5" height="15.0" fill="rgb(219,205,30)" rx="2" ry="2" />
<text  x="127.43" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (15 samples, 0.02%)</title><rect x="541.8" y="629" width="0.2" height="15.0" fill="rgb(251,26,29)" rx="2" ry="2" />
<text  x="544.85" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, char*&gt; &gt;::_M_valptr (15 samples, 0.02%)</title><rect x="610.1" y="533" width="0.2" height="15.0" fill="rgb(254,166,21)" rx="2" ry="2" />
<text  x="613.09" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::select_on_container_copy_construction (19 samples, 0.02%)</title><rect x="973.0" y="501" width="0.2" height="15.0" fill="rgb(237,58,11)" rx="2" ry="2" />
<text  x="975.99" y="511.5" ></text>
</g>
<g >
<title>interfaces::(anonymous namespace)::LockImpl::getBlockDepth (215 samples, 0.23%)</title><rect x="51.0" y="645" width="2.8" height="15.0" fill="rgb(250,221,41)" rx="2" ry="2" />
<text  x="54.05" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_Vector_impl::_Vector_impl (31 samples, 0.03%)</title><rect x="624.3" y="629" width="0.4" height="15.0" fill="rgb(229,125,10)" rx="2" ry="2" />
<text  x="627.26" y="639.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;CTransaction&gt; (1,525 samples, 1.66%)</title><rect x="502.2" y="405" width="19.5" height="15.0" fill="rgb(228,166,35)" rx="2" ry="2" />
<text  x="505.16" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt;::_M_valptr (19 samples, 0.02%)</title><rect x="984.6" y="597" width="0.2" height="15.0" fill="rgb(252,59,1)" rx="2" ry="2" />
<text  x="987.57" y="607.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::empty (9 samples, 0.01%)</title><rect x="511.5" y="101" width="0.1" height="15.0" fill="rgb(215,100,54)" rx="2" ry="2" />
<text  x="514.49" y="111.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (352 samples, 0.38%)</title><rect x="162.5" y="629" width="4.5" height="15.0" fill="rgb(211,134,25)" rx="2" ry="2" />
<text  x="165.53" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Node_const_iterator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt;, false, true&gt;::operator (8 samples, 0.01%)</title><rect x="961.4" y="629" width="0.1" height="15.0" fill="rgb(209,65,1)" rx="2" ry="2" />
<text  x="964.40" y="639.5" ></text>
</g>
<g >
<title>__db_lget (8 samples, 0.01%)</title><rect x="62.1" y="453" width="0.2" height="15.0" fill="rgb(253,64,17)" rx="2" ry="2" />
<text  x="65.15" y="463.5" ></text>
</g>
<g >
<title>ser_writedata32&lt;CHashWriter&gt; (21 samples, 0.02%)</title><rect x="489.1" y="117" width="0.2" height="15.0" fill="rgb(233,148,49)" rx="2" ry="2" />
<text  x="492.07" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;CTxIn const*, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt;::__normal_iterator (18 samples, 0.02%)</title><rect x="509.1" y="277" width="0.2" height="15.0" fill="rgb(245,175,48)" rx="2" ry="2" />
<text  x="512.09" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CBlockIndex*, std::pair&lt;CBlockIndex* const, CBlockIndex*&gt;, std::_Select1st&lt;std::pair&lt;CBlockIndex* const, CBlockIndex*&gt; &gt;, std::less&lt;CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;CBlockIndex* const, CBlockIndex*&gt; &gt; &gt;::_S_key (31 samples, 0.03%)</title><rect x="49.7" y="645" width="0.4" height="15.0" fill="rgb(216,134,42)" rx="2" ry="2" />
<text  x="52.70" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_M_get_Tp_allocator (12 samples, 0.01%)</title><rect x="1180.4" y="741" width="0.2" height="15.0" fill="rgb(247,125,30)" rx="2" ry="2" />
<text  x="1183.42" y="751.5" ></text>
</g>
<g >
<title>__memp_fget (628 samples, 0.68%)</title><rect x="115.8" y="501" width="8.1" height="15.0" fill="rgb(240,215,53)" rx="2" ry="2" />
<text  x="118.81" y="511.5" ></text>
</g>
<g >
<title>AssertLockHeldInternal (17 samples, 0.02%)</title><rect x="51.3" y="597" width="0.2" height="15.0" fill="rgb(208,93,27)" rx="2" ry="2" />
<text  x="54.25" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_Node_allocator (12 samples, 0.01%)</title><rect x="418.9" y="533" width="0.1" height="15.0" fill="rgb(244,206,44)" rx="2" ry="2" />
<text  x="421.85" y="543.5" ></text>
</g>
<g >
<title>ToByteVector&lt;WitnessV0KeyHash&gt; (238 samples, 0.26%)</title><rect x="765.9" y="469" width="3.0" height="15.0" fill="rgb(225,0,26)" rx="2" ry="2" />
<text  x="768.87" y="479.5" ></text>
</g>
<g >
<title>CuckooCache::bit_packed_atomic_flags::bit_packed_atomic_flags (14 samples, 0.02%)</title><rect x="29.7" y="645" width="0.2" height="15.0" fill="rgb(249,94,21)" rx="2" ry="2" />
<text  x="32.68" y="655.5" ></text>
</g>
<g >
<title>CSHA256::Finalize (299 samples, 0.32%)</title><rect x="1128.3" y="693" width="3.8" height="15.0" fill="rgb(233,13,41)" rx="2" ry="2" />
<text  x="1131.29" y="703.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::_Vector_impl::_Vector_impl (19 samples, 0.02%)</title><rect x="1062.3" y="485" width="0.3" height="15.0" fill="rgb(212,201,30)" rx="2" ry="2" />
<text  x="1065.32" y="495.5" ></text>
</g>
<g >
<title>base_blob&lt;160u&gt;::end (8 samples, 0.01%)</title><rect x="766.1" y="453" width="0.1" height="15.0" fill="rgb(206,36,11)" rx="2" ry="2" />
<text  x="769.13" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::destroy&lt;char&gt; (14 samples, 0.02%)</title><rect x="37.1" y="517" width="0.2" height="15.0" fill="rgb(253,172,18)" rx="2" ry="2" />
<text  x="40.15" y="527.5" ></text>
</g>
<g >
<title>[unknown] (28 samples, 0.03%)</title><rect x="132.2" y="341" width="0.4" height="15.0" fill="rgb(222,123,26)" rx="2" ry="2" />
<text  x="135.20" y="351.5" ></text>
</g>
<g >
<title>_mm_sha256rnds2_epu32 (53 samples, 0.06%)</title><rect x="163.7" y="133" width="0.7" height="15.0" fill="rgb(219,27,53)" rx="2" ry="2" />
<text  x="166.74" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;secure_allocator&lt;unsigned char&gt; &gt;::destroy&lt;unsigned char&gt; (440 samples, 0.48%)</title><rect x="1074.4" y="645" width="5.6" height="15.0" fill="rgb(222,178,39)" rx="2" ry="2" />
<text  x="1077.36" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Rb_tree_iterator (28 samples, 0.03%)</title><rect x="550.8" y="565" width="0.3" height="15.0" fill="rgb(237,31,6)" rx="2" ry="2" />
<text  x="553.78" y="575.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;COutPoint&gt; &gt;::allocator (15 samples, 0.02%)</title><rect x="1050.8" y="613" width="0.2" height="15.0" fill="rgb(212,58,37)" rx="2" ry="2" />
<text  x="1053.77" y="623.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (20 samples, 0.02%)</title><rect x="453.2" y="261" width="0.3" height="15.0" fill="rgb(252,187,22)" rx="2" ry="2" />
<text  x="456.25" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::~_Vector_base (895 samples, 0.97%)</title><rect x="628.2" y="645" width="11.4" height="15.0" fill="rgb(252,36,21)" rx="2" ry="2" />
<text  x="631.16" y="655.5" ></text>
</g>
<g >
<title>std::multimap&lt;CBlockIndex*, CBlockIndex*, std::less&lt;CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;CBlockIndex* const, CBlockIndex*&gt; &gt; &gt;::insert&lt;std::pair&lt;CBlockIndex*, CBlockIndex*&gt; &gt; (36 samples, 0.04%)</title><rect x="50.2" y="677" width="0.5" height="15.0" fill="rgb(248,40,28)" rx="2" ry="2" />
<text  x="53.24" y="687.5" ></text>
</g>
<g >
<title>__os_id (13 samples, 0.01%)</title><rect x="322.8" y="565" width="0.1" height="15.0" fill="rgb(237,94,41)" rx="2" ry="2" />
<text  x="325.76" y="575.5" ></text>
</g>
<g >
<title>CHash160::Finalize (1,367 samples, 1.48%)</title><rect x="641.4" y="645" width="17.5" height="15.0" fill="rgb(230,25,46)" rx="2" ry="2" />
<text  x="644.38" y="655.5" ></text>
</g>
<g >
<title>std::multimap&lt;COutPoint, uint256, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::insert&lt;std::pair&lt;COutPoint, uint256&gt; &gt; (2,135 samples, 2.32%)</title><rect x="903.3" y="629" width="27.3" height="15.0" fill="rgb(244,229,4)" rx="2" ry="2" />
<text  x="906.26" y="639.5" >s..</text>
</g>
<g >
<title>__lock_get (27 samples, 0.03%)</title><rect x="70.0" y="453" width="0.4" height="15.0" fill="rgb(245,33,4)" rx="2" ry="2" />
<text  x="73.02" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_S_value (12 samples, 0.01%)</title><rect x="1159.6" y="741" width="0.1" height="15.0" fill="rgb(222,199,13)" rx="2" ry="2" />
<text  x="1162.56" y="751.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (198 samples, 0.21%)</title><rect x="980.9" y="565" width="2.5" height="15.0" fill="rgb(241,97,27)" rx="2" ry="2" />
<text  x="983.88" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (22 samples, 0.02%)</title><rect x="617.8" y="437" width="0.3" height="15.0" fill="rgb(213,187,32)" rx="2" ry="2" />
<text  x="620.84" y="447.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, 28u, unsigned char&gt; (73 samples, 0.08%)</title><rect x="506.6" y="117" width="0.9" height="15.0" fill="rgb(234,76,33)" rx="2" ry="2" />
<text  x="509.55" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;CTxIn const*, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt;::operator++ (10 samples, 0.01%)</title><rect x="1037.9" y="533" width="0.2" height="15.0" fill="rgb(211,138,47)" rx="2" ry="2" />
<text  x="1040.95" y="543.5" ></text>
</g>
<g >
<title>uint256::uint256 (8 samples, 0.01%)</title><rect x="1059.2" y="661" width="0.1" height="15.0" fill="rgb(252,156,37)" rx="2" ry="2" />
<text  x="1062.15" y="671.5" ></text>
</g>
<g >
<title>QuadRound (10 samples, 0.01%)</title><rect x="43.5" y="421" width="0.1" height="15.0" fill="rgb(245,107,39)" rx="2" ry="2" />
<text  x="46.45" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt;::construct&lt;std::pair&lt;void*, CLockLocation&gt;, std::pair&lt;void*, CLockLocation&gt; &gt; (13 samples, 0.01%)</title><rect x="686.3" y="533" width="0.2" height="15.0" fill="rgb(235,7,7)" rx="2" ry="2" />
<text  x="689.30" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::vector (17 samples, 0.02%)</title><rect x="1069.0" y="677" width="0.2" height="15.0" fill="rgb(227,67,13)" rx="2" ry="2" />
<text  x="1072.00" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_erase (104 samples, 0.11%)</title><rect x="1051.2" y="629" width="1.3" height="15.0" fill="rgb(245,133,47)" rx="2" ry="2" />
<text  x="1054.18" y="639.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*, unsigned char&gt; (52 samples, 0.06%)</title><rect x="1096.8" y="629" width="0.6" height="15.0" fill="rgb(228,29,26)" rx="2" ry="2" />
<text  x="1099.77" y="639.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (27 samples, 0.03%)</title><rect x="972.2" y="501" width="0.3" height="15.0" fill="rgb(232,71,18)" rx="2" ry="2" />
<text  x="975.16" y="511.5" ></text>
</g>
<g >
<title>UnserializeTransaction&lt;CDataStream, CMutableTransaction&gt; (3,778 samples, 4.10%)</title><rect x="430.0" y="421" width="48.4" height="15.0" fill="rgb(223,69,3)" rx="2" ry="2" />
<text  x="433.02" y="431.5" >Unse..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (104 samples, 0.11%)</title><rect x="539.7" y="629" width="1.3" height="15.0" fill="rgb(215,77,35)" rx="2" ry="2" />
<text  x="542.67" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (11 samples, 0.01%)</title><rect x="1158.2" y="757" width="0.1" height="15.0" fill="rgb(226,183,39)" rx="2" ry="2" />
<text  x="1161.16" y="767.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (11 samples, 0.01%)</title><rect x="680.2" y="565" width="0.1" height="15.0" fill="rgb(249,46,44)" rx="2" ry="2" />
<text  x="683.21" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (11 samples, 0.01%)</title><rect x="762.9" y="437" width="0.2" height="15.0" fill="rgb(247,223,51)" rx="2" ry="2" />
<text  x="765.91" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::reserve (9 samples, 0.01%)</title><rect x="1183.6" y="757" width="0.1" height="15.0" fill="rgb(234,96,17)" rx="2" ry="2" />
<text  x="1186.56" y="767.5" ></text>
</g>
<g >
<title>CWallet::LockChain (1,089 samples, 1.18%)</title><rect x="941.6" y="661" width="13.9" height="15.0" fill="rgb(230,109,19)" rx="2" ry="2" />
<text  x="944.59" y="671.5" ></text>
</g>
<g >
<title>__db_lget (35 samples, 0.04%)</title><rect x="150.0" y="485" width="0.5" height="15.0" fill="rgb(239,228,19)" rx="2" ry="2" />
<text  x="153.01" y="495.5" ></text>
</g>
<g >
<title>GetSerializeSize&lt;CTransaction&gt; (1,044 samples, 1.13%)</title><rect x="1029.4" y="661" width="13.4" height="15.0" fill="rgb(251,162,52)" rx="2" ry="2" />
<text  x="1032.41" y="671.5" ></text>
</g>
<g >
<title>__db_lput (40 samples, 0.04%)</title><rect x="127.4" y="469" width="0.5" height="15.0" fill="rgb(248,86,13)" rx="2" ry="2" />
<text  x="130.41" y="479.5" ></text>
</g>
<g >
<title>CHash256::Write (12 samples, 0.01%)</title><rect x="512.2" y="165" width="0.2" height="15.0" fill="rgb(210,48,40)" rx="2" ry="2" />
<text  x="515.25" y="175.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (14 samples, 0.02%)</title><rect x="317.3" y="549" width="0.2" height="15.0" fill="rgb(219,191,37)" rx="2" ry="2" />
<text  x="320.35" y="559.5" ></text>
</g>
<g >
<title>CHashWriter::write (18 samples, 0.02%)</title><rect x="498.3" y="181" width="0.2" height="15.0" fill="rgb(247,102,25)" rx="2" ry="2" />
<text  x="501.25" y="191.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, unsigned char*, unsigned char*&gt; (9 samples, 0.01%)</title><rect x="1101.4" y="533" width="0.1" height="15.0" fill="rgb(222,205,11)" rx="2" ry="2" />
<text  x="1104.39" y="543.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (22 samples, 0.02%)</title><rect x="137.9" y="469" width="0.3" height="15.0" fill="rgb(216,207,7)" rx="2" ry="2" />
<text  x="140.90" y="479.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.01%)</title><rect x="1146.3" y="693" width="0.2" height="15.0" fill="rgb(205,119,48)" rx="2" ry="2" />
<text  x="1149.32" y="703.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (12 samples, 0.01%)</title><rect x="296.7" y="597" width="0.1" height="15.0" fill="rgb(223,58,11)" rx="2" ry="2" />
<text  x="299.65" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::resize (1,991 samples, 2.16%)</title><rect x="565.1" y="629" width="25.5" height="15.0" fill="rgb(225,137,10)" rx="2" ry="2" />
<text  x="568.13" y="639.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (32 samples, 0.03%)</title><rect x="523.7" y="501" width="0.4" height="15.0" fill="rgb(254,224,42)" rx="2" ry="2" />
<text  x="526.69" y="511.5" ></text>
</g>
<g >
<title>__db_new (91 samples, 0.10%)</title><rect x="139.8" y="485" width="1.1" height="15.0" fill="rgb(227,28,19)" rx="2" ry="2" />
<text  x="142.77" y="495.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (161 samples, 0.17%)</title><rect x="346.9" y="597" width="2.1" height="15.0" fill="rgb(226,95,45)" rx="2" ry="2" />
<text  x="349.93" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound (53 samples, 0.06%)</title><rect x="555.2" y="597" width="0.7" height="15.0" fill="rgb(207,71,40)" rx="2" ry="2" />
<text  x="558.23" y="607.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (10 samples, 0.01%)</title><rect x="464.7" y="277" width="0.2" height="15.0" fill="rgb(233,74,17)" rx="2" ry="2" />
<text  x="467.75" y="287.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::const_iterator::operator* (21 samples, 0.02%)</title><rect x="662.0" y="581" width="0.3" height="15.0" fill="rgb(213,75,38)" rx="2" ry="2" />
<text  x="665.04" y="591.5" ></text>
</g>
<g >
<title>_mm_sha256rnds2_epu32 (91 samples, 0.10%)</title><rect x="1130.3" y="629" width="1.2" height="15.0" fill="rgb(246,219,7)" rx="2" ry="2" />
<text  x="1133.31" y="639.5" ></text>
</g>
<g >
<title>WriteCompactSize&lt;CHashWriter&gt; (18 samples, 0.02%)</title><rect x="498.7" y="293" width="0.2" height="15.0" fill="rgb(225,190,27)" rx="2" ry="2" />
<text  x="501.69" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;*, unsigned long, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (84 samples, 0.09%)</title><rect x="470.7" y="325" width="1.0" height="15.0" fill="rgb(227,27,1)" rx="2" ry="2" />
<text  x="473.67" y="335.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (10 samples, 0.01%)</title><rect x="639.0" y="533" width="0.2" height="15.0" fill="rgb(238,113,32)" rx="2" ry="2" />
<text  x="642.03" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt; &gt;::allocate (55 samples, 0.06%)</title><rect x="1003.3" y="597" width="0.7" height="15.0" fill="rgb(244,93,38)" rx="2" ry="2" />
<text  x="1006.25" y="607.5" ></text>
</g>
<g >
<title>CScript::SerializationOp&lt;CDataStream, CSerActionUnserialize&gt; (246 samples, 0.27%)</title><rect x="438.5" y="245" width="3.2" height="15.0" fill="rgb(225,111,39)" rx="2" ry="2" />
<text  x="441.52" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKeyMetadata&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt;::_S_left (10 samples, 0.01%)</title><rect x="860.9" y="597" width="0.1" height="15.0" fill="rgb(207,96,20)" rx="2" ry="2" />
<text  x="863.92" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (107 samples, 0.12%)</title><rect x="1092.6" y="549" width="1.4" height="15.0" fill="rgb(208,70,25)" rx="2" ry="2" />
<text  x="1095.61" y="559.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, 28u, unsigned char&gt; (144 samples, 0.16%)</title><rect x="490.9" y="117" width="1.8" height="15.0" fill="rgb(251,106,26)" rx="2" ry="2" />
<text  x="493.89" y="127.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt; &gt;::allocate (42 samples, 0.05%)</title><rect x="617.6" y="485" width="0.5" height="15.0" fill="rgb(213,163,29)" rx="2" ry="2" />
<text  x="620.58" y="495.5" ></text>
</g>
<g >
<title>memory_cleanse (8 samples, 0.01%)</title><rect x="639.5" y="581" width="0.1" height="15.0" fill="rgb(243,31,25)" rx="2" ry="2" />
<text  x="642.46" y="591.5" ></text>
</g>
<g >
<title>CHashWriter::write (72 samples, 0.08%)</title><rect x="514.5" y="261" width="1.0" height="15.0" fill="rgb(216,24,49)" rx="2" ry="2" />
<text  x="517.53" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;CTransaction&gt; &gt;::construct&lt;CTransaction const, deserialize_type const&amp;, CDataStream&amp;&gt; (7,356 samples, 7.98%)</title><rect x="429.2" y="501" width="94.2" height="15.0" fill="rgb(211,114,38)" rx="2" ry="2" />
<text  x="432.24" y="511.5" >std::alloca..</text>
</g>
<g >
<title>secure_allocator&lt;unsigned char&gt;::allocate (555 samples, 0.60%)</title><rect x="565.4" y="565" width="7.2" height="15.0" fill="rgb(226,108,46)" rx="2" ry="2" />
<text  x="568.45" y="575.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (9 samples, 0.01%)</title><rect x="115.6" y="485" width="0.1" height="15.0" fill="rgb(225,167,18)" rx="2" ry="2" />
<text  x="118.59" y="495.5" ></text>
</g>
<g >
<title>__lock_get_internal (38 samples, 0.04%)</title><rect x="135.8" y="437" width="0.5" height="15.0" fill="rgb(213,56,7)" rx="2" ry="2" />
<text  x="138.79" y="447.5" ></text>
</g>
<g >
<title>CTxOut::CTxOut (45 samples, 0.05%)</title><rect x="447.0" y="373" width="0.6" height="15.0" fill="rgb(252,142,22)" rx="2" ry="2" />
<text  x="450.00" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt;::operator-- (32 samples, 0.03%)</title><rect x="857.2" y="613" width="0.4" height="15.0" fill="rgb(237,29,50)" rx="2" ry="2" />
<text  x="860.21" y="623.5" ></text>
</g>
<g >
<title>__db_cursor_int (30 samples, 0.03%)</title><rect x="110.4" y="453" width="0.4" height="15.0" fill="rgb(223,26,49)" rx="2" ry="2" />
<text  x="113.43" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (32 samples, 0.03%)</title><rect x="806.4" y="325" width="0.4" height="15.0" fill="rgb(227,18,32)" rx="2" ry="2" />
<text  x="809.43" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKey&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKey&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKey&gt; &gt; &gt;::_S_key (18 samples, 0.02%)</title><rect x="823.3" y="581" width="0.2" height="15.0" fill="rgb(222,183,30)" rx="2" ry="2" />
<text  x="826.27" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (54 samples, 0.06%)</title><rect x="546.0" y="565" width="0.7" height="15.0" fill="rgb(248,60,30)" rx="2" ry="2" />
<text  x="548.97" y="575.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator (11 samples, 0.01%)</title><rect x="422.0" y="533" width="0.1" height="15.0" fill="rgb(232,89,27)" rx="2" ry="2" />
<text  x="424.96" y="543.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;unsigned char&amp;&gt; (24 samples, 0.03%)</title><rect x="476.3" y="405" width="0.3" height="15.0" fill="rgb(233,134,39)" rx="2" ry="2" />
<text  x="479.26" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (33 samples, 0.04%)</title><rect x="810.7" y="341" width="0.4" height="15.0" fill="rgb(220,75,28)" rx="2" ry="2" />
<text  x="813.71" y="351.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CVarInt&lt; (46 samples, 0.05%)</title><rect x="40.2" y="549" width="0.5" height="15.0" fill="rgb(243,69,40)" rx="2" ry="2" />
<text  x="43.16" y="559.5" ></text>
</g>
<g >
<title>__memp_fget (25 samples, 0.03%)</title><rect x="126.2" y="453" width="0.4" height="15.0" fill="rgb(210,199,35)" rx="2" ry="2" />
<text  x="129.25" y="463.5" ></text>
</g>
<g >
<title>CHash160::Finalize (1,251 samples, 1.36%)</title><rect x="663.1" y="613" width="16.0" height="15.0" fill="rgb(221,77,23)" rx="2" ry="2" />
<text  x="666.06" y="623.5" ></text>
</g>
<g >
<title>std::multimap&lt;long, CWalletTx*, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::insert&lt;std::pair&lt;long, CWalletTx*&gt; &gt; (1,262 samples, 1.37%)</title><rect x="1001.5" y="661" width="16.1" height="15.0" fill="rgb(253,195,23)" rx="2" ry="2" />
<text  x="1004.46" y="671.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (14 samples, 0.02%)</title><rect x="148.3" y="485" width="0.1" height="15.0" fill="rgb(223,120,52)" rx="2" ry="2" />
<text  x="151.26" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::allocate (82 samples, 0.09%)</title><rect x="419.0" y="533" width="1.1" height="15.0" fill="rgb(236,160,42)" rx="2" ry="2" />
<text  x="422.00" y="543.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (10 samples, 0.01%)</title><rect x="101.4" y="357" width="0.1" height="15.0" fill="rgb(216,191,33)" rx="2" ry="2" />
<text  x="104.38" y="367.5" ></text>
</g>
<g >
<title>CDataStream::read (16 samples, 0.02%)</title><rect x="457.5" y="325" width="0.2" height="15.0" fill="rgb(227,66,35)" rx="2" ry="2" />
<text  x="460.46" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (15 samples, 0.02%)</title><rect x="804.1" y="325" width="0.2" height="15.0" fill="rgb(217,12,31)" rx="2" ry="2" />
<text  x="807.09" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;::_M_ptr (30 samples, 0.03%)</title><rect x="1006.0" y="565" width="0.3" height="15.0" fill="rgb(231,119,10)" rx="2" ry="2" />
<text  x="1008.96" y="575.5" ></text>
</g>
<g >
<title>__subvdi3 (15 samples, 0.02%)</title><rect x="625.8" y="645" width="0.2" height="15.0" fill="rgb(235,192,29)" rx="2" ry="2" />
<text  x="628.79" y="655.5" ></text>
</g>
<g >
<title>leveldb::IteratorWrapper::Next (15 samples, 0.02%)</title><rect x="42.2" y="597" width="0.2" height="15.0" fill="rgb(210,38,1)" rx="2" ry="2" />
<text  x="45.21" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt;, std::pair&lt;boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt; const, CAddressBookData&gt;, std::_Select1st&lt;std::pair&lt;boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt; const, CAddressBookData&gt; &gt;, std::less&lt;boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt; &gt;, std::allocator&lt;std::pair&lt;boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt; const, CAddressBookData&gt; &gt; &gt;::_M_lower_bound (9 samples, 0.01%)</title><rect x="1065.6" y="629" width="0.1" height="15.0" fill="rgb(241,39,10)" rx="2" ry="2" />
<text  x="1068.57" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_create_node&lt;unsigned long const&amp;, char*&amp;&gt; (89 samples, 0.10%)</title><rect x="800.6" y="341" width="1.2" height="15.0" fill="rgb(217,199,3)" rx="2" ry="2" />
<text  x="803.63" y="351.5" ></text>
</g>
<g >
<title>std::map&lt;uint256, CWalletTx, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::at (1,675 samples, 1.82%)</title><rect x="869.9" y="613" width="21.4" height="15.0" fill="rgb(254,213,4)" rx="2" ry="2" />
<text  x="872.86" y="623.5" >s..</text>
</g>
<g >
<title>__db_tas_mutex_unlock (26 samples, 0.03%)</title><rect x="156.3" y="565" width="0.3" height="15.0" fill="rgb(242,228,47)" rx="2" ry="2" />
<text  x="159.30" y="575.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Compare (19 samples, 0.02%)</title><rect x="870.9" y="565" width="0.3" height="15.0" fill="rgb(247,179,21)" rx="2" ry="2" />
<text  x="873.91" y="575.5" ></text>
</g>
<g >
<title>DbEnv::open (17 samples, 0.02%)</title><rect x="1107.4" y="661" width="0.2" height="15.0" fill="rgb(235,105,6)" rx="2" ry="2" />
<text  x="1110.42" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;CTxOut&gt; &gt;::allocate (33 samples, 0.04%)</title><rect x="453.1" y="309" width="0.4" height="15.0" fill="rgb(228,167,53)" rx="2" ry="2" />
<text  x="456.08" y="319.5" ></text>
</g>
<g >
<title>__env_alloc (12 samples, 0.01%)</title><rect x="78.7" y="389" width="0.1" height="15.0" fill="rgb(205,24,23)" rx="2" ry="2" />
<text  x="81.66" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned char&gt;::allocate (18 samples, 0.02%)</title><rect x="767.4" y="389" width="0.3" height="15.0" fill="rgb(238,5,41)" rx="2" ry="2" />
<text  x="770.43" y="399.5" ></text>
</g>
<g >
<title>__memp_pgread (39 samples, 0.04%)</title><rect x="161.4" y="565" width="0.5" height="15.0" fill="rgb(214,71,10)" rx="2" ry="2" />
<text  x="164.44" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::clear (11 samples, 0.01%)</title><rect x="442.2" y="357" width="0.2" height="15.0" fill="rgb(205,9,50)" rx="2" ry="2" />
<text  x="445.24" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::clear (15 samples, 0.02%)</title><rect x="931.6" y="581" width="0.2" height="15.0" fill="rgb(249,168,18)" rx="2" ry="2" />
<text  x="934.61" y="591.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.01%)</title><rect x="146.0" y="389" width="0.1" height="15.0" fill="rgb(223,126,0)" rx="2" ry="2" />
<text  x="148.99" y="399.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::assign&lt;prevector&lt;28u, unsigned char, unsigned int, int&gt;::const_iterator&gt; (167 samples, 0.18%)</title><rect x="660.4" y="613" width="2.1" height="15.0" fill="rgb(249,132,20)" rx="2" ry="2" />
<text  x="663.36" y="623.5" ></text>
</g>
<g >
<title>__tls_init (13 samples, 0.01%)</title><rect x="950.8" y="517" width="0.1" height="15.0" fill="rgb(240,99,38)" rx="2" ry="2" />
<text  x="953.77" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (8 samples, 0.01%)</title><rect x="298.7" y="533" width="0.1" height="15.0" fill="rgb(248,37,4)" rx="2" ry="2" />
<text  x="301.69" y="543.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, unsigned int&amp;&gt; (39 samples, 0.04%)</title><rect x="441.7" y="309" width="0.5" height="15.0" fill="rgb(223,137,53)" rx="2" ry="2" />
<text  x="444.74" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::erase (157 samples, 0.17%)</title><rect x="931.1" y="613" width="2.0" height="15.0" fill="rgb(218,13,30)" rx="2" ry="2" />
<text  x="934.13" y="623.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Compare (15 samples, 0.02%)</title><rect x="1065.1" y="661" width="0.2" height="15.0" fill="rgb(225,34,49)" rx="2" ry="2" />
<text  x="1068.14" y="671.5" ></text>
</g>
<g >
<title>[unknown] (87,211 samples, 94.65%)</title><rect x="28.0" y="757" width="1116.8" height="15.0" fill="rgb(251,211,54)" rx="2" ry="2" />
<text  x="30.95" y="767.5" >[unknown]</text>
</g>
<g >
<title>CSHA256::Write (8 samples, 0.01%)</title><rect x="489.2" y="69" width="0.1" height="15.0" fill="rgb(252,54,11)" rx="2" ry="2" />
<text  x="492.20" y="79.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;std::shared_ptr&lt;CTransaction const&gt;&amp;&gt; (352 samples, 0.38%)</title><rect x="162.5" y="741" width="4.5" height="15.0" fill="rgb(239,62,53)" rx="2" ry="2" />
<text  x="165.53" y="751.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::key_comp (13 samples, 0.01%)</title><rect x="538.0" y="597" width="0.2" height="15.0" fill="rgb(216,116,40)" rx="2" ry="2" />
<text  x="541.00" y="607.5" ></text>
</g>
<g >
<title>__libc_pwrite64 (18 samples, 0.02%)</title><rect x="131.5" y="389" width="0.3" height="15.0" fill="rgb(245,90,42)" rx="2" ry="2" />
<text  x="134.52" y="399.5" ></text>
</g>
<g >
<title>interfaces::(anonymous namespace)::WalletClientImpl::verify (8,490 samples, 9.21%)</title><rect x="53.8" y="725" width="108.7" height="15.0" fill="rgb(238,45,6)" rx="2" ry="2" />
<text  x="56.80" y="735.5" >interfaces::(..</text>
</g>
<g >
<title>SerReadWriteMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt; &gt; (84 samples, 0.09%)</title><rect x="506.4" y="165" width="1.1" height="15.0" fill="rgb(242,45,3)" rx="2" ry="2" />
<text  x="509.45" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt;::deallocate (17 samples, 0.02%)</title><rect x="614.4" y="437" width="0.2" height="15.0" fill="rgb(217,229,0)" rx="2" ry="2" />
<text  x="617.38" y="447.5" ></text>
</g>
<g >
<title>[libboost_thread.so.1.69.0] (50 samples, 0.05%)</title><rect x="1145.6" y="725" width="0.6" height="15.0" fill="rgb(236,23,22)" rx="2" ry="2" />
<text  x="1148.59" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::max_size (11 samples, 0.01%)</title><rect x="589.8" y="581" width="0.1" height="15.0" fill="rgb(213,7,44)" rx="2" ry="2" />
<text  x="592.79" y="591.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;*&amp;, std::_Rb_tree_node_base*&amp;, true&gt; (14 samples, 0.02%)</title><rect x="421.3" y="533" width="0.2" height="15.0" fill="rgb(236,4,52)" rx="2" ry="2" />
<text  x="424.31" y="543.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CHashWriter, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (361 samples, 0.39%)</title><rect x="1114.6" y="357" width="4.6" height="15.0" fill="rgb(250,135,2)" rx="2" ry="2" />
<text  x="1117.57" y="367.5" ></text>
</g>
<g >
<title>CSHA256::Write (15 samples, 0.02%)</title><rect x="756.3" y="549" width="0.2" height="15.0" fill="rgb(235,42,15)" rx="2" ry="2" />
<text  x="759.34" y="559.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (14 samples, 0.02%)</title><rect x="82.2" y="453" width="0.1" height="15.0" fill="rgb(246,159,47)" rx="2" ry="2" />
<text  x="85.15" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (15 samples, 0.02%)</title><rect x="412.7" y="565" width="0.2" height="15.0" fill="rgb(231,125,42)" rx="2" ry="2" />
<text  x="415.72" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;void*, CLockLocation&gt;*, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; (8 samples, 0.01%)</title><rect x="840.7" y="581" width="0.1" height="15.0" fill="rgb(205,137,14)" rx="2" ry="2" />
<text  x="843.73" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::rend (34 samples, 0.04%)</title><rect x="1055.8" y="613" width="0.5" height="15.0" fill="rgb(221,52,13)" rx="2" ry="2" />
<text  x="1058.84" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;1, BlockHasher, true&gt;::_S_cget (8 samples, 0.01%)</title><rect x="967.1" y="565" width="0.1" height="15.0" fill="rgb(243,84,4)" rx="2" ry="2" />
<text  x="970.09" y="575.5" ></text>
</g>
<g >
<title>std::make_move_iterator&lt;unsigned char*&gt; (11 samples, 0.01%)</title><rect x="1097.7" y="613" width="0.1" height="15.0" fill="rgb(208,7,32)" rx="2" ry="2" />
<text  x="1100.69" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::begin (11 samples, 0.01%)</title><rect x="851.7" y="645" width="0.2" height="15.0" fill="rgb(227,94,34)" rx="2" ry="2" />
<text  x="854.73" y="655.5" ></text>
</g>
<g >
<title>Unserialize_impl&lt;CDataStream, 28u, unsigned char&gt; (161 samples, 0.17%)</title><rect x="376.9" y="565" width="2.0" height="15.0" fill="rgb(228,4,28)" rx="2" ry="2" />
<text  x="379.86" y="575.5" ></text>
</g>
<g >
<title>CTxOut::Serialize&lt;CSizeComputer&gt; (161 samples, 0.17%)</title><rect x="1039.6" y="517" width="2.1" height="15.0" fill="rgb(208,174,12)" rx="2" ry="2" />
<text  x="1042.64" y="527.5" ></text>
</g>
<g >
<title>__db_pitem_nolog (11 samples, 0.01%)</title><rect x="109.3" y="421" width="0.2" height="15.0" fill="rgb(213,81,35)" rx="2" ry="2" />
<text  x="112.34" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;interfaces::Chain::Lock, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt;::~unique_ptr (259 samples, 0.28%)</title><rect x="1018.8" y="661" width="3.3" height="15.0" fill="rgb(248,218,51)" rx="2" ry="2" />
<text  x="1021.83" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_S_key (87 samples, 0.09%)</title><rect x="791.0" y="517" width="1.1" height="15.0" fill="rgb(236,111,13)" rx="2" ry="2" />
<text  x="794.01" y="527.5" ></text>
</g>
<g >
<title>CHashWriter::operator&lt;&lt; &lt;std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; &gt; (183 samples, 0.20%)</title><rect x="164.7" y="453" width="2.3" height="15.0" fill="rgb(249,82,46)" rx="2" ry="2" />
<text  x="167.69" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;uint256, CWalletTx, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::end (13 samples, 0.01%)</title><rect x="934.5" y="645" width="0.1" height="15.0" fill="rgb(252,221,38)" rx="2" ry="2" />
<text  x="937.46" y="655.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;char*, unsigned long, std::hash&lt;char*&gt;, std::equal_to&lt;char*&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt; &gt;::erase (113 samples, 0.12%)</title><rect x="636.4" y="549" width="1.5" height="15.0" fill="rgb(247,73,17)" rx="2" ry="2" />
<text  x="639.41" y="559.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, CKeyID const&amp;&gt; (8 samples, 0.01%)</title><rect x="855.8" y="517" width="0.1" height="15.0" fill="rgb(222,228,10)" rx="2" ry="2" />
<text  x="858.81" y="527.5" ></text>
</g>
<g >
<title>AppInitMain (9,878 samples, 10.72%)</title><rect x="36.0" y="741" width="126.5" height="15.0" fill="rgb(229,56,31)" rx="2" ry="2" />
<text  x="39.02" y="751.5" >AppInitMain</text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, int&amp;&gt; (27 samples, 0.03%)</title><rect x="369.7" y="597" width="0.3" height="15.0" fill="rgb(247,71,35)" rx="2" ry="2" />
<text  x="372.66" y="607.5" ></text>
</g>
<g >
<title>std::make_pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;char* const, unsigned long&gt;, false, false&gt;, bool&gt; (10 samples, 0.01%)</title><rect x="814.5" y="325" width="0.1" height="15.0" fill="rgb(225,189,20)" rx="2" ry="2" />
<text  x="817.47" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (10 samples, 0.01%)</title><rect x="536.9" y="581" width="0.1" height="15.0" fill="rgb(228,228,22)" rx="2" ry="2" />
<text  x="539.85" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;CChainState, std::default_delete&lt;CChainState&gt; &gt;::operator bool (73 samples, 0.08%)</title><rect x="959.0" y="629" width="0.9" height="15.0" fill="rgb(234,219,10)" rx="2" ry="2" />
<text  x="961.97" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (9 samples, 0.01%)</title><rect x="1093.5" y="469" width="0.1" height="15.0" fill="rgb(220,127,7)" rx="2" ry="2" />
<text  x="1096.48" y="479.5" ></text>
</g>
<g >
<title>__db_lget (65 samples, 0.07%)</title><rect x="126.6" y="469" width="0.8" height="15.0" fill="rgb(207,88,49)" rx="2" ry="2" />
<text  x="129.58" y="479.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (15 samples, 0.02%)</title><rect x="138.4" y="485" width="0.2" height="15.0" fill="rgb(242,221,14)" rx="2" ry="2" />
<text  x="141.37" y="495.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (317 samples, 0.34%)</title><rect x="1060.0" y="597" width="4.0" height="15.0" fill="rgb(242,4,42)" rx="2" ry="2" />
<text  x="1062.96" y="607.5" ></text>
</g>
<g >
<title>CDataStream::CDataStream (105 samples, 0.11%)</title><rect x="37.5" y="645" width="1.4" height="15.0" fill="rgb(223,187,40)" rx="2" ry="2" />
<text  x="40.53" y="655.5" ></text>
</g>
<g >
<title>CTxOut::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (172 samples, 0.19%)</title><rect x="510.3" y="261" width="2.2" height="15.0" fill="rgb(208,32,54)" rx="2" ry="2" />
<text  x="513.29" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, interfaces::(anonymous namespace)::LockImpl*, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt; (8 samples, 0.01%)</title><rect x="1169.2" y="741" width="0.1" height="15.0" fill="rgb(210,222,38)" rx="2" ry="2" />
<text  x="1172.19" y="751.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned (10 samples, 0.01%)</title><rect x="412.3" y="517" width="0.1" height="15.0" fill="rgb(241,104,44)" rx="2" ry="2" />
<text  x="415.32" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_S_max_size (8 samples, 0.01%)</title><rect x="1180.2" y="741" width="0.1" height="15.0" fill="rgb(223,193,36)" rx="2" ry="2" />
<text  x="1183.22" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt;::allocate (8 samples, 0.01%)</title><rect x="1088.7" y="501" width="0.1" height="15.0" fill="rgb(243,97,28)" rx="2" ry="2" />
<text  x="1091.73" y="511.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream&gt; (26 samples, 0.03%)</title><rect x="531.5" y="613" width="0.3" height="15.0" fill="rgb(209,16,39)" rx="2" ry="2" />
<text  x="534.47" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (86 samples, 0.09%)</title><rect x="633.1" y="517" width="1.1" height="15.0" fill="rgb(225,216,32)" rx="2" ry="2" />
<text  x="636.13" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_drop_node (32 samples, 0.03%)</title><rect x="803.7" y="325" width="0.4" height="15.0" fill="rgb(241,63,22)" rx="2" ry="2" />
<text  x="806.68" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (33 samples, 0.04%)</title><rect x="616.3" y="469" width="0.5" height="15.0" fill="rgb(246,119,53)" rx="2" ry="2" />
<text  x="619.33" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;interfaces::(anonymous namespace)::LockImpl, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt;::_M_ptr (18 samples, 0.02%)</title><rect x="955.3" y="581" width="0.2" height="15.0" fill="rgb(250,158,29)" rx="2" ry="2" />
<text  x="958.31" y="591.5" ></text>
</g>
<g >
<title>CDataStream::read (12 samples, 0.01%)</title><rect x="370.2" y="549" width="0.2" height="15.0" fill="rgb(252,122,33)" rx="2" ry="2" />
<text  x="373.25" y="559.5" ></text>
</g>
<g >
<title>[unknown] (23 samples, 0.02%)</title><rect x="101.8" y="309" width="0.3" height="15.0" fill="rgb(224,124,30)" rx="2" ry="2" />
<text  x="104.82" y="319.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, CBlockIndex*&gt;*, std::vector&lt;std::pair&lt;int, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;int, CBlockIndex*&gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (15 samples, 0.02%)</title><rect x="48.9" y="613" width="0.2" height="15.0" fill="rgb(250,18,33)" rx="2" ry="2" />
<text  x="51.91" y="623.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, 28u, unsigned char&gt; (75 samples, 0.08%)</title><rect x="506.5" y="133" width="1.0" height="15.0" fill="rgb(230,20,1)" rx="2" ry="2" />
<text  x="509.52" y="143.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;CTransaction const,  (229 samples, 0.25%)</title><rect x="525.3" y="565" width="2.9" height="15.0" fill="rgb(246,196,15)" rx="2" ry="2" />
<text  x="528.26" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Rb_tree_iterator (22 samples, 0.02%)</title><rect x="424.9" y="549" width="0.2" height="15.0" fill="rgb(230,228,13)" rx="2" ry="2" />
<text  x="427.86" y="559.5" ></text>
</g>
<g >
<title>MakeTransactionRef (410 samples, 0.44%)</title><rect x="1059.3" y="677" width="5.2" height="15.0" fill="rgb(214,23,21)" rx="2" ry="2" />
<text  x="1062.26" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::erase (856 samples, 0.93%)</title><rect x="543.9" y="613" width="10.9" height="15.0" fill="rgb(227,146,7)" rx="2" ry="2" />
<text  x="546.87" y="623.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.02%)</title><rect x="767.5" y="373" width="0.2" height="15.0" fill="rgb(247,226,34)" rx="2" ry="2" />
<text  x="770.46" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_lower_bound (38 samples, 0.04%)</title><rect x="611.8" y="517" width="0.5" height="15.0" fill="rgb(227,32,29)" rx="2" ry="2" />
<text  x="614.83" y="527.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CScript&gt; (123 samples, 0.13%)</title><rect x="496.0" y="213" width="1.6" height="15.0" fill="rgb(244,16,48)" rx="2" ry="2" />
<text  x="499.02" y="223.5" ></text>
</g>
<g >
<title>operator new (35 samples, 0.04%)</title><rect x="1048.5" y="533" width="0.5" height="15.0" fill="rgb(253,163,26)" rx="2" ry="2" />
<text  x="1051.54" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_S_relocate (52 samples, 0.06%)</title><rect x="472.9" y="325" width="0.6" height="15.0" fill="rgb(218,37,36)" rx="2" ry="2" />
<text  x="475.87" y="335.5" ></text>
</g>
<g >
<title>WriteLE32 (17 samples, 0.02%)</title><rect x="714.7" y="565" width="0.2" height="15.0" fill="rgb(229,45,42)" rx="2" ry="2" />
<text  x="717.67" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::find (253 samples, 0.27%)</title><rect x="790.5" y="549" width="3.2" height="15.0" fill="rgb(254,206,20)" rx="2" ry="2" />
<text  x="793.46" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;interfaces::Chain::Lock, std::default_delete&lt;interfaces::Chain::Lock&gt; &gt;::_M_ptr (47 samples, 0.05%)</title><rect x="1019.0" y="645" width="0.6" height="15.0" fill="rgb(222,105,12)" rx="2" ry="2" />
<text  x="1022.02" y="655.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (11 samples, 0.01%)</title><rect x="106.5" y="453" width="0.1" height="15.0" fill="rgb(207,37,10)" rx="2" ry="2" />
<text  x="109.47" y="463.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (51 samples, 0.06%)</title><rect x="370.5" y="613" width="0.6" height="15.0" fill="rgb(209,127,41)" rx="2" ry="2" />
<text  x="373.48" y="623.5" ></text>
</g>
<g >
<title>CTransaction::IsCoinBase (29 samples, 0.03%)</title><rect x="933.2" y="629" width="0.4" height="15.0" fill="rgb(224,128,19)" rx="2" ry="2" />
<text  x="936.21" y="639.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CDataStream, unsigned int&amp;&gt; (73 samples, 0.08%)</title><rect x="437.0" y="229" width="0.9" height="15.0" fill="rgb(251,43,42)" rx="2" ry="2" />
<text  x="440.00" y="239.5" ></text>
</g>
<g >
<title>CSHA512::Write (387 samples, 0.42%)</title><rect x="1184.5" y="581" width="5.0" height="15.0" fill="rgb(229,40,51)" rx="2" ry="2" />
<text  x="1187.51" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (30 samples, 0.03%)</title><rect x="523.7" y="485" width="0.4" height="15.0" fill="rgb(220,170,50)" rx="2" ry="2" />
<text  x="526.71" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (9 samples, 0.01%)</title><rect x="613.0" y="469" width="0.1" height="15.0" fill="rgb(243,48,7)" rx="2" ry="2" />
<text  x="616.00" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::__normal_iterator (10 samples, 0.01%)</title><rect x="516.7" y="229" width="0.1" height="15.0" fill="rgb(237,71,45)" rx="2" ry="2" />
<text  x="519.72" y="239.5" ></text>
</g>
<g >
<title>CHashWriter::write (9 samples, 0.01%)</title><rect x="508.3" y="261" width="0.1" height="15.0" fill="rgb(254,132,27)" rx="2" ry="2" />
<text  x="511.33" y="271.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, CKeyID&amp;&amp;, false&gt;::_Head_base&lt;CKeyID&gt; (8 samples, 0.01%)</title><rect x="821.4" y="501" width="0.1" height="15.0" fill="rgb(251,24,29)" rx="2" ry="2" />
<text  x="824.36" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;::_M_v (13 samples, 0.01%)</title><rect x="810.2" y="277" width="0.1" height="15.0" fill="rgb(244,127,37)" rx="2" ry="2" />
<text  x="813.16" y="287.5" ></text>
</g>
<g >
<title>__os_calloc (40 samples, 0.04%)</title><rect x="73.0" y="469" width="0.5" height="15.0" fill="rgb(251,30,51)" rx="2" ry="2" />
<text  x="75.98" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (22 samples, 0.02%)</title><rect x="810.8" y="309" width="0.3" height="15.0" fill="rgb(237,154,47)" rx="2" ry="2" />
<text  x="813.85" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::emplace&lt;char*, unsigned long&amp;&gt; (157 samples, 0.17%)</title><rect x="569.7" y="501" width="2.0" height="15.0" fill="rgb(207,47,1)" rx="2" ry="2" />
<text  x="572.73" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (12 samples, 0.01%)</title><rect x="637.9" y="501" width="0.2" height="15.0" fill="rgb(247,207,3)" rx="2" ry="2" />
<text  x="640.93" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_allocate (88 samples, 0.10%)</title><rect x="461.4" y="293" width="1.1" height="15.0" fill="rgb(223,226,46)" rx="2" ry="2" />
<text  x="464.42" y="303.5" ></text>
</g>
<g >
<title>std::map&lt;std::pair&lt;void*, void*&gt;, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::count (393 samples, 0.43%)</title><rect x="843.5" y="581" width="5.1" height="15.0" fill="rgb(244,123,31)" rx="2" ry="2" />
<text  x="846.54" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::resize (1,234 samples, 1.34%)</title><rect x="608.3" y="661" width="15.8" height="15.0" fill="rgb(221,64,9)" rx="2" ry="2" />
<text  x="611.32" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKeyMetadata&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt;::_S_key (87 samples, 0.09%)</title><rect x="859.8" y="597" width="1.1" height="15.0" fill="rgb(246,212,26)" rx="2" ry="2" />
<text  x="862.81" y="607.5" ></text>
</g>
<g >
<title>TLS wrapper function for g_lockstack (16 samples, 0.02%)</title><rect x="840.3" y="581" width="0.2" height="15.0" fill="rgb(240,64,25)" rx="2" ry="2" />
<text  x="843.33" y="591.5" ></text>
</g>
<g >
<title>std::forward&lt;COutPoint const&amp;&gt; (15 samples, 0.02%)</title><rect x="1049.6" y="629" width="0.2" height="15.0" fill="rgb(233,227,22)" rx="2" ry="2" />
<text  x="1052.56" y="639.5" ></text>
</g>
<g >
<title>CSHA256::Write (31 samples, 0.03%)</title><rect x="481.3" y="357" width="0.4" height="15.0" fill="rgb(207,88,19)" rx="2" ry="2" />
<text  x="484.31" y="367.5" ></text>
</g>
<g >
<title>CScript::Serialize&lt;CSizeComputer&gt; (110 samples, 0.12%)</title><rect x="1035.9" y="437" width="1.4" height="15.0" fill="rgb(228,104,14)" rx="2" ry="2" />
<text  x="1038.86" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;char* const&amp;&gt;, std::tuple&lt;&gt; &gt; (27 samples, 0.03%)</title><rect x="634.7" y="501" width="0.3" height="15.0" fill="rgb(212,191,39)" rx="2" ry="2" />
<text  x="637.69" y="511.5" ></text>
</g>
<g >
<title>CSHA256::Write (34 samples, 0.04%)</title><rect x="1057.3" y="629" width="0.4" height="15.0" fill="rgb(206,87,47)" rx="2" ry="2" />
<text  x="1060.31" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (37 samples, 0.04%)</title><rect x="824.6" y="581" width="0.5" height="15.0" fill="rgb(227,164,38)" rx="2" ry="2" />
<text  x="827.64" y="591.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (645 samples, 0.70%)</title><rect x="82.5" y="437" width="8.2" height="15.0" fill="rgb(245,129,28)" rx="2" ry="2" />
<text  x="85.46" y="447.5" ></text>
</g>
<g >
<title>__bam_defcmp (8 samples, 0.01%)</title><rect x="75.3" y="405" width="0.1" height="15.0" fill="rgb(205,21,41)" rx="2" ry="2" />
<text  x="78.28" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~allocator (21 samples, 0.02%)</title><rect x="974.1" y="517" width="0.3" height="15.0" fill="rgb(208,193,8)" rx="2" ry="2" />
<text  x="977.13" y="527.5" ></text>
</g>
<g >
<title>CScript::Serialize&lt;CHashWriter&gt; (218 samples, 0.24%)</title><rect x="490.1" y="197" width="2.7" height="15.0" fill="rgb(243,61,50)" rx="2" ry="2" />
<text  x="493.06" y="207.5" ></text>
</g>
<g >
<title>CHash160::Finalize (153 samples, 0.17%)</title><rect x="1126.2" y="629" width="1.9" height="15.0" fill="rgb(206,201,39)" rx="2" ry="2" />
<text  x="1129.18" y="639.5" ></text>
</g>
<g >
<title>Serialize&lt;CSizeComputer, CTxOut&gt; (169 samples, 0.18%)</title><rect x="1039.5" y="533" width="2.2" height="15.0" fill="rgb(241,12,44)" rx="2" ry="2" />
<text  x="1042.54" y="543.5" ></text>
</g>
<g >
<title>WriteCompactSize&lt;CHashWriter&gt; (24 samples, 0.03%)</title><rect x="496.9" y="101" width="0.3" height="15.0" fill="rgb(223,190,53)" rx="2" ry="2" />
<text  x="499.89" y="111.5" ></text>
</g>
<g >
<title>__bam_cmp (34 samples, 0.04%)</title><rect x="74.9" y="421" width="0.5" height="15.0" fill="rgb(213,151,54)" rx="2" ry="2" />
<text  x="77.94" y="431.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (30 samples, 0.03%)</title><rect x="951.5" y="517" width="0.3" height="15.0" fill="rgb(213,200,23)" rx="2" ry="2" />
<text  x="954.45" y="527.5" ></text>
</g>
<g >
<title>__gthread_once (12 samples, 0.01%)</title><rect x="1095.0" y="565" width="0.1" height="15.0" fill="rgb(242,171,15)" rx="2" ry="2" />
<text  x="1097.96" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt;::_Rb_tree_const_iterator (9 samples, 0.01%)</title><rect x="611.5" y="517" width="0.1" height="15.0" fill="rgb(231,56,36)" rx="2" ry="2" />
<text  x="614.50" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::begin (18 samples, 0.02%)</title><rect x="546.7" y="581" width="0.2" height="15.0" fill="rgb(225,81,17)" rx="2" ry="2" />
<text  x="549.66" y="591.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (10 samples, 0.01%)</title><rect x="767.5" y="357" width="0.2" height="15.0" fill="rgb(228,172,21)" rx="2" ry="2" />
<text  x="770.54" y="367.5" ></text>
</g>
<g >
<title>CachableAmount::CachableAmount (32 samples, 0.03%)</title><rect x="1023.3" y="661" width="0.4" height="15.0" fill="rgb(237,49,52)" rx="2" ry="2" />
<text  x="1026.33" y="671.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (43 samples, 0.05%)</title><rect x="541.3" y="613" width="0.5" height="15.0" fill="rgb(212,29,32)" rx="2" ry="2" />
<text  x="544.28" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, std::pair&lt;COutPoint const, uint256&gt;, std::_Select1st&lt;std::pair&lt;COutPoint const, uint256&gt; &gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;std::pair&lt;COutPoint const, uint256&gt; &gt; &gt;::equal_range (842 samples, 0.91%)</title><rect x="892.5" y="613" width="10.8" height="15.0" fill="rgb(249,139,26)" rx="2" ry="2" />
<text  x="895.48" y="623.5" ></text>
</g>
<g >
<title>DecodeBase58Check (175 samples, 0.19%)</title><rect x="1054.1" y="645" width="2.2" height="15.0" fill="rgb(231,128,20)" rx="2" ry="2" />
<text  x="1057.10" y="655.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::IsNull (8 samples, 0.01%)</title><rect x="1029.2" y="629" width="0.1" height="15.0" fill="rgb(250,183,47)" rx="2" ry="2" />
<text  x="1032.23" y="639.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_Vector_base (11 samples, 0.01%)</title><rect x="640.1" y="629" width="0.1" height="15.0" fill="rgb(209,60,20)" rx="2" ry="2" />
<text  x="643.10" y="639.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (14 samples, 0.02%)</title><rect x="471.6" y="277" width="0.1" height="15.0" fill="rgb(245,79,44)" rx="2" ry="2" />
<text  x="474.56" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::end (14 samples, 0.02%)</title><rect x="1084.1" y="549" width="0.2" height="15.0" fill="rgb(220,147,21)" rx="2" ry="2" />
<text  x="1087.14" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, unsigned long&gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;char* const, unsigned long&gt;, char*, unsigned long&amp;&gt; (17 samples, 0.02%)</title><rect x="618.1" y="485" width="0.2" height="15.0" fill="rgb(253,26,25)" rx="2" ry="2" />
<text  x="621.12" y="495.5" ></text>
</g>
<g >
<title>__lock_put (22 samples, 0.02%)</title><rect x="98.8" y="389" width="0.3" height="15.0" fill="rgb(244,224,38)" rx="2" ry="2" />
<text  x="101.83" y="399.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (25 samples, 0.03%)</title><rect x="86.1" y="389" width="0.3" height="15.0" fill="rgb(248,117,49)" rx="2" ry="2" />
<text  x="89.10" y="399.5" ></text>
</g>
<g >
<title>CTxIn::~CTxIn (57 samples, 0.06%)</title><rect x="1031.9" y="549" width="0.7" height="15.0" fill="rgb(220,84,23)" rx="2" ry="2" />
<text  x="1034.92" y="559.5" ></text>
</g>
<g >
<title>operator- (20 samples, 0.02%)</title><rect x="756.9" y="581" width="0.2" height="15.0" fill="rgb(245,59,14)" rx="2" ry="2" />
<text  x="759.89" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;interfaces::(anonymous namespace)::LockImpl, std::default_delete&lt;interfaces::(anonymous namespace)::LockImpl&gt; &gt;::_M_ptr (8 samples, 0.01%)</title><rect x="1169.2" y="757" width="0.1" height="15.0" fill="rgb(218,226,35)" rx="2" ry="2" />
<text  x="1172.19" y="767.5" ></text>
</g>
<g >
<title>__uint64_identity (13 samples, 0.01%)</title><rect x="1041.4" y="421" width="0.2" height="15.0" fill="rgb(218,18,51)" rx="2" ry="2" />
<text  x="1044.42" y="431.5" ></text>
</g>
<g >
<title>__db_tas_mutex_lock (9 samples, 0.01%)</title><rect x="142.5" y="533" width="0.1" height="15.0" fill="rgb(211,73,24)" rx="2" ry="2" />
<text  x="145.52" y="543.5" ></text>
</g>
<g >
<title>CHashWriter::write (36 samples, 0.04%)</title><rect x="496.4" y="101" width="0.5" height="15.0" fill="rgb(232,7,24)" rx="2" ry="2" />
<text  x="499.43" y="111.5" ></text>
</g>
<g >
<title>Hash160&lt;unsigned char const*&gt; (1,399 samples, 1.52%)</title><rect x="641.2" y="661" width="17.9" height="15.0" fill="rgb(224,202,4)" rx="2" ry="2" />
<text  x="644.17" y="671.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;unsigned char*&gt;, unsigned char*&gt; (46 samples, 0.05%)</title><rect x="1101.2" y="565" width="0.6" height="15.0" fill="rgb(231,167,9)" rx="2" ry="2" />
<text  x="1104.21" y="575.5" ></text>
</g>
<g >
<title>interfaces::(anonymous namespace)::LockImpl::~LockImpl (149 samples, 0.16%)</title><rect x="1019.9" y="613" width="1.9" height="15.0" fill="rgb(224,23,20)" rx="2" ry="2" />
<text  x="1022.90" y="623.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::size (8 samples, 0.01%)</title><rect x="450.5" y="149" width="0.1" height="15.0" fill="rgb(212,24,4)" rx="2" ry="2" />
<text  x="453.48" y="159.5" ></text>
</g>
<g >
<title>UnserializeMany&lt;CDataStream, COutPoint&amp;&gt; (205 samples, 0.22%)</title><rect x="435.4" y="293" width="2.6" height="15.0" fill="rgb(221,193,43)" rx="2" ry="2" />
<text  x="438.38" y="303.5" ></text>
</g>
<g >
<title>std::map&lt;boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt;, CAddressBookData, std::less&lt;boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt; &gt;, std::allocator&lt;std::pair&lt;boost::variant&lt;CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown&gt; const, CAddressBookData&gt; &gt; &gt;::lower_bound (9 samples, 0.01%)</title><rect x="1065.6" y="661" width="0.1" height="15.0" fill="rgb(205,29,34)" rx="2" ry="2" />
<text  x="1068.57" y="671.5" ></text>
</g>
<g >
<title>__lock_get_internal (8 samples, 0.01%)</title><rect x="62.1" y="421" width="0.2" height="15.0" fill="rgb(216,26,54)" rx="2" ry="2" />
<text  x="65.15" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (9 samples, 0.01%)</title><rect x="794.3" y="533" width="0.2" height="15.0" fill="rgb(206,101,53)" rx="2" ry="2" />
<text  x="797.34" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::clear (2,170 samples, 2.36%)</title><rect x="380.4" y="565" width="27.8" height="15.0" fill="rgb(245,70,38)" rx="2" ry="2" />
<text  x="383.44" y="575.5" >s..</text>
</g>
<g >
<title>operator new (19 samples, 0.02%)</title><rect x="943.7" y="517" width="0.2" height="15.0" fill="rgb(215,177,40)" rx="2" ry="2" />
<text  x="946.68" y="527.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (307 samples, 0.33%)</title><rect x="365.7" y="565" width="3.9" height="15.0" fill="rgb(252,202,11)" rx="2" ry="2" />
<text  x="368.70" y="575.5" ></text>
</g>
<g >
<title>CTxIn::~CTxIn (29 samples, 0.03%)</title><rect x="485.8" y="309" width="0.4" height="15.0" fill="rgb(244,128,53)" rx="2" ry="2" />
<text  x="488.84" y="319.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (31 samples, 0.03%)</title><rect x="110.8" y="453" width="0.4" height="15.0" fill="rgb(228,118,10)" rx="2" ry="2" />
<text  x="113.83" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (13 samples, 0.01%)</title><rect x="838.4" y="565" width="0.2" height="15.0" fill="rgb(212,77,19)" rx="2" ry="2" />
<text  x="841.42" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::_S_max_size (24 samples, 0.03%)</title><rect x="456.1" y="309" width="0.3" height="15.0" fill="rgb(254,201,50)" rx="2" ry="2" />
<text  x="459.08" y="319.5" ></text>
</g>
<g >
<title>UniqueLock&lt;AnnotatedMixin&lt;std::recursive_mutex&gt;, std::unique_lock&lt;std::recursive_mutex&gt; &gt;::UniqueLock (1,071 samples, 1.16%)</title><rect x="837.0" y="645" width="13.7" height="15.0" fill="rgb(249,178,8)" rx="2" ry="2" />
<text  x="839.97" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (8 samples, 0.01%)</title><rect x="569.6" y="469" width="0.1" height="15.0" fill="rgb(254,19,4)" rx="2" ry="2" />
<text  x="572.58" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_destroy_node (9 samples, 0.01%)</title><rect x="610.9" y="485" width="0.1" height="15.0" fill="rgb(240,199,10)" rx="2" ry="2" />
<text  x="613.87" y="495.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (10 samples, 0.01%)</title><rect x="624.0" y="597" width="0.1" height="15.0" fill="rgb(233,45,28)" rx="2" ry="2" />
<text  x="626.96" y="607.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (97 samples, 0.11%)</title><rect x="339.5" y="597" width="1.2" height="15.0" fill="rgb(230,58,54)" rx="2" ry="2" />
<text  x="342.49" y="607.5" ></text>
</g>
<g >
<title>CWallet::CreateWalletFromFile (73,448 samples, 79.71%)</title><rect x="167.0" y="741" width="940.7" height="15.0" fill="rgb(214,191,30)" rx="2" ry="2" />
<text  x="170.03" y="751.5" >CWallet::CreateWalletFromFile</text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::construct&lt;char, char const&amp;&gt; (31 samples, 0.03%)</title><rect x="36.5" y="581" width="0.4" height="15.0" fill="rgb(234,114,12)" rx="2" ry="2" />
<text  x="39.54" y="591.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.02%)</title><rect x="453.2" y="277" width="0.3" height="15.0" fill="rgb(229,192,21)" rx="2" ry="2" />
<text  x="456.22" y="287.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream, CTxIn, std::allocator&lt;CTxIn&gt; &gt; (1,166 samples, 1.27%)</title><rect x="431.7" y="389" width="15.0" height="15.0" fill="rgb(251,155,2)" rx="2" ry="2" />
<text  x="434.72" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_S_right (14 samples, 0.02%)</title><rect x="792.3" y="517" width="0.1" height="15.0" fill="rgb(252,166,45)" rx="2" ry="2" />
<text  x="795.25" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;CChainState, std::default_delete&lt;CChainState&gt; &gt;::_M_ptr (10 samples, 0.01%)</title><rect x="53.4" y="565" width="0.2" height="15.0" fill="rgb(210,93,51)" rx="2" ry="2" />
<text  x="56.44" y="575.5" ></text>
</g>
<g >
<title>leveldb::(anonymous namespace)::TwoLevelIterator::Next (10 samples, 0.01%)</title><rect x="42.2" y="549" width="0.2" height="15.0" fill="rgb(208,215,42)" rx="2" ry="2" />
<text  x="45.25" y="559.5" ></text>
</g>
<g >
<title>ser_readdata8&lt;CDataStream&gt; (10 samples, 0.01%)</title><rect x="528.8" y="565" width="0.1" height="15.0" fill="rgb(219,128,19)" rx="2" ry="2" />
<text  x="531.76" y="575.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (217 samples, 0.24%)</title><rect x="1065.7" y="677" width="2.8" height="15.0" fill="rgb(248,150,52)" rx="2" ry="2" />
<text  x="1068.70" y="687.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;uint256, std::pair&lt;uint256 const, CBlockIndex*&gt;, std::allocator&lt;std::pair&lt;uint256 const, CBlockIndex*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;uint256&gt;, BlockHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (129 samples, 0.14%)</title><rect x="51.8" y="581" width="1.6" height="15.0" fill="rgb(252,48,52)" rx="2" ry="2" />
<text  x="54.79" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase_aux (149 samples, 0.16%)</title><rect x="544.8" y="581" width="1.9" height="15.0" fill="rgb(249,160,45)" rx="2" ry="2" />
<text  x="547.75" y="591.5" ></text>
</g>
<g >
<title>boost::aligned_storage&lt;48ul, 4ul&gt;::address (12 samples, 0.01%)</title><rect x="758.4" y="549" width="0.2" height="15.0" fill="rgb(251,35,27)" rx="2" ry="2" />
<text  x="761.40" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (30 samples, 0.03%)</title><rect x="811.5" y="325" width="0.4" height="15.0" fill="rgb(234,172,25)" rx="2" ry="2" />
<text  x="814.49" y="335.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (220 samples, 0.24%)</title><rect x="762.7" y="453" width="2.8" height="15.0" fill="rgb(242,96,27)" rx="2" ry="2" />
<text  x="765.70" y="463.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;void*, void*&gt; &gt;::operator (50 samples, 0.05%)</title><rect x="684.8" y="533" width="0.6" height="15.0" fill="rgb(227,7,47)" rx="2" ry="2" />
<text  x="687.77" y="543.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;void*, void*&gt; (46 samples, 0.05%)</title><rect x="792.6" y="501" width="0.6" height="15.0" fill="rgb(206,164,1)" rx="2" ry="2" />
<text  x="795.61" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::clear (16 samples, 0.02%)</title><rect x="413.4" y="581" width="0.2" height="15.0" fill="rgb(241,73,5)" rx="2" ry="2" />
<text  x="416.43" y="591.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (14 samples, 0.02%)</title><rect x="54.2" y="549" width="0.1" height="15.0" fill="rgb(233,41,34)" rx="2" ry="2" />
<text  x="57.16" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (55 samples, 0.06%)</title><rect x="419.4" y="485" width="0.7" height="15.0" fill="rgb(249,30,48)" rx="2" ry="2" />
<text  x="422.35" y="495.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt;&gt; (95 samples, 0.10%)</title><rect x="496.4" y="149" width="1.2" height="15.0" fill="rgb(243,206,40)" rx="2" ry="2" />
<text  x="499.37" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::lower_bound (51 samples, 0.06%)</title><rect x="611.7" y="533" width="0.6" height="15.0" fill="rgb(248,205,8)" rx="2" ry="2" />
<text  x="614.67" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::find (243 samples, 0.26%)</title><rect x="682.8" y="565" width="3.1" height="15.0" fill="rgb(253,150,4)" rx="2" ry="2" />
<text  x="685.81" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::vector (18 samples, 0.02%)</title><rect x="520.9" y="341" width="0.2" height="15.0" fill="rgb(219,215,5)" rx="2" ry="2" />
<text  x="523.87" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (22 samples, 0.02%)</title><rect x="538.6" y="549" width="0.3" height="15.0" fill="rgb(210,74,13)" rx="2" ry="2" />
<text  x="541.64" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (12 samples, 0.01%)</title><rect x="943.8" y="501" width="0.1" height="15.0" fill="rgb(228,50,46)" rx="2" ry="2" />
<text  x="946.77" y="511.5" ></text>
</g>
<g >
<title>std::__fill_n_a&lt;unsigned long, unsigned char&gt; (38 samples, 0.04%)</title><rect x="463.6" y="229" width="0.5" height="15.0" fill="rgb(250,71,1)" rx="2" ry="2" />
<text  x="466.65" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_M_default_append (14 samples, 0.02%)</title><rect x="1178.2" y="757" width="0.1" height="15.0" fill="rgb(207,184,38)" rx="2" ry="2" />
<text  x="1181.17" y="767.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (22 samples, 0.02%)</title><rect x="631.4" y="501" width="0.3" height="15.0" fill="rgb(205,105,14)" rx="2" ry="2" />
<text  x="634.41" y="511.5" ></text>
</g>
<g >
<title>Unserialize&lt;CDataStream&gt; (21 samples, 0.02%)</title><rect x="476.3" y="389" width="0.3" height="15.0" fill="rgb(222,181,13)" rx="2" ry="2" />
<text  x="479.30" y="399.5" ></text>
</g>
<g >
<title>LockedPoolManager::Instance (24 samples, 0.03%)</title><rect x="619.9" y="581" width="0.3" height="15.0" fill="rgb(220,217,38)" rx="2" ry="2" />
<text  x="622.85" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Rb_tree_iterator (12 samples, 0.01%)</title><rect x="547.6" y="565" width="0.2" height="15.0" fill="rgb(241,152,7)" rx="2" ry="2" />
<text  x="550.62" y="575.5" ></text>
</g>
<g >
<title>__memp_pgread (46 samples, 0.05%)</title><rect x="132.0" y="453" width="0.6" height="15.0" fill="rgb(209,184,18)" rx="2" ry="2" />
<text  x="134.97" y="463.5" ></text>
</g>
<g >
<title>operator&lt; (478 samples, 0.52%)</title><rect x="885.1" y="533" width="6.1" height="15.0" fill="rgb(250,27,5)" rx="2" ry="2" />
<text  x="888.09" y="543.5" ></text>
</g>
<g >
<title>__lock_get (39 samples, 0.04%)</title><rect x="135.8" y="453" width="0.5" height="15.0" fill="rgb(217,44,45)" rx="2" ry="2" />
<text  x="138.77" y="463.5" ></text>
</g>
<g >
<title>Serialize&lt;CSizeComputer, uint256&gt; (28 samples, 0.03%)</title><rect x="1034.5" y="373" width="0.4" height="15.0" fill="rgb(219,167,31)" rx="2" ry="2" />
<text  x="1037.50" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (9 samples, 0.01%)</title><rect x="839.3" y="581" width="0.1" height="15.0" fill="rgb(245,107,27)" rx="2" ry="2" />
<text  x="842.29" y="591.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::clear (26 samples, 0.03%)</title><rect x="440.2" y="165" width="0.3" height="15.0" fill="rgb(208,10,49)" rx="2" ry="2" />
<text  x="443.17" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CKeyID, std::pair&lt;CKeyID const, CKeyMetadata&gt;, std::_Select1st&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt;, std::less&lt;CKeyID&gt;, std::allocator&lt;std::pair&lt;CKeyID const, CKeyMetadata&gt; &gt; &gt;::_M_insert_node (56 samples, 0.06%)</title><rect x="857.8" y="629" width="0.8" height="15.0" fill="rgb(238,38,30)" rx="2" ry="2" />
<text  x="860.85" y="639.5" ></text>
</g>
<g >
<title>ReadCompactSize&lt;CDataStream&gt; (9 samples, 0.01%)</title><rect x="21.2" y="757" width="0.1" height="15.0" fill="rgb(238,96,38)" rx="2" ry="2" />
<text  x="24.19" y="767.5" ></text>
</g>
<g >
<title>ProcRand (399 samples, 0.43%)</title><rect x="1184.5" y="661" width="5.1" height="15.0" fill="rgb(253,202,18)" rx="2" ry="2" />
<text  x="1187.48" y="671.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (550 samples, 0.60%)</title><rect x="1137.3" y="661" width="7.1" height="15.0" fill="rgb(233,75,15)" rx="2" ry="2" />
<text  x="1140.31" y="671.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (72 samples, 0.08%)</title><rect x="341.6" y="597" width="0.9" height="15.0" fill="rgb(217,225,35)" rx="2" ry="2" />
<text  x="344.63" y="607.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (101 samples, 0.11%)</title><rect x="91.5" y="437" width="1.3" height="15.0" fill="rgb(244,191,39)" rx="2" ry="2" />
<text  x="94.51" y="447.5" ></text>
</g>
<g >
<title>SerializeMany&lt;CSizeComputer, prevector&lt;28u, unsigned char, unsigned int, int&gt;&gt; (55 samples, 0.06%)</title><rect x="1040.2" y="389" width="0.7" height="15.0" fill="rgb(249,123,26)" rx="2" ry="2" />
<text  x="1043.18" y="399.5" ></text>
</g>
<g >
<title>std::mutex::unlock (14 samples, 0.02%)</title><rect x="639.0" y="549" width="0.2" height="15.0" fill="rgb(225,184,37)" rx="2" ry="2" />
<text  x="641.98" y="559.5" ></text>
</g>
<g >
<title>__dbc_idup (607 samples, 0.66%)</title><rect x="342.5" y="629" width="7.8" height="15.0" fill="rgb(221,104,13)" rx="2" ry="2" />
<text  x="345.55" y="639.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Compare (720 samples, 0.78%)</title><rect x="991.8" y="581" width="9.2" height="15.0" fill="rgb(212,118,29)" rx="2" ry="2" />
<text  x="994.82" y="591.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;CTxOut const*, CTxOut*&gt; (11 samples, 0.01%)</title><rect x="455.0" y="277" width="0.1" height="15.0" fill="rgb(222,42,16)" rx="2" ry="2" />
<text  x="457.97" y="287.5" ></text>
</g>
<g >
<title>std::__fill_a&lt;unsigned char&gt; (28 samples, 0.03%)</title><rect x="463.8" y="213" width="0.3" height="15.0" fill="rgb(211,35,14)" rx="2" ry="2" />
<text  x="466.78" y="223.5" ></text>
</g>
<g >
<title>__env_open (17 samples, 0.02%)</title><rect x="1107.4" y="645" width="0.2" height="15.0" fill="rgb(248,17,33)" rx="2" ry="2" />
<text  x="1110.42" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (21 samples, 0.02%)</title><rect x="415.2" y="517" width="0.3" height="15.0" fill="rgb(207,11,16)" rx="2" ry="2" />
<text  x="418.19" y="527.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;CTransaction&gt;, true&gt;::~_Sp_ebo_helper (10 samples, 0.01%)</title><rect x="526.8" y="469" width="0.2" height="15.0" fill="rgb(206,57,14)" rx="2" ry="2" />
<text  x="529.84" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::_M_construct_node&lt;unsigned long&amp;, char*&amp;&gt; (71 samples, 0.08%)</title><rect x="1082.0" y="517" width="0.9" height="15.0" fill="rgb(246,99,41)" rx="2" ry="2" />
<text  x="1084.95" y="527.5" ></text>
</g>
<g >
<title>ReadLE64 (13 samples, 0.01%)</title><rect x="966.8" y="565" width="0.1" height="15.0" fill="rgb(250,35,29)" rx="2" ry="2" />
<text  x="969.76" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_S_key (13 samples, 0.01%)</title><rect x="1159.6" y="757" width="0.1" height="15.0" fill="rgb(243,74,4)" rx="2" ry="2" />
<text  x="1162.56" y="767.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (63 samples, 0.07%)</title><rect x="93.0" y="437" width="0.8" height="15.0" fill="rgb(241,213,0)" rx="2" ry="2" />
<text  x="96.04" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;zero_after_free_allocator&lt;char&gt; &gt;::_S_destroy&lt;zero_after_free_allocator&lt;char&gt;, char&gt; (9 samples, 0.01%)</title><rect x="37.2" y="501" width="0.1" height="15.0" fill="rgb(219,46,28)" rx="2" ry="2" />
<text  x="40.21" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_M_erase_at_end (11 samples, 0.01%)</title><rect x="477.9" y="389" width="0.1" height="15.0" fill="rgb(251,128,7)" rx="2" ry="2" />
<text  x="480.86" y="399.5" ></text>
</g>
<g >
<title>CSHA256::Write (146 samples, 0.16%)</title><rect x="1122.3" y="613" width="1.8" height="15.0" fill="rgb(231,79,12)" rx="2" ry="2" />
<text  x="1125.25" y="623.5" ></text>
</g>
<g >
<title>zero_after_free_allocator&lt;char&gt;::~zero_after_free_allocator (34 samples, 0.04%)</title><rect x="358.4" y="629" width="0.4" height="15.0" fill="rgb(213,3,4)" rx="2" ry="2" />
<text  x="361.39" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, char*&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, char*&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::end (9 samples, 0.01%)</title><rect x="610.5" y="533" width="0.1" height="15.0" fill="rgb(220,219,49)" rx="2" ry="2" />
<text  x="613.49" y="543.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned long&gt;::operator (12 samples, 0.01%)</title><rect x="612.2" y="501" width="0.1" height="15.0" fill="rgb(222,104,26)" rx="2" ry="2" />
<text  x="615.17" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::pair&lt;char*&amp;&amp;, 0ul&gt; (19 samples, 0.02%)</title><rect x="1089.1" y="469" width="0.3" height="15.0" fill="rgb(227,179,23)" rx="2" ry="2" />
<text  x="1092.12" y="479.5" ></text>
</g>
<g >
<title>Dbt::~Dbt (13 samples, 0.01%)</title><rect x="173.3" y="661" width="0.2" height="15.0" fill="rgb(221,102,37)" rx="2" ry="2" />
<text  x="176.34" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;COutPoint, COutPoint, std::_Identity&lt;COutPoint&gt;, std::less&lt;COutPoint&gt;, std::allocator&lt;COutPoint&gt; &gt;::_M_erase (11 samples, 0.01%)</title><rect x="1155.4" y="757" width="0.2" height="15.0" fill="rgb(248,157,31)" rx="2" ry="2" />
<text  x="1158.43" y="767.5" ></text>
</g>
<g >
<title>std::swap&lt;CTransaction const*&gt; (17 samples, 0.02%)</title><rect x="528.0" y="549" width="0.2" height="15.0" fill="rgb(217,2,2)" rx="2" ry="2" />
<text  x="530.98" y="559.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (65 samples, 0.07%)</title><rect x="63.1" y="533" width="0.9" height="15.0" fill="rgb(233,123,38)" rx="2" ry="2" />
<text  x="66.12" y="543.5" ></text>
</g>
<g >
<title>CDataStream::read (54 samples, 0.06%)</title><rect x="458.2" y="325" width="0.7" height="15.0" fill="rgb(237,12,6)" rx="2" ry="2" />
<text  x="461.22" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;CScriptID, std::pair&lt;CScriptID const, CScript&gt;, std::_Select1st&lt;std::pair&lt;CScriptID const, CScript&gt; &gt;, std::less&lt;CScriptID&gt;, std::allocator&lt;std::pair&lt;CScriptID const, CScript&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;CScriptID const&amp;&gt;, std::tuple&lt;&gt; &gt; (393 samples, 0.43%)</title><rect x="771.8" y="597" width="5.1" height="15.0" fill="rgb(237,116,22)" rx="2" ry="2" />
<text  x="774.83" y="607.5" ></text>
</g>
<g >
<title>std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::pair&lt;char* const&amp;, 0ul&gt; (16 samples, 0.02%)</title><rect x="1087.8" y="469" width="0.2" height="15.0" fill="rgb(212,164,8)" rx="2" ry="2" />
<text  x="1090.82" y="479.5" ></text>
</g>
<g >
<title>CDataStream::write (9,892 samples, 10.74%)</title><rect x="175.6" y="677" width="126.7" height="15.0" fill="rgb(209,195,34)" rx="2" ry="2" />
<text  x="178.60" y="687.5" >CDataStream::wr..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned char&gt; &gt;::allocate (73 samples, 0.08%)</title><rect x="461.6" y="277" width="0.9" height="15.0" fill="rgb(236,216,50)" rx="2" ry="2" />
<text  x="464.61" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (34 samples, 0.04%)</title><rect x="1025.5" y="629" width="0.4" height="15.0" fill="rgb(239,119,33)" rx="2" ry="2" />
<text  x="1028.47" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;::allocate (16 samples, 0.02%)</title><rect x="629.5" y="469" width="0.2" height="15.0" fill="rgb(215,226,22)" rx="2" ry="2" />
<text  x="632.52" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::size (10 samples, 0.01%)</title><rect x="518.7" y="293" width="0.1" height="15.0" fill="rgb(235,134,6)" rx="2" ry="2" />
<text  x="521.69" y="303.5" ></text>
</g>
<g >
<title>prevector&lt;28u, unsigned char, unsigned int, int&gt;::operator= (187 samples, 0.20%)</title><rect x="660.3" y="629" width="2.4" height="15.0" fill="rgb(213,160,2)" rx="2" ry="2" />
<text  x="663.33" y="639.5" ></text>
</g>
<g >
<title>base_blob&lt;256u&gt;::Unserialize&lt;CDataStream&gt; (16 samples, 0.02%)</title><rect x="436.7" y="181" width="0.2" height="15.0" fill="rgb(227,144,44)" rx="2" ry="2" />
<text  x="439.68" y="191.5" ></text>
</g>
<g >
<title>CDataStream::operator&gt;&gt;&lt;CKeyMetadata&amp;&gt; (712 samples, 0.77%)</title><rect x="362.0" y="677" width="9.1" height="15.0" fill="rgb(247,35,36)" rx="2" ry="2" />
<text  x="365.01" y="687.5" ></text>
</g>
<g >
<title>Unserialize_impl&lt;CDataStream, unsigned char, secure_allocator&lt;unsigned char&gt; &gt; (8 samples, 0.01%)</title><rect x="27.4" y="757" width="0.1" height="15.0" fill="rgb(208,8,54)" rx="2" ry="2" />
<text  x="30.43" y="767.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;CTransaction const, std::allocator&lt;CTransaction&gt;, deserialize_type const&amp;, CDataStream&amp;&gt; (901 samples, 0.98%)</title><rect x="1107.7" y="629" width="11.5" height="15.0" fill="rgb(212,72,28)" rx="2" ry="2" />
<text  x="1110.65" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;void*, void*&gt;, std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::pair&lt;void*, void*&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;void*, void*&gt; const, std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt; &gt; &gt; &gt;::_S_left (8 samples, 0.01%)</title><rect x="684.4" y="533" width="0.1" height="15.0" fill="rgb(245,19,27)" rx="2" ry="2" />
<text  x="687.42" y="543.5" ></text>
</g>
<g >
<title>__os_io (38 samples, 0.04%)</title><rect x="161.5" y="549" width="0.4" height="15.0" fill="rgb(225,72,0)" rx="2" ry="2" />
<text  x="164.45" y="559.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (11 samples, 0.01%)</title><rect x="65.3" y="469" width="0.1" height="15.0" fill="rgb(213,156,48)" rx="2" ry="2" />
<text  x="68.30" y="479.5" ></text>
</g>
<g >
<title>CBlockIndex::CBlockIndex (8 samples, 0.01%)</title><rect x="42.5" y="645" width="0.1" height="15.0" fill="rgb(230,86,52)" rx="2" ry="2" />
<text  x="45.46" y="655.5" ></text>
</g>
<g >
<title>std::move&lt;CKeyID&amp;&gt; (8 samples, 0.01%)</title><rect x="836.8" y="613" width="0.1" height="15.0" fill="rgb(244,85,45)" rx="2" ry="2" />
<text  x="839.76" y="623.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;CTransaction const, std::allocator&lt;CTransaction&gt;,  (8 samples, 0.01%)</title><rect x="523.6" y="501" width="0.1" height="15.0" fill="rgb(244,182,34)" rx="2" ry="2" />
<text  x="526.58" y="511.5" ></text>
</g>
<g >
<title>operator&gt; (48 samples, 0.05%)</title><rect x="47.7" y="613" width="0.6" height="15.0" fill="rgb(208,227,30)" rx="2" ry="2" />
<text  x="50.66" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::base (9 samples, 0.01%)</title><rect x="1054.9" y="565" width="0.1" height="15.0" fill="rgb(233,36,53)" rx="2" ry="2" />
<text  x="1057.86" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;char* const, unsigned long&gt; &gt;::_M_ptr (9 samples, 0.01%)</title><rect x="1166.7" y="741" width="0.2" height="15.0" fill="rgb(247,117,48)" rx="2" ry="2" />
<text  x="1169.74" y="751.5" ></text>
</g>
<g >
<title>start_thread (191 samples, 0.21%)</title><rect x="1145.3" y="741" width="2.4" height="15.0" fill="rgb(206,70,1)" rx="2" ry="2" />
<text  x="1148.29" y="751.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (8 samples, 0.01%)</title><rect x="1147.1" y="645" width="0.1" height="15.0" fill="rgb(225,229,40)" rx="2" ry="2" />
<text  x="1150.07" y="655.5" ></text>
</g>
<g >
<title>__uint32_identity (12 samples, 0.01%)</title><rect x="678.1" y="549" width="0.2" height="15.0" fill="rgb(227,101,28)" rx="2" ry="2" />
<text  x="681.11" y="559.5" ></text>
</g>
<g >
<title>__lock_get_internal (46 samples, 0.05%)</title><rect x="112.7" y="373" width="0.6" height="15.0" fill="rgb(227,6,5)" rx="2" ry="2" />
<text  x="115.70" y="383.5" ></text>
</g>
<g >
<title>WriteLE32 (11 samples, 0.01%)</title><rect x="658.2" y="613" width="0.1" height="15.0" fill="rgb(239,92,42)" rx="2" ry="2" />
<text  x="661.18" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;void*, CLockLocation&gt;, std::allocator&lt;std::pair&lt;void*, CLockLocation&gt; &gt; &gt;::pop_back (19 samples, 0.02%)</title><rect x="850.8" y="597" width="0.2" height="15.0" fill="rgb(233,161,52)" rx="2" ry="2" />
<text  x="853.80" y="607.5" ></text>
</g>
<g >
<title>SerReadWriteMany&lt;CSizeComputer, COutPoint&gt; (153 samples, 0.17%)</title><rect x="1033.6" y="485" width="1.9" height="15.0" fill="rgb(236,46,36)" rx="2" ry="2" />
<text  x="1036.58" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, false&gt; &gt;::construct&lt;std::pair&lt;char* const, std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned long const, char*&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;char* const&amp;&gt;, std::tuple&lt;&gt; &gt; (25 samples, 0.03%)</title><rect x="634.7" y="485" width="0.3" height="15.0" fill="rgb(237,206,8)" rx="2" ry="2" />
<text  x="637.69" y="495.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (197 samples, 0.21%)</title><rect x="103.1" y="453" width="2.6" height="15.0" fill="rgb(247,202,39)" rx="2" ry="2" />
<text  x="106.14" y="463.5" ></text>
</g>
<g >
<title>Serialize&lt;CHashWriter, CTransaction&gt; (279 samples, 0.30%)</title><rect x="1140.8" y="517" width="3.6" height="15.0" fill="rgb(213,153,41)" rx="2" ry="2" />
<text  x="1143.78" y="527.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (304 samples, 0.33%)</title><rect x="111.4" y="453" width="3.9" height="15.0" fill="rgb(211,157,16)" rx="2" ry="2" />
<text  x="114.43" y="463.5" ></text>
</g>
<g >
<title>__db_tas_mutex_unlock (9 samples, 0.01%)</title><rect x="78.5" y="389" width="0.2" height="15.0" fill="rgb(241,17,38)" rx="2" ry="2" />
<text  x="81.54" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, secure_allocator&lt;unsigned char&gt; &gt;::_S_relocate (23 samples, 0.02%)</title><rect x="623.3" y="629" width="0.3" height="15.0" fill="rgb(254,133,14)" rx="2" ry="2" />
<text  x="626.30" y="639.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (18 samples, 0.02%)</title><rect x="619.5" y="565" width="0.2" height="15.0" fill="rgb(218,197,44)" rx="2" ry="2" />
<text  x="622.45" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (8 samples, 0.01%)</title><rect x="570.2" y="405" width="0.1" height="15.0" fill="rgb(232,108,52)" rx="2" ry="2" />
<text  x="573.20" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, CWalletTx*&gt;, std::_Select1st&lt;std::pair&lt;long const, CWalletTx*&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, CWalletTx*&gt; &gt; &gt;::_M_begin (18 samples, 0.02%)</title><rect x="1004.9" y="613" width="0.2" height="15.0" fill="rgb(232,74,47)" rx="2" ry="2" />
<text  x="1007.88" y="623.5" ></text>
</g>
<g >
<title>_mm_sha256rnds2_epu32 (41 samples, 0.04%)</title><rect x="1119.9" y="613" width="0.6" height="15.0" fill="rgb(239,192,28)" rx="2" ry="2" />
<text  x="1122.95" y="623.5" ></text>
</g>
<g >
<title>__memp_fget (212 samples, 0.23%)</title><rect x="76.9" y="421" width="2.7" height="15.0" fill="rgb(252,7,23)" rx="2" ry="2" />
<text  x="79.90" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;char, zero_after_free_allocator&lt;char&gt; &gt;::_Vector_impl::~_Vector_impl (57 samples, 0.06%)</title><rect x="358.1" y="645" width="0.7" height="15.0" fill="rgb(253,192,11)" rx="2" ry="2" />
<text  x="361.10" y="655.5" ></text>
</g>
<g >
<title>__lock_get_internal (18 samples, 0.02%)</title><rect x="66.7" y="437" width="0.3" height="15.0" fill="rgb(254,222,21)" rx="2" ry="2" />
<text  x="69.73" y="447.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.02%)</title><rect x="132.3" y="325" width="0.3" height="15.0" fill="rgb(218,57,25)" rx="2" ry="2" />
<text  x="135.34" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;char*, std::pair&lt;char* const, unsigned long&gt;, std::allocator&lt;std::pair&lt;char* const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;char*&gt;, std::hash&lt;char*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (75 samples, 0.08%)</title><rect x="636.8" y="501" width="1.0" height="15.0" fill="rgb(210,31,22)" rx="2" ry="2" />
<text  x="639.83" y="511.5" ></text>
</g>
<g >
<title>CHash256::Write (17 samples, 0.02%)</title><rect x="511.2" y="53" width="0.2" height="15.0" fill="rgb(241,44,18)" rx="2" ry="2" />
<text  x="514.17" y="63.5" ></text>
</g>
<g >
<title>__dbc_iget (248 samples, 0.27%)</title><rect x="148.6" y="549" width="3.2" height="15.0" fill="rgb(235,102,36)" rx="2" ry="2" />
<text  x="151.61" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14 samples, 0.02%)</title><rect x="950.4" y="437" width="0.1" height="15.0" fill="rgb(231,135,5)" rx="2" ry="2" />
<text  x="953.36" y="447.5" ></text>
</g>
<g >
<title>operator/ (71 samples, 0.08%)</title><rect x="46.5" y="661" width="0.9" height="15.0" fill="rgb(212,175,50)" rx="2" ry="2" />
<text  x="49.49" y="671.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;void*, void*&gt; (60 samples, 0.07%)</title><rect x="846.9" y="517" width="0.8" height="15.0" fill="rgb(213,218,47)" rx="2" ry="2" />
<text  x="849.95" y="527.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (26 samples, 0.03%)</title><rect x="795.6" y="549" width="0.3" height="15.0" fill="rgb(221,184,29)" rx="2" ry="2" />
<text  x="798.56" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (8 samples, 0.01%)</title><rect x="413.5" y="565" width="0.1" height="15.0" fill="rgb(223,58,11)" rx="2" ry="2" />
<text  x="416.54" y="575.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, unsigned char*, unsigned char*&gt; (14 samples, 0.02%)</title><rect x="1097.1" y="549" width="0.2" height="15.0" fill="rgb(238,81,6)" rx="2" ry="2" />
<text  x="1100.14" y="559.5" ></text>
</g>
<g >
<title>__subvdi3 (13 samples, 0.01%)</title><rect x="175.4" y="629" width="0.2" height="15.0" fill="rgb(219,65,18)" rx="2" ry="2" />
<text  x="178.44" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::begin (9 samples, 0.01%)</title><rect x="1053.5" y="661" width="0.1" height="15.0" fill="rgb(217,96,11)" rx="2" ry="2" />
<text  x="1056.48" y="671.5" ></text>
</g>
<g >
<title>secp256k1_context_create (32 samples, 0.03%)</title><rect x="1149.5" y="661" width="0.4" height="15.0" fill="rgb(206,16,46)" rx="2" ry="2" />
<text  x="1152.48" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (29 samples, 0.03%)</title><rect x="551.8" y="533" width="0.4" height="15.0" fill="rgb(235,224,40)" rx="2" ry="2" />
<text  x="554.83" y="543.5" ></text>
</g>
<g >
<title>std::map&lt;uint256, CWalletTx, std::less&lt;uint256&gt;, std::allocator&lt;std::pair&lt;uint256 const, CWalletTx&gt; &gt; &gt;::find (527 samples, 0.57%)</title><rect x="934.6" y="645" width="6.8" height="15.0" fill="rgb(223,105,48)" rx="2" ry="2" />
<text  x="937.62" y="655.5" ></text>
</g>
<g >
<title>operator&lt; (11 samples, 0.01%)</title><rect x="857.6" y="597" width="0.2" height="15.0" fill="rgb(248,95,5)" rx="2" ry="2" />
<text  x="860.64" y="607.5" ></text>
</g>
<g >
<title>Serialize_impl&lt;CSizeComputer, CTxIn, std::allocator&lt;CTxIn&gt;, CTxIn&gt; (476 samples, 0.52%)</title><rect x="1032.6" y="549" width="6.1" height="15.0" fill="rgb(226,50,30)" rx="2" ry="2" />
<text  x="1035.65" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (16 samples, 0.02%)</title><rect x="426.2" y="581" width="0.2" height="15.0" fill="rgb(214,119,45)" rx="2" ry="2" />
<text  x="429.18" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned char&gt;::construct&lt;unsigned char&gt; (67 samples, 0.07%)</title><rect x="622.0" y="581" width="0.9" height="15.0" fill="rgb(253,144,0)" rx="2" ry="2" />
<text  x="625.03" y="591.5" ></text>
</g>
<g >
<title>[libdb_cxx-4.8.so] (33 samples, 0.04%)</title><rect x="146.8" y="517" width="0.5" height="15.0" fill="rgb(230,55,8)" rx="2" ry="2" />
<text  x="149.84" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::vector (30 samples, 0.03%)</title><rect x="1061.7" y="517" width="0.4" height="15.0" fill="rgb(234,181,37)" rx="2" ry="2" />
<text  x="1064.69" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Vector_base (27 samples, 0.03%)</title><rect x="973.4" y="517" width="0.3" height="15.0" fill="rgb(239,197,32)" rx="2" ry="2" />
<text  x="976.40" y="527.5" ></text>
</g>
</g>
</svg>
